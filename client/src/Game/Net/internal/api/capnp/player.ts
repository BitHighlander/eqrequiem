// This file has been automatically generated by capnp-es.
import * as $ from "capnp-es";
import { Vector3, InventorySlot, TypelessInventorySlot, EntityId, Duel, DuelResponse, AdventureInfo, TextureProfile, TintProfile, Spawns, Spawn, ClientZoneEntry, ServerZoneEntry, MemorizeSpell, Charm, InterruptCast, DeleteSpell, ManaChange, SwapSpell, BeginCast, CastSpell, SpawnAppearance, SpellBuff, SpellBuffPacket, ItemNamePacket, ItemProperties, GMTrainee, GMTrainEnd, GMSkillChange, ConsentResponse, NameGeneration, NameApprove, CharCreate, AAArray, Disciplines, Tribute, BandolierItem, Bandolier, PotionBeltItem, PotionBelt, StringList, GroupLeadershipAA, RaidLeadershipAA, LeadershipAA, Bind, PVPStatsEntry, ClientTarget, PetCommand, DeleteSpawn, ChannelMessage, CommandMessage, SpecialMesg, WearChange, BindWound, Animation, Action, CombatDamage, Consider, Death, BecomeCorpse, EntityPositionUpdateBase, EntityPositionUpdate, EntityAnimation, ClientPositionUpdate, SpawnHPUpdate, SpawnHPUpdate2, Stamina, LevelUpdate, ExpUpdate, Consume, DeleteItem, MoveItem, MultiMoveItemSub, MultiMoveItem, MoveCoin, TradeBusy, TradeCoin, TradeMoneyUpdate, Surname, GuildsList, MoneyOnCorpse, LootingItem, GuildManageStatus, GuildJoin, GuildInviteAccept, GuildManageRemove, Guildcommand, OnLevelMessage, GMZoneRequest, GMSummon, GMGoto, GMLastName, CombatAbility, InstillDoubt, GiveItem, RandomReq, RandomReply, LFG, LFGAppearance, TimeOfDay, MerchantClick, MerchantSell, MerchantPurchase, MerchantDelItem, AdventurePurchase, AdventureSell, AdventurePointsUpdate, AdventureFinish, AdventureRequest, AdventureRequestResponse, Illusion, SkillUpdate, ZoneUnavail, GroupGeneric, GroupCancel, GroupUpdate, GroupUpdate2, GroupJoin, FaceChange, TradeRequest, TradeAccept, CancelTrade, PetitionUpdate, Petition, WhoAll, Stun, AugmentItem, Emote, Inspect, InspectResponse, SetDataRate, SetServerFilter, SetServerFilterAck, IncreaseStat, GMName, GMDelCorpse, GMKick, GMKill, GMEmoteZone, BookText, BookRequest, Object, ClickObject, ClickObjectAction, Shielding, ClickObjectAck, CloseContainer, Door, DoorSpawns, ClickDoor, MoveDoor, BecomeNPC, Underworld, Resurrect, SetRunMode, EnvDamage2, BazaarWindowStart, BazaarWelcome, BazaarSearch, BazaarInspect, BazaarReturnDone, BazaarSearchResults, ServerSideFilters, ItemViewRequest, PickPocket, ActionPickPocket, LogServer, ClientError, MobHealth, Track, TrackTarget, Tracking, ZoneServerInfo, WhoAllPlayer, WhoAllReturn, Trader, ClickTrader, GetItems, BecomeTrader, TraderShowItems, TraderBuy, TraderItemUpdate, MoneyUpdate, TraderDelItem, TraderClick, FormattedMessage, SimpleMessage, GuildMemberEntry, GuildMembers, GuildMOTD, GuildUpdatePublicNote, GuildDemote, GuildRemove, GuildMakeLeader, MakePet, GroundSpawn, GroundSpawns, ApproveZone, ZoneInSendName, ZoneInSendName2, StartTribute, TributeLevel, TributeAbility, GuildTributeAbility, SelectTributeReq, SelectTributeReply, TributeInfo, TributeItem, TributePoint, TributeMoney, Split, NewCombine, TradeskillFavorites, RecipesSearch, RecipeReply, RecipeAutoCombine, LevelAppearance, MerchantList, TempMerchantList, FindPersonPoint, FindPersonRequest, FindPersonResult, MobRename, PlayMP3, TitleEntry, Titles, TitleListEntry, TitleList, SetTitle, SetTitleReply, TaskDescription, TaskMemberList, TaskActivity, TaskHistoryEntry, TaskHistory, AcceptNewTask, AvaliableTask, BankerChange, LeadershipExpUpdate, UpdateLeadershipAA, LeadExpUpdate, RaidGeneral, RaidAddMember, RaidNote, RaidMOTD, RaidLeadershipUpdate, RaidCreate, RaidMemberInfo, RaidDetails, RaidMembers, DynamicWall, BandolierCreate, BandolierDelete, BandolierSet, Arrow, Consent, AdventureMerchant, GMtoggle, GroupInvite, ColoredText, UseAA, AAAbility, SendAA, AAList, AAAction, AAExpUpdate, AltAdvStats, PlayerAA, AATable, Weather, LoadSpellSet, ApplyPoison, GuildMemberUpdate, VeteranRewardItem, VeteranReward, ExpeditionInvite, ExpeditionInviteResponse, DynamicZoneInfo, DynamicZoneMemberEntry, DynamicZoneMemberList, DynamicZoneMemberListName, ExpeditionLockoutTimerEntry, ExpeditionLockoutTimers, DynamicZoneLeaderName, ExpeditionCommand, ExpeditionCommandSwap, ExpeditionExpireWarning, DynamicZoneCompassEntry, DynamicZoneCompass, DynamicZoneChooseZoneEntry, DynamicZoneChooseZone, DynamicZoneChooseZoneReply, LFGuildSearchPlayer, LFGuildSearchGuild, LFGuildPlayertoggle, LFGuildGuildtoggle, SayLinkBodyFrame, WebLogin, WebLoginServerRequest, WebLoginReply, WebLoginWorldServer, WebLoginServerResponse, WebPlayEverquestRequest, WebPlayEverquestResponse, WebSession, Int, Bool, String } from "./common.js";
import { ItemInstance, BulkItemPacket } from "./item.js";
export const _capnpFileId = BigInt("0xcdefabcdefabc234");
export class CharacterSelect extends $.Struct {
  static readonly _capnp = {
    displayName: "CharacterSelect",
    id: "e0ce907abb969349",
    size: new $.ObjectSize(8, 1)
  };
  static _Characters: $.ListCtor<CharacterSelectEntry>;
  get characterCount(): number {
    return $.utils.getInt32(0, this);
  }
  set characterCount(value: number) {
    $.utils.setInt32(0, value, this);
  }
  _adoptCharacters(value: $.Orphan<$.List<CharacterSelectEntry>>): void {
    $.utils.adopt(value, $.utils.getPointer(0, this));
  }
  _disownCharacters(): $.Orphan<$.List<CharacterSelectEntry>> {
    return $.utils.disown(this.characters);
  }
  get characters(): $.List<CharacterSelectEntry> {
    return $.utils.getList(0, CharacterSelect._Characters, this);
  }
  _hasCharacters(): boolean {
    return !$.utils.isNull($.utils.getPointer(0, this));
  }
  _initCharacters(length: number): $.List<CharacterSelectEntry> {
    return $.utils.initList(0, CharacterSelect._Characters, length, this);
  }
  set characters(value: $.List<CharacterSelectEntry>) {
    $.utils.copyFrom(value, $.utils.getPointer(0, this));
  }
  toString(): string {
    return "CharacterSelect_" + super.toString();
  }
}
export class CharacterSelectEntry extends $.Struct {
  static readonly _capnp = {
    displayName: "CharacterSelectEntry",
    id: "ca9e1a4afe3dca58",
    size: new $.ObjectSize(56, 2)
  };
  static _Items: $.ListCtor<ItemInstance>;
  get name(): string {
    return $.utils.getText(0, this);
  }
  set name(value: string) {
    $.utils.setText(0, value, this);
  }
  get charClass(): number {
    return $.utils.getInt32(0, this);
  }
  set charClass(value: number) {
    $.utils.setInt32(0, value, this);
  }
  get race(): number {
    return $.utils.getInt32(4, this);
  }
  set race(value: number) {
    $.utils.setInt32(4, value, this);
  }
  get level(): number {
    return $.utils.getInt32(8, this);
  }
  set level(value: number) {
    $.utils.setInt32(8, value, this);
  }
  get zone(): number {
    return $.utils.getInt32(12, this);
  }
  set zone(value: number) {
    $.utils.setInt32(12, value, this);
  }
  get instance(): number {
    return $.utils.getInt32(16, this);
  }
  set instance(value: number) {
    $.utils.setInt32(16, value, this);
  }
  get gender(): number {
    return $.utils.getInt32(20, this);
  }
  set gender(value: number) {
    $.utils.setInt32(20, value, this);
  }
  get face(): number {
    return $.utils.getInt32(24, this);
  }
  set face(value: number) {
    $.utils.setInt32(24, value, this);
  }
  _adoptItems(value: $.Orphan<$.List<ItemInstance>>): void {
    $.utils.adopt(value, $.utils.getPointer(1, this));
  }
  _disownItems(): $.Orphan<$.List<ItemInstance>> {
    return $.utils.disown(this.items);
  }
  get items(): $.List<ItemInstance> {
    return $.utils.getList(1, CharacterSelectEntry._Items, this);
  }
  _hasItems(): boolean {
    return !$.utils.isNull($.utils.getPointer(1, this));
  }
  _initItems(length: number): $.List<ItemInstance> {
    return $.utils.initList(1, CharacterSelectEntry._Items, length, this);
  }
  set items(value: $.List<ItemInstance>) {
    $.utils.copyFrom(value, $.utils.getPointer(1, this));
  }
  get deity(): number {
    return $.utils.getInt32(28, this);
  }
  set deity(value: number) {
    $.utils.setInt32(28, value, this);
  }
  get primaryIdFile(): number {
    return $.utils.getInt32(32, this);
  }
  set primaryIdFile(value: number) {
    $.utils.setInt32(32, value, this);
  }
  get secondaryIdFile(): number {
    return $.utils.getInt32(36, this);
  }
  set secondaryIdFile(value: number) {
    $.utils.setInt32(36, value, this);
  }
  get goHome(): number {
    return $.utils.getInt32(40, this);
  }
  set goHome(value: number) {
    $.utils.setInt32(40, value, this);
  }
  get enabled(): number {
    return $.utils.getInt32(44, this);
  }
  set enabled(value: number) {
    $.utils.setInt32(44, value, this);
  }
  get lastLogin(): number {
    return $.utils.getInt32(48, this);
  }
  set lastLogin(value: number) {
    $.utils.setInt32(48, value, this);
  }
  toString(): string {
    return "CharacterSelectEntry_" + super.toString();
  }
}
export class CharSelectEquip extends $.Struct {
  static readonly _capnp = {
    displayName: "CharSelectEquip",
    id: "a41074130e196783",
    size: new $.ObjectSize(8, 1)
  };
  get material(): number {
    return $.utils.getInt32(0, this);
  }
  set material(value: number) {
    $.utils.setInt32(0, value, this);
  }
  _adoptColor(value: $.Orphan<Tint>): void {
    $.utils.adopt(value, $.utils.getPointer(0, this));
  }
  _disownColor(): $.Orphan<Tint> {
    return $.utils.disown(this.color);
  }
  get color(): Tint {
    return $.utils.getStruct(0, Tint, this);
  }
  _hasColor(): boolean {
    return !$.utils.isNull($.utils.getPointer(0, this));
  }
  _initColor(): Tint {
    return $.utils.initStructAt(0, Tint, this);
  }
  set color(value: Tint) {
    $.utils.copyFrom(value, $.utils.getPointer(0, this));
  }
  toString(): string {
    return "CharSelectEquip_" + super.toString();
  }
}
export class PlayerProfile extends $.Struct {
  static readonly _capnp = {
    displayName: "PlayerProfile",
    id: "b8375f7f6b27403c",
    size: new $.ObjectSize(400, 19)
  };
  static _Binds: $.ListCtor<Bind>;
  static _AaArray: $.ListCtor<AAArray>;
  static _Buffs: $.ListCtor<SpellBuff>;
  static _Bandoliers: $.ListCtor<Bandolier>;
  static _GroupMembers: $.ListCtor<StringList>;
  static _InventoryItems: $.ListCtor<ItemInstance>;
  get gender(): number {
    return $.utils.getInt32(0, this);
  }
  set gender(value: number) {
    $.utils.setInt32(0, value, this);
  }
  get race(): number {
    return $.utils.getInt32(4, this);
  }
  set race(value: number) {
    $.utils.setInt32(4, value, this);
  }
  get charClass(): number {
    return $.utils.getInt32(8, this);
  }
  set charClass(value: number) {
    $.utils.setInt32(8, value, this);
  }
  get level(): number {
    return $.utils.getInt32(12, this);
  }
  set level(value: number) {
    $.utils.setInt32(12, value, this);
  }
  _adoptBinds(value: $.Orphan<$.List<Bind>>): void {
    $.utils.adopt(value, $.utils.getPointer(0, this));
  }
  _disownBinds(): $.Orphan<$.List<Bind>> {
    return $.utils.disown(this.binds);
  }
  get binds(): $.List<Bind> {
    return $.utils.getList(0, PlayerProfile._Binds, this);
  }
  _hasBinds(): boolean {
    return !$.utils.isNull($.utils.getPointer(0, this));
  }
  _initBinds(length: number): $.List<Bind> {
    return $.utils.initList(0, PlayerProfile._Binds, length, this);
  }
  set binds(value: $.List<Bind>) {
    $.utils.copyFrom(value, $.utils.getPointer(0, this));
  }
  get deity(): number {
    return $.utils.getInt32(16, this);
  }
  set deity(value: number) {
    $.utils.setInt32(16, value, this);
  }
  get intoxication(): number {
    return $.utils.getInt32(20, this);
  }
  set intoxication(value: number) {
    $.utils.setInt32(20, value, this);
  }
  _adoptSpellSlotRefresh(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(1, this));
  }
  _disownSpellSlotRefresh(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.spellSlotRefresh);
  }
  get spellSlotRefresh(): $.List<number> {
    return $.utils.getList(1, $.Int32List, this);
  }
  _hasSpellSlotRefresh(): boolean {
    return !$.utils.isNull($.utils.getPointer(1, this));
  }
  _initSpellSlotRefresh(length: number): $.List<number> {
    return $.utils.initList(1, $.Int32List, length, this);
  }
  set spellSlotRefresh(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(1, this));
  }
  get abilitySlotRefresh(): number {
    return $.utils.getInt32(24, this);
  }
  set abilitySlotRefresh(value: number) {
    $.utils.setInt32(24, value, this);
  }
  _adoptItemMaterial(value: $.Orphan<TextureProfile>): void {
    $.utils.adopt(value, $.utils.getPointer(2, this));
  }
  _disownItemMaterial(): $.Orphan<TextureProfile> {
    return $.utils.disown(this.itemMaterial);
  }
  get itemMaterial(): TextureProfile {
    return $.utils.getStruct(2, TextureProfile, this);
  }
  _hasItemMaterial(): boolean {
    return !$.utils.isNull($.utils.getPointer(2, this));
  }
  _initItemMaterial(): TextureProfile {
    return $.utils.initStructAt(2, TextureProfile, this);
  }
  set itemMaterial(value: TextureProfile) {
    $.utils.copyFrom(value, $.utils.getPointer(2, this));
  }
  get itemTint(): number {
    return $.utils.getInt32(28, this);
  }
  set itemTint(value: number) {
    $.utils.setInt32(28, value, this);
  }
  _adoptAaArray(value: $.Orphan<$.List<AAArray>>): void {
    $.utils.adopt(value, $.utils.getPointer(3, this));
  }
  _disownAaArray(): $.Orphan<$.List<AAArray>> {
    return $.utils.disown(this.aaArray);
  }
  get aaArray(): $.List<AAArray> {
    return $.utils.getList(3, PlayerProfile._AaArray, this);
  }
  _hasAaArray(): boolean {
    return !$.utils.isNull($.utils.getPointer(3, this));
  }
  _initAaArray(length: number): $.List<AAArray> {
    return $.utils.initList(3, PlayerProfile._AaArray, length, this);
  }
  set aaArray(value: $.List<AAArray>) {
    $.utils.copyFrom(value, $.utils.getPointer(3, this));
  }
  get points(): number {
    return $.utils.getInt32(32, this);
  }
  set points(value: number) {
    $.utils.setInt32(32, value, this);
  }
  get mana(): number {
    return $.utils.getInt32(36, this);
  }
  set mana(value: number) {
    $.utils.setInt32(36, value, this);
  }
  get curHp(): number {
    return $.utils.getInt32(40, this);
  }
  set curHp(value: number) {
    $.utils.setInt32(40, value, this);
  }
  get str(): number {
    return $.utils.getInt32(44, this);
  }
  set str(value: number) {
    $.utils.setInt32(44, value, this);
  }
  get sta(): number {
    return $.utils.getInt32(48, this);
  }
  set sta(value: number) {
    $.utils.setInt32(48, value, this);
  }
  get cha(): number {
    return $.utils.getInt32(52, this);
  }
  set cha(value: number) {
    $.utils.setInt32(52, value, this);
  }
  get dex(): number {
    return $.utils.getInt32(56, this);
  }
  set dex(value: number) {
    $.utils.setInt32(56, value, this);
  }
  get intel(): number {
    return $.utils.getInt32(60, this);
  }
  set intel(value: number) {
    $.utils.setInt32(60, value, this);
  }
  get agi(): number {
    return $.utils.getInt32(64, this);
  }
  set agi(value: number) {
    $.utils.setInt32(64, value, this);
  }
  get wis(): number {
    return $.utils.getInt32(68, this);
  }
  set wis(value: number) {
    $.utils.setInt32(68, value, this);
  }
  get face(): number {
    return $.utils.getInt32(72, this);
  }
  set face(value: number) {
    $.utils.setInt32(72, value, this);
  }
  _adoptSpellBook(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(4, this));
  }
  _disownSpellBook(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.spellBook);
  }
  get spellBook(): $.List<number> {
    return $.utils.getList(4, $.Int32List, this);
  }
  _hasSpellBook(): boolean {
    return !$.utils.isNull($.utils.getPointer(4, this));
  }
  _initSpellBook(length: number): $.List<number> {
    return $.utils.initList(4, $.Int32List, length, this);
  }
  set spellBook(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(4, this));
  }
  _adoptMemSpells(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(5, this));
  }
  _disownMemSpells(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.memSpells);
  }
  get memSpells(): $.List<number> {
    return $.utils.getList(5, $.Int32List, this);
  }
  _hasMemSpells(): boolean {
    return !$.utils.isNull($.utils.getPointer(5, this));
  }
  _initMemSpells(length: number): $.List<number> {
    return $.utils.initList(5, $.Int32List, length, this);
  }
  set memSpells(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(5, this));
  }
  get platinum(): number {
    return $.utils.getInt32(76, this);
  }
  set platinum(value: number) {
    $.utils.setInt32(76, value, this);
  }
  get gold(): number {
    return $.utils.getInt32(80, this);
  }
  set gold(value: number) {
    $.utils.setInt32(80, value, this);
  }
  get silver(): number {
    return $.utils.getInt32(84, this);
  }
  set silver(value: number) {
    $.utils.setInt32(84, value, this);
  }
  get copper(): number {
    return $.utils.getInt32(88, this);
  }
  set copper(value: number) {
    $.utils.setInt32(88, value, this);
  }
  get platinumCursor(): number {
    return $.utils.getInt32(92, this);
  }
  set platinumCursor(value: number) {
    $.utils.setInt32(92, value, this);
  }
  get goldCursor(): number {
    return $.utils.getInt32(96, this);
  }
  set goldCursor(value: number) {
    $.utils.setInt32(96, value, this);
  }
  get silverCursor(): number {
    return $.utils.getInt32(100, this);
  }
  set silverCursor(value: number) {
    $.utils.setInt32(100, value, this);
  }
  get copperCursor(): number {
    return $.utils.getInt32(104, this);
  }
  set copperCursor(value: number) {
    $.utils.setInt32(104, value, this);
  }
  _adoptSkills(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(6, this));
  }
  _disownSkills(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.skills);
  }
  get skills(): $.List<number> {
    return $.utils.getList(6, $.Int32List, this);
  }
  _hasSkills(): boolean {
    return !$.utils.isNull($.utils.getPointer(6, this));
  }
  _initSkills(length: number): $.List<number> {
    return $.utils.initList(6, $.Int32List, length, this);
  }
  set skills(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(6, this));
  }
  _adoptInnateSkills(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(7, this));
  }
  _disownInnateSkills(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.innateSkills);
  }
  get innateSkills(): $.List<number> {
    return $.utils.getList(7, $.Int32List, this);
  }
  _hasInnateSkills(): boolean {
    return !$.utils.isNull($.utils.getPointer(7, this));
  }
  _initInnateSkills(length: number): $.List<number> {
    return $.utils.initList(7, $.Int32List, length, this);
  }
  set innateSkills(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(7, this));
  }
  get toxicity(): number {
    return $.utils.getInt32(108, this);
  }
  set toxicity(value: number) {
    $.utils.setInt32(108, value, this);
  }
  get thirstLevel(): number {
    return $.utils.getInt32(112, this);
  }
  set thirstLevel(value: number) {
    $.utils.setInt32(112, value, this);
  }
  get hungerLevel(): number {
    return $.utils.getInt32(116, this);
  }
  set hungerLevel(value: number) {
    $.utils.setInt32(116, value, this);
  }
  _adoptBuffs(value: $.Orphan<$.List<SpellBuff>>): void {
    $.utils.adopt(value, $.utils.getPointer(8, this));
  }
  _disownBuffs(): $.Orphan<$.List<SpellBuff>> {
    return $.utils.disown(this.buffs);
  }
  get buffs(): $.List<SpellBuff> {
    return $.utils.getList(8, PlayerProfile._Buffs, this);
  }
  _hasBuffs(): boolean {
    return !$.utils.isNull($.utils.getPointer(8, this));
  }
  _initBuffs(length: number): $.List<SpellBuff> {
    return $.utils.initList(8, PlayerProfile._Buffs, length, this);
  }
  set buffs(value: $.List<SpellBuff>) {
    $.utils.copyFrom(value, $.utils.getPointer(8, this));
  }
  _adoptDisciplines(value: $.Orphan<Disciplines>): void {
    $.utils.adopt(value, $.utils.getPointer(9, this));
  }
  _disownDisciplines(): $.Orphan<Disciplines> {
    return $.utils.disown(this.disciplines);
  }
  get disciplines(): Disciplines {
    return $.utils.getStruct(9, Disciplines, this);
  }
  _hasDisciplines(): boolean {
    return !$.utils.isNull($.utils.getPointer(9, this));
  }
  _initDisciplines(): Disciplines {
    return $.utils.initStructAt(9, Disciplines, this);
  }
  set disciplines(value: Disciplines) {
    $.utils.copyFrom(value, $.utils.getPointer(9, this));
  }
  _adoptRecastTimers(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(10, this));
  }
  _disownRecastTimers(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.recastTimers);
  }
  get recastTimers(): $.List<number> {
    return $.utils.getList(10, $.Int32List, this);
  }
  _hasRecastTimers(): boolean {
    return !$.utils.isNull($.utils.getPointer(10, this));
  }
  _initRecastTimers(length: number): $.List<number> {
    return $.utils.initList(10, $.Int32List, length, this);
  }
  set recastTimers(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(10, this));
  }
  get endurance(): number {
    return $.utils.getInt32(120, this);
  }
  set endurance(value: number) {
    $.utils.setInt32(120, value, this);
  }
  get aapointsSpent(): number {
    return $.utils.getInt32(124, this);
  }
  set aapointsSpent(value: number) {
    $.utils.setInt32(124, value, this);
  }
  get aapoints(): number {
    return $.utils.getInt32(128, this);
  }
  set aapoints(value: number) {
    $.utils.setInt32(128, value, this);
  }
  _adoptBandoliers(value: $.Orphan<$.List<Bandolier>>): void {
    $.utils.adopt(value, $.utils.getPointer(11, this));
  }
  _disownBandoliers(): $.Orphan<$.List<Bandolier>> {
    return $.utils.disown(this.bandoliers);
  }
  get bandoliers(): $.List<Bandolier> {
    return $.utils.getList(11, PlayerProfile._Bandoliers, this);
  }
  _hasBandoliers(): boolean {
    return !$.utils.isNull($.utils.getPointer(11, this));
  }
  _initBandoliers(length: number): $.List<Bandolier> {
    return $.utils.initList(11, PlayerProfile._Bandoliers, length, this);
  }
  set bandoliers(value: $.List<Bandolier>) {
    $.utils.copyFrom(value, $.utils.getPointer(11, this));
  }
  _adoptPotionbelt(value: $.Orphan<PotionBelt>): void {
    $.utils.adopt(value, $.utils.getPointer(12, this));
  }
  _disownPotionbelt(): $.Orphan<PotionBelt> {
    return $.utils.disown(this.potionbelt);
  }
  get potionbelt(): PotionBelt {
    return $.utils.getStruct(12, PotionBelt, this);
  }
  _hasPotionbelt(): boolean {
    return !$.utils.isNull($.utils.getPointer(12, this));
  }
  _initPotionbelt(): PotionBelt {
    return $.utils.initStructAt(12, PotionBelt, this);
  }
  set potionbelt(value: PotionBelt) {
    $.utils.copyFrom(value, $.utils.getPointer(12, this));
  }
  get availableSlots(): number {
    return $.utils.getInt32(132, this);
  }
  set availableSlots(value: number) {
    $.utils.setInt32(132, value, this);
  }
  get name(): string {
    return $.utils.getText(13, this);
  }
  set name(value: string) {
    $.utils.setText(13, value, this);
  }
  get lastName(): string {
    return $.utils.getText(14, this);
  }
  set lastName(value: string) {
    $.utils.setText(14, value, this);
  }
  get guildId(): number {
    return $.utils.getInt32(136, this);
  }
  set guildId(value: number) {
    $.utils.setInt32(136, value, this);
  }
  get birthday(): number {
    return $.utils.getInt32(140, this);
  }
  set birthday(value: number) {
    $.utils.setInt32(140, value, this);
  }
  get lastlogin(): number {
    return $.utils.getInt32(144, this);
  }
  set lastlogin(value: number) {
    $.utils.setInt32(144, value, this);
  }
  get timePlayedMin(): number {
    return $.utils.getInt32(148, this);
  }
  set timePlayedMin(value: number) {
    $.utils.setInt32(148, value, this);
  }
  get pvp(): number {
    return $.utils.getInt32(152, this);
  }
  set pvp(value: number) {
    $.utils.setInt32(152, value, this);
  }
  get anon(): number {
    return $.utils.getInt32(156, this);
  }
  set anon(value: number) {
    $.utils.setInt32(156, value, this);
  }
  get gm(): number {
    return $.utils.getInt32(160, this);
  }
  set gm(value: number) {
    $.utils.setInt32(160, value, this);
  }
  get guildrank(): number {
    return $.utils.getInt32(164, this);
  }
  set guildrank(value: number) {
    $.utils.setInt32(164, value, this);
  }
  get guildbanker(): number {
    return $.utils.getInt32(168, this);
  }
  set guildbanker(value: number) {
    $.utils.setInt32(168, value, this);
  }
  get exp(): number {
    return $.utils.getInt32(172, this);
  }
  set exp(value: number) {
    $.utils.setInt32(172, value, this);
  }
  get timeentitledonaccount(): number {
    return $.utils.getInt32(176, this);
  }
  set timeentitledonaccount(value: number) {
    $.utils.setInt32(176, value, this);
  }
  _adoptLanguages(value: $.Orphan<$.List<number>>): void {
    $.utils.adopt(value, $.utils.getPointer(15, this));
  }
  _disownLanguages(): $.Orphan<$.List<number>> {
    return $.utils.disown(this.languages);
  }
  get languages(): $.List<number> {
    return $.utils.getList(15, $.Int32List, this);
  }
  _hasLanguages(): boolean {
    return !$.utils.isNull($.utils.getPointer(15, this));
  }
  _initLanguages(length: number): $.List<number> {
    return $.utils.initList(15, $.Int32List, length, this);
  }
  set languages(value: $.List<number>) {
    $.utils.copyFrom(value, $.utils.getPointer(15, this));
  }
  get x(): number {
    return $.utils.getFloat32(180, this);
  }
  set x(value: number) {
    $.utils.setFloat32(180, value, this);
  }
  get y(): number {
    return $.utils.getFloat32(184, this);
  }
  set y(value: number) {
    $.utils.setFloat32(184, value, this);
  }
  get z(): number {
    return $.utils.getFloat32(188, this);
  }
  set z(value: number) {
    $.utils.setFloat32(188, value, this);
  }
  get heading(): number {
    return $.utils.getFloat32(192, this);
  }
  set heading(value: number) {
    $.utils.setFloat32(192, value, this);
  }
  get platinumBank(): number {
    return $.utils.getInt32(196, this);
  }
  set platinumBank(value: number) {
    $.utils.setInt32(196, value, this);
  }
  get goldBank(): number {
    return $.utils.getInt32(200, this);
  }
  set goldBank(value: number) {
    $.utils.setInt32(200, value, this);
  }
  get silverBank(): number {
    return $.utils.getInt32(204, this);
  }
  set silverBank(value: number) {
    $.utils.setInt32(204, value, this);
  }
  get copperBank(): number {
    return $.utils.getInt32(208, this);
  }
  set copperBank(value: number) {
    $.utils.setInt32(208, value, this);
  }
  get platinumShared(): number {
    return $.utils.getInt32(212, this);
  }
  set platinumShared(value: number) {
    $.utils.setInt32(212, value, this);
  }
  get expansions(): number {
    return $.utils.getInt32(216, this);
  }
  set expansions(value: number) {
    $.utils.setInt32(216, value, this);
  }
  get autosplit(): number {
    return $.utils.getInt32(220, this);
  }
  set autosplit(value: number) {
    $.utils.setInt32(220, value, this);
  }
  get zoneId(): number {
    return $.utils.getInt32(224, this);
  }
  set zoneId(value: number) {
    $.utils.setInt32(224, value, this);
  }
  get zoneInstance(): number {
    return $.utils.getInt32(228, this);
  }
  set zoneInstance(value: number) {
    $.utils.setInt32(228, value, this);
  }
  _adoptGroupMembers(value: $.Orphan<$.List<StringList>>): void {
    $.utils.adopt(value, $.utils.getPointer(16, this));
  }
  _disownGroupMembers(): $.Orphan<$.List<StringList>> {
    return $.utils.disown(this.groupMembers);
  }
  get groupMembers(): $.List<StringList> {
    return $.utils.getList(16, PlayerProfile._GroupMembers, this);
  }
  _hasGroupMembers(): boolean {
    return !$.utils.isNull($.utils.getPointer(16, this));
  }
  _initGroupMembers(length: number): $.List<StringList> {
    return $.utils.initList(16, PlayerProfile._GroupMembers, length, this);
  }
  set groupMembers(value: $.List<StringList>) {
    $.utils.copyFrom(value, $.utils.getPointer(16, this));
  }
  get groupLeader(): string {
    return $.utils.getText(17, this);
  }
  set groupLeader(value: string) {
    $.utils.setText(17, value, this);
  }
  get entityid(): number {
    return $.utils.getInt32(232, this);
  }
  set entityid(value: number) {
    $.utils.setInt32(232, value, this);
  }
  get leadAaActive(): number {
    return $.utils.getInt32(236, this);
  }
  set leadAaActive(value: number) {
    $.utils.setInt32(236, value, this);
  }
  get airRemaining(): number {
    return $.utils.getInt32(240, this);
  }
  set airRemaining(value: number) {
    $.utils.setInt32(240, value, this);
  }
  get expAa(): number {
    return $.utils.getInt32(244, this);
  }
  set expAa(value: number) {
    $.utils.setInt32(244, value, this);
  }
  get groupAutoconsent(): number {
    return $.utils.getInt32(248, this);
  }
  set groupAutoconsent(value: number) {
    $.utils.setInt32(248, value, this);
  }
  get raidAutoconsent(): number {
    return $.utils.getInt32(252, this);
  }
  set raidAutoconsent(value: number) {
    $.utils.setInt32(252, value, this);
  }
  get guildAutoconsent(): number {
    return $.utils.getInt32(256, this);
  }
  set guildAutoconsent(value: number) {
    $.utils.setInt32(256, value, this);
  }
  get showhelm(): number {
    return $.utils.getInt32(260, this);
  }
  set showhelm(value: number) {
    $.utils.setInt32(260, value, this);
  }
  _adoptInventoryItems(value: $.Orphan<$.List<ItemInstance>>): void {
    $.utils.adopt(value, $.utils.getPointer(18, this));
  }
  _disownInventoryItems(): $.Orphan<$.List<ItemInstance>> {
    return $.utils.disown(this.inventoryItems);
  }
  get inventoryItems(): $.List<ItemInstance> {
    return $.utils.getList(18, PlayerProfile._InventoryItems, this);
  }
  _hasInventoryItems(): boolean {
    return !$.utils.isNull($.utils.getPointer(18, this));
  }
  _initInventoryItems(length: number): $.List<ItemInstance> {
    return $.utils.initList(18, PlayerProfile._InventoryItems, length, this);
  }
  set inventoryItems(value: $.List<ItemInstance>) {
    $.utils.copyFrom(value, $.utils.getPointer(18, this));
  }
  get spawnId(): number {
    return $.utils.getInt32(264, this);
  }
  set spawnId(value: number) {
    $.utils.setInt32(264, value, this);
  }
  get status(): number {
    return $.utils.getInt32(268, this);
  }
  set status(value: number) {
    $.utils.setInt32(268, value, this);
  }
  get aaPoints(): number {
    return $.utils.getInt32(272, this);
  }
  set aaPoints(value: number) {
    $.utils.setInt32(272, value, this);
  }
  get ac(): number {
    return $.utils.getInt32(276, this);
  }
  set ac(value: number) {
    $.utils.setInt32(276, value, this);
  }
  get magicResist(): number {
    return $.utils.getInt32(280, this);
  }
  set magicResist(value: number) {
    $.utils.setInt32(280, value, this);
  }
  get fireResist(): number {
    return $.utils.getInt32(284, this);
  }
  set fireResist(value: number) {
    $.utils.setInt32(284, value, this);
  }
  get coldResist(): number {
    return $.utils.getInt32(288, this);
  }
  set coldResist(value: number) {
    $.utils.setInt32(288, value, this);
  }
  get poisonResist(): number {
    return $.utils.getInt32(292, this);
  }
  set poisonResist(value: number) {
    $.utils.setInt32(292, value, this);
  }
  get diseaseResist(): number {
    return $.utils.getInt32(296, this);
  }
  set diseaseResist(value: number) {
    $.utils.setInt32(296, value, this);
  }
  get haste(): number {
    return $.utils.getInt32(300, this);
  }
  set haste(value: number) {
    $.utils.setInt32(300, value, this);
  }
  get accuracy(): number {
    return $.utils.getInt32(304, this);
  }
  set accuracy(value: number) {
    $.utils.setInt32(304, value, this);
  }
  get attack(): number {
    return $.utils.getInt32(308, this);
  }
  set attack(value: number) {
    $.utils.setInt32(308, value, this);
  }
  get avoidance(): number {
    return $.utils.getInt32(312, this);
  }
  set avoidance(value: number) {
    $.utils.setInt32(312, value, this);
  }
  get clairvoyance(): number {
    return $.utils.getInt32(316, this);
  }
  set clairvoyance(value: number) {
    $.utils.setInt32(316, value, this);
  }
  get combatEffects(): number {
    return $.utils.getInt32(320, this);
  }
  set combatEffects(value: number) {
    $.utils.setInt32(320, value, this);
  }
  get damageShieldMitigation(): number {
    return $.utils.getInt32(324, this);
  }
  set damageShieldMitigation(value: number) {
    $.utils.setInt32(324, value, this);
  }
  get damageShield(): number {
    return $.utils.getInt32(328, this);
  }
  set damageShield(value: number) {
    $.utils.setInt32(328, value, this);
  }
  get dotShielding(): number {
    return $.utils.getInt32(332, this);
  }
  set dotShielding(value: number) {
    $.utils.setInt32(332, value, this);
  }
  get hpRegen(): number {
    return $.utils.getInt32(336, this);
  }
  set hpRegen(value: number) {
    $.utils.setInt32(336, value, this);
  }
  get manaRegen(): number {
    return $.utils.getInt32(340, this);
  }
  set manaRegen(value: number) {
    $.utils.setInt32(340, value, this);
  }
  get enduranceRegen(): number {
    return $.utils.getInt32(344, this);
  }
  set enduranceRegen(value: number) {
    $.utils.setInt32(344, value, this);
  }
  get shielding(): number {
    return $.utils.getInt32(348, this);
  }
  set shielding(value: number) {
    $.utils.setInt32(348, value, this);
  }
  get spellDamage(): number {
    return $.utils.getInt32(352, this);
  }
  set spellDamage(value: number) {
    $.utils.setInt32(352, value, this);
  }
  get spellShielding(): number {
    return $.utils.getInt32(356, this);
  }
  set spellShielding(value: number) {
    $.utils.setInt32(356, value, this);
  }
  get strikethrough(): number {
    return $.utils.getInt32(360, this);
  }
  set strikethrough(value: number) {
    $.utils.setInt32(360, value, this);
  }
  get stunResist(): number {
    return $.utils.getInt32(364, this);
  }
  set stunResist(value: number) {
    $.utils.setInt32(364, value, this);
  }
  get backstab(): number {
    return $.utils.getInt32(368, this);
  }
  set backstab(value: number) {
    $.utils.setInt32(368, value, this);
  }
  get alcohol(): number {
    return $.utils.getInt32(372, this);
  }
  set alcohol(value: number) {
    $.utils.setInt32(372, value, this);
  }
  get maxHp(): bigint {
    return $.utils.getInt64(376, this);
  }
  set maxHp(value: bigint) {
    $.utils.setInt64(376, value, this);
  }
  get maxMana(): bigint {
    return $.utils.getInt64(384, this);
  }
  set maxMana(value: bigint) {
    $.utils.setInt64(384, value, this);
  }
  get maxEndurance(): bigint {
    return $.utils.getInt64(392, this);
  }
  set maxEndurance(value: bigint) {
    $.utils.setInt64(392, value, this);
  }
  toString(): string {
    return "PlayerProfile_" + super.toString();
  }
}
export class Tint extends $.Struct {
  static readonly _capnp = {
    displayName: "Tint",
    id: "e83eeeca42eb6184",
    size: new $.ObjectSize(16, 0)
  };
  get blue(): number {
    return $.utils.getInt32(0, this);
  }
  set blue(value: number) {
    $.utils.setInt32(0, value, this);
  }
  get green(): number {
    return $.utils.getInt32(4, this);
  }
  set green(value: number) {
    $.utils.setInt32(4, value, this);
  }
  get reddays(): number {
    return $.utils.getInt32(8, this);
  }
  set reddays(value: number) {
    $.utils.setInt32(8, value, this);
  }
  get useTint(): number {
    return $.utils.getInt32(12, this);
  }
  set useTint(value: number) {
    $.utils.setInt32(12, value, this);
  }
  toString(): string {
    return "Tint_" + super.toString();
  }
}
CharacterSelect._Characters = $.CompositeList(CharacterSelectEntry);
CharacterSelectEntry._Items = $.CompositeList(ItemInstance);
PlayerProfile._Binds = $.CompositeList(Bind);
PlayerProfile._AaArray = $.CompositeList(AAArray);
PlayerProfile._Buffs = $.CompositeList(SpellBuff);
PlayerProfile._Bandoliers = $.CompositeList(Bandolier);
PlayerProfile._GroupMembers = $.CompositeList(StringList);
PlayerProfile._InventoryItems = $.CompositeList(ItemInstance);
