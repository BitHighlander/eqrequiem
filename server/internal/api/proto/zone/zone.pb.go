// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: zone/zone.proto

package zone

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ZoneChangeType int32

const (
	ZoneChangeType_FROM_WORLD ZoneChangeType = 0
	ZoneChangeType_FROM_ZONE  ZoneChangeType = 1
)

// Enum value maps for ZoneChangeType.
var (
	ZoneChangeType_name = map[int32]string{
		0: "FROM_WORLD",
		1: "FROM_ZONE",
	}
	ZoneChangeType_value = map[string]int32{
		"FROM_WORLD": 0,
		"FROM_ZONE":  1,
	}
)

func (x ZoneChangeType) Enum() *ZoneChangeType {
	p := new(ZoneChangeType)
	*p = x
	return p
}

func (x ZoneChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZoneChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_zone_zone_proto_enumTypes[0].Descriptor()
}

func (ZoneChangeType) Type() protoreflect.EnumType {
	return &file_zone_zone_proto_enumTypes[0]
}

func (x ZoneChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZoneChangeType.Descriptor instead.
func (ZoneChangeType) EnumDescriptor() ([]byte, []int) {
	return file_zone_zone_proto_rawDescGZIP(), []int{0}
}

type ZoneChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharName      string                 `protobuf:"bytes,1,opt,name=char_name,json=charName,proto3" json:"char_name,omitempty"`
	ZoneId        int32                  `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Y             float32                `protobuf:"fixed32,4,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,5,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,6,opt,name=z,proto3" json:"z,omitempty"`
	ZoneReason    int32                  `protobuf:"varint,7,opt,name=zone_reason,json=zoneReason,proto3" json:"zone_reason,omitempty"`
	Success       int32                  `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneChange) Reset() {
	*x = ZoneChange{}
	mi := &file_zone_zone_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneChange) ProtoMessage() {}

func (x *ZoneChange) ProtoReflect() protoreflect.Message {
	mi := &file_zone_zone_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneChange.ProtoReflect.Descriptor instead.
func (*ZoneChange) Descriptor() ([]byte, []int) {
	return file_zone_zone_proto_rawDescGZIP(), []int{0}
}

func (x *ZoneChange) GetCharName() string {
	if x != nil {
		return x.CharName
	}
	return ""
}

func (x *ZoneChange) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZoneChange) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *ZoneChange) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ZoneChange) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ZoneChange) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *ZoneChange) GetZoneReason() int32 {
	if x != nil {
		return x.ZoneReason
	}
	return 0
}

func (x *ZoneChange) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

type NewZone struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CharName          string                 `protobuf:"bytes,1,opt,name=char_name,json=charName,proto3" json:"char_name,omitempty"`
	ShortName         string                 `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	LongName          string                 `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	Ztype             int32                  `protobuf:"varint,4,opt,name=ztype,proto3" json:"ztype,omitempty"`
	FogRed            []int32                `protobuf:"varint,5,rep,packed,name=fog_red,json=fogRed,proto3" json:"fog_red,omitempty"`
	FogGreen          []int32                `protobuf:"varint,6,rep,packed,name=fog_green,json=fogGreen,proto3" json:"fog_green,omitempty"`
	FogBlue           []int32                `protobuf:"varint,7,rep,packed,name=fog_blue,json=fogBlue,proto3" json:"fog_blue,omitempty"`
	FogMinclip        []float32              `protobuf:"fixed32,8,rep,packed,name=fog_minclip,json=fogMinclip,proto3" json:"fog_minclip,omitempty"`
	FogMaxclip        []float32              `protobuf:"fixed32,9,rep,packed,name=fog_maxclip,json=fogMaxclip,proto3" json:"fog_maxclip,omitempty"`
	Gravity           float32                `protobuf:"fixed32,10,opt,name=gravity,proto3" json:"gravity,omitempty"`
	TimeType          int32                  `protobuf:"varint,11,opt,name=time_type,json=timeType,proto3" json:"time_type,omitempty"`
	RainChance        []int32                `protobuf:"varint,12,rep,packed,name=rain_chance,json=rainChance,proto3" json:"rain_chance,omitempty"`
	RainDuration      []int32                `protobuf:"varint,13,rep,packed,name=rain_duration,json=rainDuration,proto3" json:"rain_duration,omitempty"`
	SnowChance        []int32                `protobuf:"varint,14,rep,packed,name=snow_chance,json=snowChance,proto3" json:"snow_chance,omitempty"`
	SnowDuration      []int32                `protobuf:"varint,15,rep,packed,name=snow_duration,json=snowDuration,proto3" json:"snow_duration,omitempty"`
	Sky               int32                  `protobuf:"varint,16,opt,name=sky,proto3" json:"sky,omitempty"`
	ZoneExpMultiplier float32                `protobuf:"fixed32,17,opt,name=zone_exp_multiplier,json=zoneExpMultiplier,proto3" json:"zone_exp_multiplier,omitempty"`
	SafeY             float32                `protobuf:"fixed32,18,opt,name=safe_y,json=safeY,proto3" json:"safe_y,omitempty"`
	SafeX             float32                `protobuf:"fixed32,19,opt,name=safe_x,json=safeX,proto3" json:"safe_x,omitempty"`
	SafeZ             float32                `protobuf:"fixed32,20,opt,name=safe_z,json=safeZ,proto3" json:"safe_z,omitempty"`
	MaxZ              float32                `protobuf:"fixed32,21,opt,name=max_z,json=maxZ,proto3" json:"max_z,omitempty"`
	Underworld        float32                `protobuf:"fixed32,22,opt,name=underworld,proto3" json:"underworld,omitempty"`
	Minclip           float32                `protobuf:"fixed32,23,opt,name=minclip,proto3" json:"minclip,omitempty"`
	Maxclip           float32                `protobuf:"fixed32,24,opt,name=maxclip,proto3" json:"maxclip,omitempty"`
	ZoneShortName2    string                 `protobuf:"bytes,25,opt,name=zone_short_name2,json=zoneShortName2,proto3" json:"zone_short_name2,omitempty"`
	ZoneIdNumber      int32                  `protobuf:"varint,26,opt,name=zone_id_number,json=zoneIdNumber,proto3" json:"zone_id_number,omitempty"`
	ZoneInstance      int32                  `protobuf:"varint,27,opt,name=zone_instance,json=zoneInstance,proto3" json:"zone_instance,omitempty"`
	ZonePoints        []*ZonePoint           `protobuf:"bytes,28,rep,name=zone_points,json=zonePoints,proto3" json:"zone_points,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewZone) Reset() {
	*x = NewZone{}
	mi := &file_zone_zone_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZone) ProtoMessage() {}

func (x *NewZone) ProtoReflect() protoreflect.Message {
	mi := &file_zone_zone_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZone.ProtoReflect.Descriptor instead.
func (*NewZone) Descriptor() ([]byte, []int) {
	return file_zone_zone_proto_rawDescGZIP(), []int{1}
}

func (x *NewZone) GetCharName() string {
	if x != nil {
		return x.CharName
	}
	return ""
}

func (x *NewZone) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *NewZone) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *NewZone) GetZtype() int32 {
	if x != nil {
		return x.Ztype
	}
	return 0
}

func (x *NewZone) GetFogRed() []int32 {
	if x != nil {
		return x.FogRed
	}
	return nil
}

func (x *NewZone) GetFogGreen() []int32 {
	if x != nil {
		return x.FogGreen
	}
	return nil
}

func (x *NewZone) GetFogBlue() []int32 {
	if x != nil {
		return x.FogBlue
	}
	return nil
}

func (x *NewZone) GetFogMinclip() []float32 {
	if x != nil {
		return x.FogMinclip
	}
	return nil
}

func (x *NewZone) GetFogMaxclip() []float32 {
	if x != nil {
		return x.FogMaxclip
	}
	return nil
}

func (x *NewZone) GetGravity() float32 {
	if x != nil {
		return x.Gravity
	}
	return 0
}

func (x *NewZone) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *NewZone) GetRainChance() []int32 {
	if x != nil {
		return x.RainChance
	}
	return nil
}

func (x *NewZone) GetRainDuration() []int32 {
	if x != nil {
		return x.RainDuration
	}
	return nil
}

func (x *NewZone) GetSnowChance() []int32 {
	if x != nil {
		return x.SnowChance
	}
	return nil
}

func (x *NewZone) GetSnowDuration() []int32 {
	if x != nil {
		return x.SnowDuration
	}
	return nil
}

func (x *NewZone) GetSky() int32 {
	if x != nil {
		return x.Sky
	}
	return 0
}

func (x *NewZone) GetZoneExpMultiplier() float32 {
	if x != nil {
		return x.ZoneExpMultiplier
	}
	return 0
}

func (x *NewZone) GetSafeY() float32 {
	if x != nil {
		return x.SafeY
	}
	return 0
}

func (x *NewZone) GetSafeX() float32 {
	if x != nil {
		return x.SafeX
	}
	return 0
}

func (x *NewZone) GetSafeZ() float32 {
	if x != nil {
		return x.SafeZ
	}
	return 0
}

func (x *NewZone) GetMaxZ() float32 {
	if x != nil {
		return x.MaxZ
	}
	return 0
}

func (x *NewZone) GetUnderworld() float32 {
	if x != nil {
		return x.Underworld
	}
	return 0
}

func (x *NewZone) GetMinclip() float32 {
	if x != nil {
		return x.Minclip
	}
	return 0
}

func (x *NewZone) GetMaxclip() float32 {
	if x != nil {
		return x.Maxclip
	}
	return 0
}

func (x *NewZone) GetZoneShortName2() string {
	if x != nil {
		return x.ZoneShortName2
	}
	return ""
}

func (x *NewZone) GetZoneIdNumber() int32 {
	if x != nil {
		return x.ZoneIdNumber
	}
	return 0
}

func (x *NewZone) GetZoneInstance() int32 {
	if x != nil {
		return x.ZoneInstance
	}
	return 0
}

func (x *NewZone) GetZonePoints() []*ZonePoint {
	if x != nil {
		return x.ZonePoints
	}
	return nil
}

type RequestClientZoneChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int32                  `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Y             float32                `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,4,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,5,opt,name=z,proto3" json:"z,omitempty"`
	Heading       float32                `protobuf:"fixed32,6,opt,name=heading,proto3" json:"heading,omitempty"`
	Type          ZoneChangeType         `protobuf:"varint,7,opt,name=type,proto3,enum=eq.zone.ZoneChangeType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestClientZoneChange) Reset() {
	*x = RequestClientZoneChange{}
	mi := &file_zone_zone_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestClientZoneChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientZoneChange) ProtoMessage() {}

func (x *RequestClientZoneChange) ProtoReflect() protoreflect.Message {
	mi := &file_zone_zone_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientZoneChange.ProtoReflect.Descriptor instead.
func (*RequestClientZoneChange) Descriptor() ([]byte, []int) {
	return file_zone_zone_proto_rawDescGZIP(), []int{2}
}

func (x *RequestClientZoneChange) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *RequestClientZoneChange) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *RequestClientZoneChange) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *RequestClientZoneChange) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RequestClientZoneChange) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *RequestClientZoneChange) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *RequestClientZoneChange) GetType() ZoneChangeType {
	if x != nil {
		return x.Type
	}
	return ZoneChangeType_FROM_WORLD
}

type ZonePoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iterator      int32                  `protobuf:"varint,1,opt,name=iterator,proto3" json:"iterator,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	Heading       float32                `protobuf:"fixed32,5,opt,name=heading,proto3" json:"heading,omitempty"`
	Zoneid        int32                  `protobuf:"varint,6,opt,name=zoneid,proto3" json:"zoneid,omitempty"`
	Zoneinstance  int32                  `protobuf:"varint,7,opt,name=zoneinstance,proto3" json:"zoneinstance,omitempty"`
	Number        int32                  `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZonePoint) Reset() {
	*x = ZonePoint{}
	mi := &file_zone_zone_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZonePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonePoint) ProtoMessage() {}

func (x *ZonePoint) ProtoReflect() protoreflect.Message {
	mi := &file_zone_zone_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonePoint.ProtoReflect.Descriptor instead.
func (*ZonePoint) Descriptor() ([]byte, []int) {
	return file_zone_zone_proto_rawDescGZIP(), []int{3}
}

func (x *ZonePoint) GetIterator() int32 {
	if x != nil {
		return x.Iterator
	}
	return 0
}

func (x *ZonePoint) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ZonePoint) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ZonePoint) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *ZonePoint) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *ZonePoint) GetZoneid() int32 {
	if x != nil {
		return x.Zoneid
	}
	return 0
}

func (x *ZonePoint) GetZoneinstance() int32 {
	if x != nil {
		return x.Zoneinstance
	}
	return 0
}

func (x *ZonePoint) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ZoneSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int32                  `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneSession) Reset() {
	*x = ZoneSession{}
	mi := &file_zone_zone_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneSession) ProtoMessage() {}

func (x *ZoneSession) ProtoReflect() protoreflect.Message {
	mi := &file_zone_zone_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneSession.ProtoReflect.Descriptor instead.
func (*ZoneSession) Descriptor() ([]byte, []int) {
	return file_zone_zone_proto_rawDescGZIP(), []int{4}
}

func (x *ZoneSession) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZoneSession) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

var File_zone_zone_proto protoreflect.FileDescriptor

const file_zone_zone_proto_rawDesc = "" +
	"\n" +
	"\x0fzone/zone.proto\x12\aeq.zone\"\xc8\x01\n" +
	"\n" +
	"ZoneChange\x12\x1b\n" +
	"\tchar_name\x18\x01 \x01(\tR\bcharName\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x03 \x01(\x05R\n" +
	"instanceId\x12\f\n" +
	"\x01y\x18\x04 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x05 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x06 \x01(\x02R\x01z\x12\x1f\n" +
	"\vzone_reason\x18\a \x01(\x05R\n" +
	"zoneReason\x12\x18\n" +
	"\asuccess\x18\b \x01(\x05R\asuccess\"\xe8\x06\n" +
	"\aNewZone\x12\x1b\n" +
	"\tchar_name\x18\x01 \x01(\tR\bcharName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x02 \x01(\tR\tshortName\x12\x1b\n" +
	"\tlong_name\x18\x03 \x01(\tR\blongName\x12\x14\n" +
	"\x05ztype\x18\x04 \x01(\x05R\x05ztype\x12\x17\n" +
	"\afog_red\x18\x05 \x03(\x05R\x06fogRed\x12\x1b\n" +
	"\tfog_green\x18\x06 \x03(\x05R\bfogGreen\x12\x19\n" +
	"\bfog_blue\x18\a \x03(\x05R\afogBlue\x12\x1f\n" +
	"\vfog_minclip\x18\b \x03(\x02R\n" +
	"fogMinclip\x12\x1f\n" +
	"\vfog_maxclip\x18\t \x03(\x02R\n" +
	"fogMaxclip\x12\x18\n" +
	"\agravity\x18\n" +
	" \x01(\x02R\agravity\x12\x1b\n" +
	"\ttime_type\x18\v \x01(\x05R\btimeType\x12\x1f\n" +
	"\vrain_chance\x18\f \x03(\x05R\n" +
	"rainChance\x12#\n" +
	"\rrain_duration\x18\r \x03(\x05R\frainDuration\x12\x1f\n" +
	"\vsnow_chance\x18\x0e \x03(\x05R\n" +
	"snowChance\x12#\n" +
	"\rsnow_duration\x18\x0f \x03(\x05R\fsnowDuration\x12\x10\n" +
	"\x03sky\x18\x10 \x01(\x05R\x03sky\x12.\n" +
	"\x13zone_exp_multiplier\x18\x11 \x01(\x02R\x11zoneExpMultiplier\x12\x15\n" +
	"\x06safe_y\x18\x12 \x01(\x02R\x05safeY\x12\x15\n" +
	"\x06safe_x\x18\x13 \x01(\x02R\x05safeX\x12\x15\n" +
	"\x06safe_z\x18\x14 \x01(\x02R\x05safeZ\x12\x13\n" +
	"\x05max_z\x18\x15 \x01(\x02R\x04maxZ\x12\x1e\n" +
	"\n" +
	"underworld\x18\x16 \x01(\x02R\n" +
	"underworld\x12\x18\n" +
	"\aminclip\x18\x17 \x01(\x02R\aminclip\x12\x18\n" +
	"\amaxclip\x18\x18 \x01(\x02R\amaxclip\x12(\n" +
	"\x10zone_short_name2\x18\x19 \x01(\tR\x0ezoneShortName2\x12$\n" +
	"\x0ezone_id_number\x18\x1a \x01(\x05R\fzoneIdNumber\x12#\n" +
	"\rzone_instance\x18\x1b \x01(\x05R\fzoneInstance\x123\n" +
	"\vzone_points\x18\x1c \x03(\v2\x12.eq.zone.ZonePointR\n" +
	"zonePoints\"\xc4\x01\n" +
	"\x17RequestClientZoneChange\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\x05R\n" +
	"instanceId\x12\f\n" +
	"\x01y\x18\x03 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x04 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x05 \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18\x06 \x01(\x02R\aheading\x12+\n" +
	"\x04type\x18\a \x01(\x0e2\x17.eq.zone.ZoneChangeTypeR\x04type\"\xbf\x01\n" +
	"\tZonePoint\x12\x1a\n" +
	"\biterator\x18\x01 \x01(\x05R\biterator\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18\x05 \x01(\x02R\aheading\x12\x16\n" +
	"\x06zoneid\x18\x06 \x01(\x05R\x06zoneid\x12\"\n" +
	"\fzoneinstance\x18\a \x01(\x05R\fzoneinstance\x12\x16\n" +
	"\x06number\x18\b \x01(\x05R\x06number\"G\n" +
	"\vZoneSession\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\x05R\n" +
	"instanceId*/\n" +
	"\x0eZoneChangeType\x12\x0e\n" +
	"\n" +
	"FROM_WORLD\x10\x00\x12\r\n" +
	"\tFROM_ZONE\x10\x01B'Z%knervous/eqgo/internal/api/proto/zoneb\x06proto3"

var (
	file_zone_zone_proto_rawDescOnce sync.Once
	file_zone_zone_proto_rawDescData []byte
)

func file_zone_zone_proto_rawDescGZIP() []byte {
	file_zone_zone_proto_rawDescOnce.Do(func() {
		file_zone_zone_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_zone_zone_proto_rawDesc), len(file_zone_zone_proto_rawDesc)))
	})
	return file_zone_zone_proto_rawDescData
}

var file_zone_zone_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_zone_zone_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_zone_zone_proto_goTypes = []any{
	(ZoneChangeType)(0),             // 0: eq.zone.ZoneChangeType
	(*ZoneChange)(nil),              // 1: eq.zone.ZoneChange
	(*NewZone)(nil),                 // 2: eq.zone.NewZone
	(*RequestClientZoneChange)(nil), // 3: eq.zone.RequestClientZoneChange
	(*ZonePoint)(nil),               // 4: eq.zone.ZonePoint
	(*ZoneSession)(nil),             // 5: eq.zone.ZoneSession
}
var file_zone_zone_proto_depIdxs = []int32{
	4, // 0: eq.zone.NewZone.zone_points:type_name -> eq.zone.ZonePoint
	0, // 1: eq.zone.RequestClientZoneChange.type:type_name -> eq.zone.ZoneChangeType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_zone_zone_proto_init() }
func file_zone_zone_proto_init() {
	if File_zone_zone_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_zone_zone_proto_rawDesc), len(file_zone_zone_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zone_zone_proto_goTypes,
		DependencyIndexes: file_zone_zone_proto_depIdxs,
		EnumInfos:         file_zone_zone_proto_enumTypes,
		MessageInfos:      file_zone_zone_proto_msgTypes,
	}.Build()
	File_zone_zone_proto = out.File
	file_zone_zone_proto_goTypes = nil
	file_zone_zone_proto_depIdxs = nil
}
