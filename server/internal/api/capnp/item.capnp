@0xabcdefabcdefabc123;

using Go = import "go.capnp";
$Go.package("net");         # Go package name
$Go.import("github.com/knervous/eqgo/internal/api/capnp");  # Go import path

struct ItemInstance {
  mods @0 :Text;
  charges @1 :UInt32;
  quantity @2 :UInt32;
  slot @3 :Int32;
  ac @4 :Int32;
  accuracy @5 :Int32;
  acha @6 :Int32;
  adex @7 :Int32;
  aint @8 :Int32;
  artifactflag @9 :UInt32;
  asta @10 :Int32;
  astr @11 :Int32;
  attack @12 :Int32;
  augrestrict @13 :Int32;
  augslot1type @14 :Int32;
  augslot1visible @15 :Int32;
  augslot2type @16 :Int32;
  augslot2visible @17 :Int32;
  augslot3type @18 :Int32;
  augslot3visible @19 :Int32;
  augslot4type @20 :Int32;
  augslot4visible @21 :Int32;
  augslot5type @22 :Int32;
  augslot5visible @23 :Int32;
  augslot6type @24 :Int32;
  augslot6visible @25 :Int32;
  augtype @26 :Int32;
  avoidance @27 :Int32;
  awis @28 :Int32;
  bagsize @29 :Int32;
  bagslots @30 :Int32;
  bagtype @31 :Int32;
  bagwr @32 :Int32;
  banedmgamt @33 :Int32;
  banedmgraceamt @34 :Int32;
  banedmgbody @35 :Int32;
  banedmgrace @36 :Int32;
  bardtype @37 :Int32;
  bardvalue @38 :Int32;
  book @39 :Int32;
  casttime @40 :Int32;
  casttime2 @41 :Int32;
  classes @42 :Int32;
  color @43 :UInt32;
  combateffects @44 :Text;
  extradmgskill @45 :Int32;
  extradmgamt @46 :Int32;
  price @47 :Int32;
  cr @48 :Int32;
  damage @49 :Int32;
  damageshield @50 :Int32;
  deity @51 :Int32;
  delay @52 :Int32;
  augdistiller @53 :UInt32;
  dotshielding @54 :Int32;
  dr @55 :Int32;
  clicktype @56 :Int32;
  clicklevel2 @57 :Int32;
  elemdmgtype @58 :Int32;
  elemdmgamt @59 :Int32;
  endur @60 :Int32;
  factionamt1 @61 :Int32;
  factionamt2 @62 :Int32;
  factionamt3 @63 :Int32;
  factionamt4 @64 :Int32;
  factionmod1 @65 :Int32;
  factionmod2 @66 :Int32;
  factionmod3 @67 :Int32;
  factionmod4 @68 :Int32;
  focuseffect @69 :Int32;
  fr @70 :Int32;
  fvnodrop @71 :Int32;
  haste @72 :Int32;
  clicklevel @73 :Int32;
  hp @74 :Int32;
  regen @75 :Int32;
  icon @76 :Int32;
  idfile @77 :Text;
  itemclass @78 :Int32;
  itemtype @79 :Int32;
  light @80 :Int32;
  lore @81 :Text;
  loregroup @82 :Int32;
  magic @83 :Int32;
  mana @84 :Int32;
  manaregen @85 :Int32;
  enduranceregen @86 :Int32;
  material @87 :Int32;
  herosforgemodel @88 :Int32;
  maxcharges @89 :Int32;
  mr @90 :Int32;
  nodrop @91 :Int32;
  norent @92 :Int32;
  pendingloreflag @93 :UInt32;
  pr @94 :Int32;
  procrate @95 :Int32;
  races @96 :Int32;
  range @97 :Int32;
  reclevel @98 :Int32;
  recskill @99 :Int32;
  reqlevel @100 :Int32;
  sellrate @101 :Float64;
  shielding @102 :Int32;
  size @103 :Int32;
  skillmodtype @104 :Int32;
  skillmodvalue @105 :Int32;
  slots @106 :Int32;
  clickeffect @107 :Int32;
  spellshield @108 :Int32;
  strikethrough @109 :Int32;
  stunresist @110 :Int32;
  summonedflag @111 :UInt32;
  tradeskills @112 :Int32;
  favor @113 :Int32;
  weight @114 :Int32;
  benefitflag @115 :Int32;
  booktype @116 :Int32;
  recastdelay @117 :Int32;
  recasttype @118 :Int32;
  guildfavor @119 :Int32;
  attuneable @120 :Int32;
  nopet @121 :Int32;
  updated @122 :Text;
  pointtype @123 :Int32;
  potionbelt @124 :Int32;
  potionbeltslots @125 :Int32;
  stacksize @126 :Int32;
  notransfer @127 :Int32;
  stackable @128 :Int32;
  proceffect @129 :Int32;
  proctype @130 :Int32;
  proclevel2 @131 :Int32;
  proclevel @132 :Int32;
  worneffect @133 :Int32;
  worntype @134 :Int32;
  wornlevel2 @135 :Int32;
  wornlevel @136 :Int32;
  focustype @137 :Int32;
  focuslevel2 @138 :Int32;
  focuslevel @139 :Int32;
  scrolleffect @140 :Int32;
  scrolltype @141 :Int32;
  scrolllevel2 @142 :Int32;
  scrolllevel @143 :Int32;
  svcorruption @144 :Int32;
  skillmodmax @145 :Int32;
  questitemflag @146 :Int32;
  purity @147 :Int32;
  evoitem @148 :Int32;
  evoid @149 :Int32;
  evolvinglevel @150 :Int32;
  evomax @151 :Int32;
  dsmitigation @152 :Int32;
  healamt @153 :Int32;
  spelldmg @154 :Int32;
  clairvoyance @155 :Int32;
  backstabdmg @156 :Int32;
  elitematerial @157 :Int32;
  scriptfileid @158 :Int32;
  expendablearrow @159 :Int32;
  powersourcecapacity @160 :Int32;
  bardeffect @161 :Int32;
  bardeffecttype @162 :Int32;
  bardlevel2 @163 :Int32;
  bardlevel @164 :Int32;
  subtype @165 :Int32;
  heirloom @166 :Int32;
  placeable @167 :Int32;
  epicitem @168 :Int32;
  minstatus @169 :Int32;
  name @170 :Text;
  aagi @171 :Int32;
  bagSlot @172 :Int32;
}

struct BulkItemPacket {
  items @0 :List(ItemInstance);
}

struct BulkDeleteItem {
  items @0 :List(DeleteItem);
}

struct DeleteItem {
  slot @0 :Int8;
  bag @1 :Int8;
}
