// Code generated by capnpc-go. DO NOT EDIT.

package net

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	math "math"
)

type CharacterSelect capnp.Struct

// CharacterSelect_TypeID is the unique identifier for the type CharacterSelect.
const CharacterSelect_TypeID = 0xe0ce907abb969349

func NewCharacterSelect(s *capnp.Segment) (CharacterSelect, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CharacterSelect(st), err
}

func NewRootCharacterSelect(s *capnp.Segment) (CharacterSelect, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CharacterSelect(st), err
}

func ReadRootCharacterSelect(msg *capnp.Message) (CharacterSelect, error) {
	root, err := msg.Root()
	return CharacterSelect(root.Struct()), err
}

func (s CharacterSelect) String() string {
	str, _ := text.Marshal(0xe0ce907abb969349, capnp.Struct(s))
	return str
}

func (s CharacterSelect) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CharacterSelect) DecodeFromPtr(p capnp.Ptr) CharacterSelect {
	return CharacterSelect(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CharacterSelect) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CharacterSelect) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CharacterSelect) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CharacterSelect) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CharacterSelect) CharacterCount() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s CharacterSelect) SetCharacterCount(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s CharacterSelect) Characters() (CharacterSelectEntry_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return CharacterSelectEntry_List(p.List()), err
}

func (s CharacterSelect) HasCharacters() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CharacterSelect) SetCharacters(v CharacterSelectEntry_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewCharacters sets the characters field to a newly
// allocated CharacterSelectEntry_List, preferring placement in s's segment.
func (s CharacterSelect) NewCharacters(n int32) (CharacterSelectEntry_List, error) {
	l, err := NewCharacterSelectEntry_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return CharacterSelectEntry_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// CharacterSelect_List is a list of CharacterSelect.
type CharacterSelect_List = capnp.StructList[CharacterSelect]

// NewCharacterSelect creates a new list of CharacterSelect.
func NewCharacterSelect_List(s *capnp.Segment, sz int32) (CharacterSelect_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[CharacterSelect](l), err
}

// CharacterSelect_Future is a wrapper for a CharacterSelect promised by a client call.
type CharacterSelect_Future struct{ *capnp.Future }

func (f CharacterSelect_Future) Struct() (CharacterSelect, error) {
	p, err := f.Future.Ptr()
	return CharacterSelect(p.Struct()), err
}

type CharacterSelectEntry capnp.Struct

// CharacterSelectEntry_TypeID is the unique identifier for the type CharacterSelectEntry.
const CharacterSelectEntry_TypeID = 0xca9e1a4afe3dca58

func NewCharacterSelectEntry(s *capnp.Segment) (CharacterSelectEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 56, PointerCount: 2})
	return CharacterSelectEntry(st), err
}

func NewRootCharacterSelectEntry(s *capnp.Segment) (CharacterSelectEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 56, PointerCount: 2})
	return CharacterSelectEntry(st), err
}

func ReadRootCharacterSelectEntry(msg *capnp.Message) (CharacterSelectEntry, error) {
	root, err := msg.Root()
	return CharacterSelectEntry(root.Struct()), err
}

func (s CharacterSelectEntry) String() string {
	str, _ := text.Marshal(0xca9e1a4afe3dca58, capnp.Struct(s))
	return str
}

func (s CharacterSelectEntry) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CharacterSelectEntry) DecodeFromPtr(p capnp.Ptr) CharacterSelectEntry {
	return CharacterSelectEntry(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CharacterSelectEntry) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CharacterSelectEntry) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CharacterSelectEntry) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CharacterSelectEntry) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CharacterSelectEntry) Name() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s CharacterSelectEntry) HasName() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CharacterSelectEntry) NameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s CharacterSelectEntry) SetName(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s CharacterSelectEntry) CharClass() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s CharacterSelectEntry) SetCharClass(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s CharacterSelectEntry) Race() int32 {
	return int32(capnp.Struct(s).Uint32(4))
}

func (s CharacterSelectEntry) SetRace(v int32) {
	capnp.Struct(s).SetUint32(4, uint32(v))
}

func (s CharacterSelectEntry) Level() int32 {
	return int32(capnp.Struct(s).Uint32(8))
}

func (s CharacterSelectEntry) SetLevel(v int32) {
	capnp.Struct(s).SetUint32(8, uint32(v))
}

func (s CharacterSelectEntry) Zone() int32 {
	return int32(capnp.Struct(s).Uint32(12))
}

func (s CharacterSelectEntry) SetZone(v int32) {
	capnp.Struct(s).SetUint32(12, uint32(v))
}

func (s CharacterSelectEntry) Instance() int32 {
	return int32(capnp.Struct(s).Uint32(16))
}

func (s CharacterSelectEntry) SetInstance(v int32) {
	capnp.Struct(s).SetUint32(16, uint32(v))
}

func (s CharacterSelectEntry) Gender() int32 {
	return int32(capnp.Struct(s).Uint32(20))
}

func (s CharacterSelectEntry) SetGender(v int32) {
	capnp.Struct(s).SetUint32(20, uint32(v))
}

func (s CharacterSelectEntry) Face() int32 {
	return int32(capnp.Struct(s).Uint32(24))
}

func (s CharacterSelectEntry) SetFace(v int32) {
	capnp.Struct(s).SetUint32(24, uint32(v))
}

func (s CharacterSelectEntry) Items() (ItemInstance_List, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return ItemInstance_List(p.List()), err
}

func (s CharacterSelectEntry) HasItems() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s CharacterSelectEntry) SetItems(v ItemInstance_List) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewItems sets the items field to a newly
// allocated ItemInstance_List, preferring placement in s's segment.
func (s CharacterSelectEntry) NewItems(n int32) (ItemInstance_List, error) {
	l, err := NewItemInstance_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return ItemInstance_List{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}
func (s CharacterSelectEntry) Deity() int32 {
	return int32(capnp.Struct(s).Uint32(28))
}

func (s CharacterSelectEntry) SetDeity(v int32) {
	capnp.Struct(s).SetUint32(28, uint32(v))
}

func (s CharacterSelectEntry) PrimaryIdFile() int32 {
	return int32(capnp.Struct(s).Uint32(32))
}

func (s CharacterSelectEntry) SetPrimaryIdFile(v int32) {
	capnp.Struct(s).SetUint32(32, uint32(v))
}

func (s CharacterSelectEntry) SecondaryIdFile() int32 {
	return int32(capnp.Struct(s).Uint32(36))
}

func (s CharacterSelectEntry) SetSecondaryIdFile(v int32) {
	capnp.Struct(s).SetUint32(36, uint32(v))
}

func (s CharacterSelectEntry) GoHome() int32 {
	return int32(capnp.Struct(s).Uint32(40))
}

func (s CharacterSelectEntry) SetGoHome(v int32) {
	capnp.Struct(s).SetUint32(40, uint32(v))
}

func (s CharacterSelectEntry) Enabled() int32 {
	return int32(capnp.Struct(s).Uint32(44))
}

func (s CharacterSelectEntry) SetEnabled(v int32) {
	capnp.Struct(s).SetUint32(44, uint32(v))
}

func (s CharacterSelectEntry) LastLogin() int32 {
	return int32(capnp.Struct(s).Uint32(48))
}

func (s CharacterSelectEntry) SetLastLogin(v int32) {
	capnp.Struct(s).SetUint32(48, uint32(v))
}

// CharacterSelectEntry_List is a list of CharacterSelectEntry.
type CharacterSelectEntry_List = capnp.StructList[CharacterSelectEntry]

// NewCharacterSelectEntry creates a new list of CharacterSelectEntry.
func NewCharacterSelectEntry_List(s *capnp.Segment, sz int32) (CharacterSelectEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 56, PointerCount: 2}, sz)
	return capnp.StructList[CharacterSelectEntry](l), err
}

// CharacterSelectEntry_Future is a wrapper for a CharacterSelectEntry promised by a client call.
type CharacterSelectEntry_Future struct{ *capnp.Future }

func (f CharacterSelectEntry_Future) Struct() (CharacterSelectEntry, error) {
	p, err := f.Future.Ptr()
	return CharacterSelectEntry(p.Struct()), err
}

type CharSelectEquip capnp.Struct

// CharSelectEquip_TypeID is the unique identifier for the type CharSelectEquip.
const CharSelectEquip_TypeID = 0xa41074130e196783

func NewCharSelectEquip(s *capnp.Segment) (CharSelectEquip, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CharSelectEquip(st), err
}

func NewRootCharSelectEquip(s *capnp.Segment) (CharSelectEquip, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CharSelectEquip(st), err
}

func ReadRootCharSelectEquip(msg *capnp.Message) (CharSelectEquip, error) {
	root, err := msg.Root()
	return CharSelectEquip(root.Struct()), err
}

func (s CharSelectEquip) String() string {
	str, _ := text.Marshal(0xa41074130e196783, capnp.Struct(s))
	return str
}

func (s CharSelectEquip) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (CharSelectEquip) DecodeFromPtr(p capnp.Ptr) CharSelectEquip {
	return CharSelectEquip(capnp.Struct{}.DecodeFromPtr(p))
}

func (s CharSelectEquip) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s CharSelectEquip) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s CharSelectEquip) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s CharSelectEquip) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s CharSelectEquip) Material() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s CharSelectEquip) SetMaterial(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s CharSelectEquip) Color() (Tint, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Tint(p.Struct()), err
}

func (s CharSelectEquip) HasColor() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s CharSelectEquip) SetColor(v Tint) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewColor sets the color field to a newly
// allocated Tint struct, preferring placement in s's segment.
func (s CharSelectEquip) NewColor() (Tint, error) {
	ss, err := NewTint(capnp.Struct(s).Segment())
	if err != nil {
		return Tint{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// CharSelectEquip_List is a list of CharSelectEquip.
type CharSelectEquip_List = capnp.StructList[CharSelectEquip]

// NewCharSelectEquip creates a new list of CharSelectEquip.
func NewCharSelectEquip_List(s *capnp.Segment, sz int32) (CharSelectEquip_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[CharSelectEquip](l), err
}

// CharSelectEquip_Future is a wrapper for a CharSelectEquip promised by a client call.
type CharSelectEquip_Future struct{ *capnp.Future }

func (f CharSelectEquip_Future) Struct() (CharSelectEquip, error) {
	p, err := f.Future.Ptr()
	return CharSelectEquip(p.Struct()), err
}
func (p CharSelectEquip_Future) Color() Tint_Future {
	return Tint_Future{Future: p.Future.Field(0, nil)}
}

type PlayerProfile capnp.Struct

// PlayerProfile_TypeID is the unique identifier for the type PlayerProfile.
const PlayerProfile_TypeID = 0xb8375f7f6b27403c

func NewPlayerProfile(s *capnp.Segment) (PlayerProfile, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 400, PointerCount: 19})
	return PlayerProfile(st), err
}

func NewRootPlayerProfile(s *capnp.Segment) (PlayerProfile, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 400, PointerCount: 19})
	return PlayerProfile(st), err
}

func ReadRootPlayerProfile(msg *capnp.Message) (PlayerProfile, error) {
	root, err := msg.Root()
	return PlayerProfile(root.Struct()), err
}

func (s PlayerProfile) String() string {
	str, _ := text.Marshal(0xb8375f7f6b27403c, capnp.Struct(s))
	return str
}

func (s PlayerProfile) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (PlayerProfile) DecodeFromPtr(p capnp.Ptr) PlayerProfile {
	return PlayerProfile(capnp.Struct{}.DecodeFromPtr(p))
}

func (s PlayerProfile) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s PlayerProfile) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s PlayerProfile) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s PlayerProfile) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s PlayerProfile) Gender() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s PlayerProfile) SetGender(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s PlayerProfile) Race() int32 {
	return int32(capnp.Struct(s).Uint32(4))
}

func (s PlayerProfile) SetRace(v int32) {
	capnp.Struct(s).SetUint32(4, uint32(v))
}

func (s PlayerProfile) CharClass() int32 {
	return int32(capnp.Struct(s).Uint32(8))
}

func (s PlayerProfile) SetCharClass(v int32) {
	capnp.Struct(s).SetUint32(8, uint32(v))
}

func (s PlayerProfile) Level() int32 {
	return int32(capnp.Struct(s).Uint32(12))
}

func (s PlayerProfile) SetLevel(v int32) {
	capnp.Struct(s).SetUint32(12, uint32(v))
}

func (s PlayerProfile) Binds() (Bind_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Bind_List(p.List()), err
}

func (s PlayerProfile) HasBinds() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s PlayerProfile) SetBinds(v Bind_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewBinds sets the binds field to a newly
// allocated Bind_List, preferring placement in s's segment.
func (s PlayerProfile) NewBinds(n int32) (Bind_List, error) {
	l, err := NewBind_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Bind_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Deity() int32 {
	return int32(capnp.Struct(s).Uint32(16))
}

func (s PlayerProfile) SetDeity(v int32) {
	capnp.Struct(s).SetUint32(16, uint32(v))
}

func (s PlayerProfile) Intoxication() int32 {
	return int32(capnp.Struct(s).Uint32(20))
}

func (s PlayerProfile) SetIntoxication(v int32) {
	capnp.Struct(s).SetUint32(20, uint32(v))
}

func (s PlayerProfile) SpellSlotRefresh() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasSpellSlotRefresh() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s PlayerProfile) SetSpellSlotRefresh(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewSpellSlotRefresh sets the spellSlotRefresh field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewSpellSlotRefresh(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}
func (s PlayerProfile) AbilitySlotRefresh() int32 {
	return int32(capnp.Struct(s).Uint32(24))
}

func (s PlayerProfile) SetAbilitySlotRefresh(v int32) {
	capnp.Struct(s).SetUint32(24, uint32(v))
}

func (s PlayerProfile) ItemMaterial() (TextureProfile, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return TextureProfile(p.Struct()), err
}

func (s PlayerProfile) HasItemMaterial() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s PlayerProfile) SetItemMaterial(v TextureProfile) error {
	return capnp.Struct(s).SetPtr(2, capnp.Struct(v).ToPtr())
}

// NewItemMaterial sets the itemMaterial field to a newly
// allocated TextureProfile struct, preferring placement in s's segment.
func (s PlayerProfile) NewItemMaterial() (TextureProfile, error) {
	ss, err := NewTextureProfile(capnp.Struct(s).Segment())
	if err != nil {
		return TextureProfile{}, err
	}
	err = capnp.Struct(s).SetPtr(2, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s PlayerProfile) ItemTint() int32 {
	return int32(capnp.Struct(s).Uint32(28))
}

func (s PlayerProfile) SetItemTint(v int32) {
	capnp.Struct(s).SetUint32(28, uint32(v))
}

func (s PlayerProfile) AaArray() (AAArray_List, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return AAArray_List(p.List()), err
}

func (s PlayerProfile) HasAaArray() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s PlayerProfile) SetAaArray(v AAArray_List) error {
	return capnp.Struct(s).SetPtr(3, v.ToPtr())
}

// NewAaArray sets the aaArray field to a newly
// allocated AAArray_List, preferring placement in s's segment.
func (s PlayerProfile) NewAaArray(n int32) (AAArray_List, error) {
	l, err := NewAAArray_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return AAArray_List{}, err
	}
	err = capnp.Struct(s).SetPtr(3, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Points() int32 {
	return int32(capnp.Struct(s).Uint32(32))
}

func (s PlayerProfile) SetPoints(v int32) {
	capnp.Struct(s).SetUint32(32, uint32(v))
}

func (s PlayerProfile) Mana() int32 {
	return int32(capnp.Struct(s).Uint32(36))
}

func (s PlayerProfile) SetMana(v int32) {
	capnp.Struct(s).SetUint32(36, uint32(v))
}

func (s PlayerProfile) CurHp() int32 {
	return int32(capnp.Struct(s).Uint32(40))
}

func (s PlayerProfile) SetCurHp(v int32) {
	capnp.Struct(s).SetUint32(40, uint32(v))
}

func (s PlayerProfile) Str() int32 {
	return int32(capnp.Struct(s).Uint32(44))
}

func (s PlayerProfile) SetStr(v int32) {
	capnp.Struct(s).SetUint32(44, uint32(v))
}

func (s PlayerProfile) Sta() int32 {
	return int32(capnp.Struct(s).Uint32(48))
}

func (s PlayerProfile) SetSta(v int32) {
	capnp.Struct(s).SetUint32(48, uint32(v))
}

func (s PlayerProfile) Cha() int32 {
	return int32(capnp.Struct(s).Uint32(52))
}

func (s PlayerProfile) SetCha(v int32) {
	capnp.Struct(s).SetUint32(52, uint32(v))
}

func (s PlayerProfile) Dex() int32 {
	return int32(capnp.Struct(s).Uint32(56))
}

func (s PlayerProfile) SetDex(v int32) {
	capnp.Struct(s).SetUint32(56, uint32(v))
}

func (s PlayerProfile) Intel() int32 {
	return int32(capnp.Struct(s).Uint32(60))
}

func (s PlayerProfile) SetIntel(v int32) {
	capnp.Struct(s).SetUint32(60, uint32(v))
}

func (s PlayerProfile) Agi() int32 {
	return int32(capnp.Struct(s).Uint32(64))
}

func (s PlayerProfile) SetAgi(v int32) {
	capnp.Struct(s).SetUint32(64, uint32(v))
}

func (s PlayerProfile) Wis() int32 {
	return int32(capnp.Struct(s).Uint32(68))
}

func (s PlayerProfile) SetWis(v int32) {
	capnp.Struct(s).SetUint32(68, uint32(v))
}

func (s PlayerProfile) Face() int32 {
	return int32(capnp.Struct(s).Uint32(72))
}

func (s PlayerProfile) SetFace(v int32) {
	capnp.Struct(s).SetUint32(72, uint32(v))
}

func (s PlayerProfile) SpellBook() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasSpellBook() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s PlayerProfile) SetSpellBook(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(4, v.ToPtr())
}

// NewSpellBook sets the spellBook field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewSpellBook(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(4, l.ToPtr())
	return l, err
}
func (s PlayerProfile) MemSpells() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasMemSpells() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s PlayerProfile) SetMemSpells(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(5, v.ToPtr())
}

// NewMemSpells sets the memSpells field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewMemSpells(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(5, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Platinum() int32 {
	return int32(capnp.Struct(s).Uint32(76))
}

func (s PlayerProfile) SetPlatinum(v int32) {
	capnp.Struct(s).SetUint32(76, uint32(v))
}

func (s PlayerProfile) Gold() int32 {
	return int32(capnp.Struct(s).Uint32(80))
}

func (s PlayerProfile) SetGold(v int32) {
	capnp.Struct(s).SetUint32(80, uint32(v))
}

func (s PlayerProfile) Silver() int32 {
	return int32(capnp.Struct(s).Uint32(84))
}

func (s PlayerProfile) SetSilver(v int32) {
	capnp.Struct(s).SetUint32(84, uint32(v))
}

func (s PlayerProfile) Copper() int32 {
	return int32(capnp.Struct(s).Uint32(88))
}

func (s PlayerProfile) SetCopper(v int32) {
	capnp.Struct(s).SetUint32(88, uint32(v))
}

func (s PlayerProfile) PlatinumCursor() int32 {
	return int32(capnp.Struct(s).Uint32(92))
}

func (s PlayerProfile) SetPlatinumCursor(v int32) {
	capnp.Struct(s).SetUint32(92, uint32(v))
}

func (s PlayerProfile) GoldCursor() int32 {
	return int32(capnp.Struct(s).Uint32(96))
}

func (s PlayerProfile) SetGoldCursor(v int32) {
	capnp.Struct(s).SetUint32(96, uint32(v))
}

func (s PlayerProfile) SilverCursor() int32 {
	return int32(capnp.Struct(s).Uint32(100))
}

func (s PlayerProfile) SetSilverCursor(v int32) {
	capnp.Struct(s).SetUint32(100, uint32(v))
}

func (s PlayerProfile) CopperCursor() int32 {
	return int32(capnp.Struct(s).Uint32(104))
}

func (s PlayerProfile) SetCopperCursor(v int32) {
	capnp.Struct(s).SetUint32(104, uint32(v))
}

func (s PlayerProfile) Skills() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasSkills() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s PlayerProfile) SetSkills(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewSkills sets the skills field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewSkills(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s PlayerProfile) InnateSkills() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasInnateSkills() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s PlayerProfile) SetInnateSkills(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewInnateSkills sets the innateSkills field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewInnateSkills(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Toxicity() int32 {
	return int32(capnp.Struct(s).Uint32(108))
}

func (s PlayerProfile) SetToxicity(v int32) {
	capnp.Struct(s).SetUint32(108, uint32(v))
}

func (s PlayerProfile) ThirstLevel() int32 {
	return int32(capnp.Struct(s).Uint32(112))
}

func (s PlayerProfile) SetThirstLevel(v int32) {
	capnp.Struct(s).SetUint32(112, uint32(v))
}

func (s PlayerProfile) HungerLevel() int32 {
	return int32(capnp.Struct(s).Uint32(116))
}

func (s PlayerProfile) SetHungerLevel(v int32) {
	capnp.Struct(s).SetUint32(116, uint32(v))
}

func (s PlayerProfile) Buffs() (SpellBuff_List, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return SpellBuff_List(p.List()), err
}

func (s PlayerProfile) HasBuffs() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s PlayerProfile) SetBuffs(v SpellBuff_List) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewBuffs sets the buffs field to a newly
// allocated SpellBuff_List, preferring placement in s's segment.
func (s PlayerProfile) NewBuffs(n int32) (SpellBuff_List, error) {
	l, err := NewSpellBuff_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return SpellBuff_List{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Disciplines() (Disciplines, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Disciplines(p.Struct()), err
}

func (s PlayerProfile) HasDisciplines() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s PlayerProfile) SetDisciplines(v Disciplines) error {
	return capnp.Struct(s).SetPtr(9, capnp.Struct(v).ToPtr())
}

// NewDisciplines sets the disciplines field to a newly
// allocated Disciplines struct, preferring placement in s's segment.
func (s PlayerProfile) NewDisciplines() (Disciplines, error) {
	ss, err := NewDisciplines(capnp.Struct(s).Segment())
	if err != nil {
		return Disciplines{}, err
	}
	err = capnp.Struct(s).SetPtr(9, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s PlayerProfile) RecastTimers() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasRecastTimers() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s PlayerProfile) SetRecastTimers(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(10, v.ToPtr())
}

// NewRecastTimers sets the recastTimers field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewRecastTimers(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(10, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Endurance() int32 {
	return int32(capnp.Struct(s).Uint32(120))
}

func (s PlayerProfile) SetEndurance(v int32) {
	capnp.Struct(s).SetUint32(120, uint32(v))
}

func (s PlayerProfile) AapointsSpent() int32 {
	return int32(capnp.Struct(s).Uint32(124))
}

func (s PlayerProfile) SetAapointsSpent(v int32) {
	capnp.Struct(s).SetUint32(124, uint32(v))
}

func (s PlayerProfile) Aapoints() int32 {
	return int32(capnp.Struct(s).Uint32(128))
}

func (s PlayerProfile) SetAapoints(v int32) {
	capnp.Struct(s).SetUint32(128, uint32(v))
}

func (s PlayerProfile) Bandoliers() (Bandolier_List, error) {
	p, err := capnp.Struct(s).Ptr(11)
	return Bandolier_List(p.List()), err
}

func (s PlayerProfile) HasBandoliers() bool {
	return capnp.Struct(s).HasPtr(11)
}

func (s PlayerProfile) SetBandoliers(v Bandolier_List) error {
	return capnp.Struct(s).SetPtr(11, v.ToPtr())
}

// NewBandoliers sets the bandoliers field to a newly
// allocated Bandolier_List, preferring placement in s's segment.
func (s PlayerProfile) NewBandoliers(n int32) (Bandolier_List, error) {
	l, err := NewBandolier_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Bandolier_List{}, err
	}
	err = capnp.Struct(s).SetPtr(11, l.ToPtr())
	return l, err
}
func (s PlayerProfile) Potionbelt() (PotionBelt, error) {
	p, err := capnp.Struct(s).Ptr(12)
	return PotionBelt(p.Struct()), err
}

func (s PlayerProfile) HasPotionbelt() bool {
	return capnp.Struct(s).HasPtr(12)
}

func (s PlayerProfile) SetPotionbelt(v PotionBelt) error {
	return capnp.Struct(s).SetPtr(12, capnp.Struct(v).ToPtr())
}

// NewPotionbelt sets the potionbelt field to a newly
// allocated PotionBelt struct, preferring placement in s's segment.
func (s PlayerProfile) NewPotionbelt() (PotionBelt, error) {
	ss, err := NewPotionBelt(capnp.Struct(s).Segment())
	if err != nil {
		return PotionBelt{}, err
	}
	err = capnp.Struct(s).SetPtr(12, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s PlayerProfile) AvailableSlots() int32 {
	return int32(capnp.Struct(s).Uint32(132))
}

func (s PlayerProfile) SetAvailableSlots(v int32) {
	capnp.Struct(s).SetUint32(132, uint32(v))
}

func (s PlayerProfile) Name() (string, error) {
	p, err := capnp.Struct(s).Ptr(13)
	return p.Text(), err
}

func (s PlayerProfile) HasName() bool {
	return capnp.Struct(s).HasPtr(13)
}

func (s PlayerProfile) NameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(13)
	return p.TextBytes(), err
}

func (s PlayerProfile) SetName(v string) error {
	return capnp.Struct(s).SetText(13, v)
}

func (s PlayerProfile) LastName() (string, error) {
	p, err := capnp.Struct(s).Ptr(14)
	return p.Text(), err
}

func (s PlayerProfile) HasLastName() bool {
	return capnp.Struct(s).HasPtr(14)
}

func (s PlayerProfile) LastNameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(14)
	return p.TextBytes(), err
}

func (s PlayerProfile) SetLastName(v string) error {
	return capnp.Struct(s).SetText(14, v)
}

func (s PlayerProfile) GuildId() int32 {
	return int32(capnp.Struct(s).Uint32(136))
}

func (s PlayerProfile) SetGuildId(v int32) {
	capnp.Struct(s).SetUint32(136, uint32(v))
}

func (s PlayerProfile) Birthday() int32 {
	return int32(capnp.Struct(s).Uint32(140))
}

func (s PlayerProfile) SetBirthday(v int32) {
	capnp.Struct(s).SetUint32(140, uint32(v))
}

func (s PlayerProfile) Lastlogin() int32 {
	return int32(capnp.Struct(s).Uint32(144))
}

func (s PlayerProfile) SetLastlogin(v int32) {
	capnp.Struct(s).SetUint32(144, uint32(v))
}

func (s PlayerProfile) TimePlayedMin() int32 {
	return int32(capnp.Struct(s).Uint32(148))
}

func (s PlayerProfile) SetTimePlayedMin(v int32) {
	capnp.Struct(s).SetUint32(148, uint32(v))
}

func (s PlayerProfile) Pvp() int32 {
	return int32(capnp.Struct(s).Uint32(152))
}

func (s PlayerProfile) SetPvp(v int32) {
	capnp.Struct(s).SetUint32(152, uint32(v))
}

func (s PlayerProfile) Anon() int32 {
	return int32(capnp.Struct(s).Uint32(156))
}

func (s PlayerProfile) SetAnon(v int32) {
	capnp.Struct(s).SetUint32(156, uint32(v))
}

func (s PlayerProfile) Gm() int32 {
	return int32(capnp.Struct(s).Uint32(160))
}

func (s PlayerProfile) SetGm(v int32) {
	capnp.Struct(s).SetUint32(160, uint32(v))
}

func (s PlayerProfile) Guildrank() int32 {
	return int32(capnp.Struct(s).Uint32(164))
}

func (s PlayerProfile) SetGuildrank(v int32) {
	capnp.Struct(s).SetUint32(164, uint32(v))
}

func (s PlayerProfile) Guildbanker() int32 {
	return int32(capnp.Struct(s).Uint32(168))
}

func (s PlayerProfile) SetGuildbanker(v int32) {
	capnp.Struct(s).SetUint32(168, uint32(v))
}

func (s PlayerProfile) Exp() int32 {
	return int32(capnp.Struct(s).Uint32(172))
}

func (s PlayerProfile) SetExp(v int32) {
	capnp.Struct(s).SetUint32(172, uint32(v))
}

func (s PlayerProfile) Timeentitledonaccount() int32 {
	return int32(capnp.Struct(s).Uint32(176))
}

func (s PlayerProfile) SetTimeentitledonaccount(v int32) {
	capnp.Struct(s).SetUint32(176, uint32(v))
}

func (s PlayerProfile) Languages() (capnp.Int32List, error) {
	p, err := capnp.Struct(s).Ptr(15)
	return capnp.Int32List(p.List()), err
}

func (s PlayerProfile) HasLanguages() bool {
	return capnp.Struct(s).HasPtr(15)
}

func (s PlayerProfile) SetLanguages(v capnp.Int32List) error {
	return capnp.Struct(s).SetPtr(15, v.ToPtr())
}

// NewLanguages sets the languages field to a newly
// allocated capnp.Int32List, preferring placement in s's segment.
func (s PlayerProfile) NewLanguages(n int32) (capnp.Int32List, error) {
	l, err := capnp.NewInt32List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.Int32List{}, err
	}
	err = capnp.Struct(s).SetPtr(15, l.ToPtr())
	return l, err
}
func (s PlayerProfile) X() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(180))
}

func (s PlayerProfile) SetX(v float32) {
	capnp.Struct(s).SetUint32(180, math.Float32bits(v))
}

func (s PlayerProfile) Y() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(184))
}

func (s PlayerProfile) SetY(v float32) {
	capnp.Struct(s).SetUint32(184, math.Float32bits(v))
}

func (s PlayerProfile) Z() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(188))
}

func (s PlayerProfile) SetZ(v float32) {
	capnp.Struct(s).SetUint32(188, math.Float32bits(v))
}

func (s PlayerProfile) Heading() float32 {
	return math.Float32frombits(capnp.Struct(s).Uint32(192))
}

func (s PlayerProfile) SetHeading(v float32) {
	capnp.Struct(s).SetUint32(192, math.Float32bits(v))
}

func (s PlayerProfile) PlatinumBank() int32 {
	return int32(capnp.Struct(s).Uint32(196))
}

func (s PlayerProfile) SetPlatinumBank(v int32) {
	capnp.Struct(s).SetUint32(196, uint32(v))
}

func (s PlayerProfile) GoldBank() int32 {
	return int32(capnp.Struct(s).Uint32(200))
}

func (s PlayerProfile) SetGoldBank(v int32) {
	capnp.Struct(s).SetUint32(200, uint32(v))
}

func (s PlayerProfile) SilverBank() int32 {
	return int32(capnp.Struct(s).Uint32(204))
}

func (s PlayerProfile) SetSilverBank(v int32) {
	capnp.Struct(s).SetUint32(204, uint32(v))
}

func (s PlayerProfile) CopperBank() int32 {
	return int32(capnp.Struct(s).Uint32(208))
}

func (s PlayerProfile) SetCopperBank(v int32) {
	capnp.Struct(s).SetUint32(208, uint32(v))
}

func (s PlayerProfile) PlatinumShared() int32 {
	return int32(capnp.Struct(s).Uint32(212))
}

func (s PlayerProfile) SetPlatinumShared(v int32) {
	capnp.Struct(s).SetUint32(212, uint32(v))
}

func (s PlayerProfile) Expansions() int32 {
	return int32(capnp.Struct(s).Uint32(216))
}

func (s PlayerProfile) SetExpansions(v int32) {
	capnp.Struct(s).SetUint32(216, uint32(v))
}

func (s PlayerProfile) Autosplit() int32 {
	return int32(capnp.Struct(s).Uint32(220))
}

func (s PlayerProfile) SetAutosplit(v int32) {
	capnp.Struct(s).SetUint32(220, uint32(v))
}

func (s PlayerProfile) ZoneId() int32 {
	return int32(capnp.Struct(s).Uint32(224))
}

func (s PlayerProfile) SetZoneId(v int32) {
	capnp.Struct(s).SetUint32(224, uint32(v))
}

func (s PlayerProfile) ZoneInstance() int32 {
	return int32(capnp.Struct(s).Uint32(228))
}

func (s PlayerProfile) SetZoneInstance(v int32) {
	capnp.Struct(s).SetUint32(228, uint32(v))
}

func (s PlayerProfile) GroupMembers() (StringList_List, error) {
	p, err := capnp.Struct(s).Ptr(16)
	return StringList_List(p.List()), err
}

func (s PlayerProfile) HasGroupMembers() bool {
	return capnp.Struct(s).HasPtr(16)
}

func (s PlayerProfile) SetGroupMembers(v StringList_List) error {
	return capnp.Struct(s).SetPtr(16, v.ToPtr())
}

// NewGroupMembers sets the groupMembers field to a newly
// allocated StringList_List, preferring placement in s's segment.
func (s PlayerProfile) NewGroupMembers(n int32) (StringList_List, error) {
	l, err := NewStringList_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return StringList_List{}, err
	}
	err = capnp.Struct(s).SetPtr(16, l.ToPtr())
	return l, err
}
func (s PlayerProfile) GroupLeader() (string, error) {
	p, err := capnp.Struct(s).Ptr(17)
	return p.Text(), err
}

func (s PlayerProfile) HasGroupLeader() bool {
	return capnp.Struct(s).HasPtr(17)
}

func (s PlayerProfile) GroupLeaderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(17)
	return p.TextBytes(), err
}

func (s PlayerProfile) SetGroupLeader(v string) error {
	return capnp.Struct(s).SetText(17, v)
}

func (s PlayerProfile) Entityid() int32 {
	return int32(capnp.Struct(s).Uint32(232))
}

func (s PlayerProfile) SetEntityid(v int32) {
	capnp.Struct(s).SetUint32(232, uint32(v))
}

func (s PlayerProfile) LeadAaActive() int32 {
	return int32(capnp.Struct(s).Uint32(236))
}

func (s PlayerProfile) SetLeadAaActive(v int32) {
	capnp.Struct(s).SetUint32(236, uint32(v))
}

func (s PlayerProfile) AirRemaining() int32 {
	return int32(capnp.Struct(s).Uint32(240))
}

func (s PlayerProfile) SetAirRemaining(v int32) {
	capnp.Struct(s).SetUint32(240, uint32(v))
}

func (s PlayerProfile) ExpAa() int32 {
	return int32(capnp.Struct(s).Uint32(244))
}

func (s PlayerProfile) SetExpAa(v int32) {
	capnp.Struct(s).SetUint32(244, uint32(v))
}

func (s PlayerProfile) GroupAutoconsent() int32 {
	return int32(capnp.Struct(s).Uint32(248))
}

func (s PlayerProfile) SetGroupAutoconsent(v int32) {
	capnp.Struct(s).SetUint32(248, uint32(v))
}

func (s PlayerProfile) RaidAutoconsent() int32 {
	return int32(capnp.Struct(s).Uint32(252))
}

func (s PlayerProfile) SetRaidAutoconsent(v int32) {
	capnp.Struct(s).SetUint32(252, uint32(v))
}

func (s PlayerProfile) GuildAutoconsent() int32 {
	return int32(capnp.Struct(s).Uint32(256))
}

func (s PlayerProfile) SetGuildAutoconsent(v int32) {
	capnp.Struct(s).SetUint32(256, uint32(v))
}

func (s PlayerProfile) Showhelm() int32 {
	return int32(capnp.Struct(s).Uint32(260))
}

func (s PlayerProfile) SetShowhelm(v int32) {
	capnp.Struct(s).SetUint32(260, uint32(v))
}

func (s PlayerProfile) InventoryItems() (ItemInstance_List, error) {
	p, err := capnp.Struct(s).Ptr(18)
	return ItemInstance_List(p.List()), err
}

func (s PlayerProfile) HasInventoryItems() bool {
	return capnp.Struct(s).HasPtr(18)
}

func (s PlayerProfile) SetInventoryItems(v ItemInstance_List) error {
	return capnp.Struct(s).SetPtr(18, v.ToPtr())
}

// NewInventoryItems sets the inventoryItems field to a newly
// allocated ItemInstance_List, preferring placement in s's segment.
func (s PlayerProfile) NewInventoryItems(n int32) (ItemInstance_List, error) {
	l, err := NewItemInstance_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return ItemInstance_List{}, err
	}
	err = capnp.Struct(s).SetPtr(18, l.ToPtr())
	return l, err
}
func (s PlayerProfile) SpawnId() int32 {
	return int32(capnp.Struct(s).Uint32(264))
}

func (s PlayerProfile) SetSpawnId(v int32) {
	capnp.Struct(s).SetUint32(264, uint32(v))
}

func (s PlayerProfile) Status() int32 {
	return int32(capnp.Struct(s).Uint32(268))
}

func (s PlayerProfile) SetStatus(v int32) {
	capnp.Struct(s).SetUint32(268, uint32(v))
}

func (s PlayerProfile) AaPoints() int32 {
	return int32(capnp.Struct(s).Uint32(272))
}

func (s PlayerProfile) SetAaPoints(v int32) {
	capnp.Struct(s).SetUint32(272, uint32(v))
}

func (s PlayerProfile) Ac() int32 {
	return int32(capnp.Struct(s).Uint32(276))
}

func (s PlayerProfile) SetAc(v int32) {
	capnp.Struct(s).SetUint32(276, uint32(v))
}

func (s PlayerProfile) MagicResist() int32 {
	return int32(capnp.Struct(s).Uint32(280))
}

func (s PlayerProfile) SetMagicResist(v int32) {
	capnp.Struct(s).SetUint32(280, uint32(v))
}

func (s PlayerProfile) FireResist() int32 {
	return int32(capnp.Struct(s).Uint32(284))
}

func (s PlayerProfile) SetFireResist(v int32) {
	capnp.Struct(s).SetUint32(284, uint32(v))
}

func (s PlayerProfile) ColdResist() int32 {
	return int32(capnp.Struct(s).Uint32(288))
}

func (s PlayerProfile) SetColdResist(v int32) {
	capnp.Struct(s).SetUint32(288, uint32(v))
}

func (s PlayerProfile) PoisonResist() int32 {
	return int32(capnp.Struct(s).Uint32(292))
}

func (s PlayerProfile) SetPoisonResist(v int32) {
	capnp.Struct(s).SetUint32(292, uint32(v))
}

func (s PlayerProfile) DiseaseResist() int32 {
	return int32(capnp.Struct(s).Uint32(296))
}

func (s PlayerProfile) SetDiseaseResist(v int32) {
	capnp.Struct(s).SetUint32(296, uint32(v))
}

func (s PlayerProfile) Haste() int32 {
	return int32(capnp.Struct(s).Uint32(300))
}

func (s PlayerProfile) SetHaste(v int32) {
	capnp.Struct(s).SetUint32(300, uint32(v))
}

func (s PlayerProfile) Accuracy() int32 {
	return int32(capnp.Struct(s).Uint32(304))
}

func (s PlayerProfile) SetAccuracy(v int32) {
	capnp.Struct(s).SetUint32(304, uint32(v))
}

func (s PlayerProfile) Attack() int32 {
	return int32(capnp.Struct(s).Uint32(308))
}

func (s PlayerProfile) SetAttack(v int32) {
	capnp.Struct(s).SetUint32(308, uint32(v))
}

func (s PlayerProfile) Avoidance() int32 {
	return int32(capnp.Struct(s).Uint32(312))
}

func (s PlayerProfile) SetAvoidance(v int32) {
	capnp.Struct(s).SetUint32(312, uint32(v))
}

func (s PlayerProfile) Clairvoyance() int32 {
	return int32(capnp.Struct(s).Uint32(316))
}

func (s PlayerProfile) SetClairvoyance(v int32) {
	capnp.Struct(s).SetUint32(316, uint32(v))
}

func (s PlayerProfile) CombatEffects() int32 {
	return int32(capnp.Struct(s).Uint32(320))
}

func (s PlayerProfile) SetCombatEffects(v int32) {
	capnp.Struct(s).SetUint32(320, uint32(v))
}

func (s PlayerProfile) DamageShieldMitigation() int32 {
	return int32(capnp.Struct(s).Uint32(324))
}

func (s PlayerProfile) SetDamageShieldMitigation(v int32) {
	capnp.Struct(s).SetUint32(324, uint32(v))
}

func (s PlayerProfile) DamageShield() int32 {
	return int32(capnp.Struct(s).Uint32(328))
}

func (s PlayerProfile) SetDamageShield(v int32) {
	capnp.Struct(s).SetUint32(328, uint32(v))
}

func (s PlayerProfile) DotShielding() int32 {
	return int32(capnp.Struct(s).Uint32(332))
}

func (s PlayerProfile) SetDotShielding(v int32) {
	capnp.Struct(s).SetUint32(332, uint32(v))
}

func (s PlayerProfile) HpRegen() int32 {
	return int32(capnp.Struct(s).Uint32(336))
}

func (s PlayerProfile) SetHpRegen(v int32) {
	capnp.Struct(s).SetUint32(336, uint32(v))
}

func (s PlayerProfile) ManaRegen() int32 {
	return int32(capnp.Struct(s).Uint32(340))
}

func (s PlayerProfile) SetManaRegen(v int32) {
	capnp.Struct(s).SetUint32(340, uint32(v))
}

func (s PlayerProfile) EnduranceRegen() int32 {
	return int32(capnp.Struct(s).Uint32(344))
}

func (s PlayerProfile) SetEnduranceRegen(v int32) {
	capnp.Struct(s).SetUint32(344, uint32(v))
}

func (s PlayerProfile) Shielding() int32 {
	return int32(capnp.Struct(s).Uint32(348))
}

func (s PlayerProfile) SetShielding(v int32) {
	capnp.Struct(s).SetUint32(348, uint32(v))
}

func (s PlayerProfile) SpellDamage() int32 {
	return int32(capnp.Struct(s).Uint32(352))
}

func (s PlayerProfile) SetSpellDamage(v int32) {
	capnp.Struct(s).SetUint32(352, uint32(v))
}

func (s PlayerProfile) SpellShielding() int32 {
	return int32(capnp.Struct(s).Uint32(356))
}

func (s PlayerProfile) SetSpellShielding(v int32) {
	capnp.Struct(s).SetUint32(356, uint32(v))
}

func (s PlayerProfile) Strikethrough() int32 {
	return int32(capnp.Struct(s).Uint32(360))
}

func (s PlayerProfile) SetStrikethrough(v int32) {
	capnp.Struct(s).SetUint32(360, uint32(v))
}

func (s PlayerProfile) StunResist() int32 {
	return int32(capnp.Struct(s).Uint32(364))
}

func (s PlayerProfile) SetStunResist(v int32) {
	capnp.Struct(s).SetUint32(364, uint32(v))
}

func (s PlayerProfile) Backstab() int32 {
	return int32(capnp.Struct(s).Uint32(368))
}

func (s PlayerProfile) SetBackstab(v int32) {
	capnp.Struct(s).SetUint32(368, uint32(v))
}

func (s PlayerProfile) Alcohol() int32 {
	return int32(capnp.Struct(s).Uint32(372))
}

func (s PlayerProfile) SetAlcohol(v int32) {
	capnp.Struct(s).SetUint32(372, uint32(v))
}

func (s PlayerProfile) MaxHp() int64 {
	return int64(capnp.Struct(s).Uint64(376))
}

func (s PlayerProfile) SetMaxHp(v int64) {
	capnp.Struct(s).SetUint64(376, uint64(v))
}

func (s PlayerProfile) MaxMana() int64 {
	return int64(capnp.Struct(s).Uint64(384))
}

func (s PlayerProfile) SetMaxMana(v int64) {
	capnp.Struct(s).SetUint64(384, uint64(v))
}

func (s PlayerProfile) MaxEndurance() int64 {
	return int64(capnp.Struct(s).Uint64(392))
}

func (s PlayerProfile) SetMaxEndurance(v int64) {
	capnp.Struct(s).SetUint64(392, uint64(v))
}

// PlayerProfile_List is a list of PlayerProfile.
type PlayerProfile_List = capnp.StructList[PlayerProfile]

// NewPlayerProfile creates a new list of PlayerProfile.
func NewPlayerProfile_List(s *capnp.Segment, sz int32) (PlayerProfile_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 400, PointerCount: 19}, sz)
	return capnp.StructList[PlayerProfile](l), err
}

// PlayerProfile_Future is a wrapper for a PlayerProfile promised by a client call.
type PlayerProfile_Future struct{ *capnp.Future }

func (f PlayerProfile_Future) Struct() (PlayerProfile, error) {
	p, err := f.Future.Ptr()
	return PlayerProfile(p.Struct()), err
}
func (p PlayerProfile_Future) ItemMaterial() TextureProfile_Future {
	return TextureProfile_Future{Future: p.Future.Field(2, nil)}
}
func (p PlayerProfile_Future) Disciplines() Disciplines_Future {
	return Disciplines_Future{Future: p.Future.Field(9, nil)}
}
func (p PlayerProfile_Future) Potionbelt() PotionBelt_Future {
	return PotionBelt_Future{Future: p.Future.Field(12, nil)}
}

type Tint capnp.Struct

// Tint_TypeID is the unique identifier for the type Tint.
const Tint_TypeID = 0xe83eeeca42eb6184

func NewTint(s *capnp.Segment) (Tint, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Tint(st), err
}

func NewRootTint(s *capnp.Segment) (Tint, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Tint(st), err
}

func ReadRootTint(msg *capnp.Message) (Tint, error) {
	root, err := msg.Root()
	return Tint(root.Struct()), err
}

func (s Tint) String() string {
	str, _ := text.Marshal(0xe83eeeca42eb6184, capnp.Struct(s))
	return str
}

func (s Tint) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Tint) DecodeFromPtr(p capnp.Ptr) Tint {
	return Tint(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Tint) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Tint) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Tint) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Tint) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Tint) Blue() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s Tint) SetBlue(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s Tint) Green() int32 {
	return int32(capnp.Struct(s).Uint32(4))
}

func (s Tint) SetGreen(v int32) {
	capnp.Struct(s).SetUint32(4, uint32(v))
}

func (s Tint) Reddays() int32 {
	return int32(capnp.Struct(s).Uint32(8))
}

func (s Tint) SetReddays(v int32) {
	capnp.Struct(s).SetUint32(8, uint32(v))
}

func (s Tint) UseTint() int32 {
	return int32(capnp.Struct(s).Uint32(12))
}

func (s Tint) SetUseTint(v int32) {
	capnp.Struct(s).SetUint32(12, uint32(v))
}

// Tint_List is a list of Tint.
type Tint_List = capnp.StructList[Tint]

// NewTint creates a new list of Tint.
func NewTint_List(s *capnp.Segment, sz int32) (Tint_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return capnp.StructList[Tint](l), err
}

// Tint_Future is a wrapper for a Tint promised by a client call.
type Tint_Future struct{ *capnp.Future }

func (f Tint_Future) Struct() (Tint, error) {
	p, err := f.Future.Ptr()
	return Tint(p.Struct()), err
}
