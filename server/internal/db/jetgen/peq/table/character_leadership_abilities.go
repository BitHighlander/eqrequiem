//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterLeadershipAbilities = newCharacterLeadershipAbilitiesTable("peq", "character_leadership_abilities", "")

type characterLeadershipAbilitiesTable struct {
	mysql.Table

	// Columns
	ID   mysql.ColumnInteger
	Slot mysql.ColumnInteger
	Rank mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterLeadershipAbilitiesTable struct {
	characterLeadershipAbilitiesTable

	NEW characterLeadershipAbilitiesTable
}

// AS creates new CharacterLeadershipAbilitiesTable with assigned alias
func (a CharacterLeadershipAbilitiesTable) AS(alias string) *CharacterLeadershipAbilitiesTable {
	return newCharacterLeadershipAbilitiesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterLeadershipAbilitiesTable with assigned schema name
func (a CharacterLeadershipAbilitiesTable) FromSchema(schemaName string) *CharacterLeadershipAbilitiesTable {
	return newCharacterLeadershipAbilitiesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterLeadershipAbilitiesTable with assigned table prefix
func (a CharacterLeadershipAbilitiesTable) WithPrefix(prefix string) *CharacterLeadershipAbilitiesTable {
	return newCharacterLeadershipAbilitiesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterLeadershipAbilitiesTable with assigned table suffix
func (a CharacterLeadershipAbilitiesTable) WithSuffix(suffix string) *CharacterLeadershipAbilitiesTable {
	return newCharacterLeadershipAbilitiesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterLeadershipAbilitiesTable(schemaName, tableName, alias string) *CharacterLeadershipAbilitiesTable {
	return &CharacterLeadershipAbilitiesTable{
		characterLeadershipAbilitiesTable: newCharacterLeadershipAbilitiesTableImpl(schemaName, tableName, alias),
		NEW:                               newCharacterLeadershipAbilitiesTableImpl("", "new", ""),
	}
}

func newCharacterLeadershipAbilitiesTableImpl(schemaName, tableName, alias string) characterLeadershipAbilitiesTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		SlotColumn     = mysql.IntegerColumn("slot")
		RankColumn     = mysql.IntegerColumn("rank")
		allColumns     = mysql.ColumnList{IDColumn, SlotColumn, RankColumn}
		mutableColumns = mysql.ColumnList{RankColumn}
		defaultColumns = mysql.ColumnList{IDColumn, SlotColumn, RankColumn}
	)

	return characterLeadershipAbilitiesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:   IDColumn,
		Slot: SlotColumn,
		Rank: RankColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
