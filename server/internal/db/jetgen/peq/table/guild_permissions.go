//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GuildPermissions = newGuildPermissionsTable("peq", "guild_permissions", "")

type guildPermissionsTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	PermID     mysql.ColumnInteger
	GuildID    mysql.ColumnInteger
	Permission mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GuildPermissionsTable struct {
	guildPermissionsTable

	NEW guildPermissionsTable
}

// AS creates new GuildPermissionsTable with assigned alias
func (a GuildPermissionsTable) AS(alias string) *GuildPermissionsTable {
	return newGuildPermissionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GuildPermissionsTable with assigned schema name
func (a GuildPermissionsTable) FromSchema(schemaName string) *GuildPermissionsTable {
	return newGuildPermissionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GuildPermissionsTable with assigned table prefix
func (a GuildPermissionsTable) WithPrefix(prefix string) *GuildPermissionsTable {
	return newGuildPermissionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GuildPermissionsTable with assigned table suffix
func (a GuildPermissionsTable) WithSuffix(suffix string) *GuildPermissionsTable {
	return newGuildPermissionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGuildPermissionsTable(schemaName, tableName, alias string) *GuildPermissionsTable {
	return &GuildPermissionsTable{
		guildPermissionsTable: newGuildPermissionsTableImpl(schemaName, tableName, alias),
		NEW:                   newGuildPermissionsTableImpl("", "new", ""),
	}
}

func newGuildPermissionsTableImpl(schemaName, tableName, alias string) guildPermissionsTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		PermIDColumn     = mysql.IntegerColumn("perm_id")
		GuildIDColumn    = mysql.IntegerColumn("guild_id")
		PermissionColumn = mysql.IntegerColumn("permission")
		allColumns       = mysql.ColumnList{IDColumn, PermIDColumn, GuildIDColumn, PermissionColumn}
		mutableColumns   = mysql.ColumnList{PermIDColumn, GuildIDColumn, PermissionColumn}
		defaultColumns   = mysql.ColumnList{PermIDColumn, GuildIDColumn, PermissionColumn}
	)

	return guildPermissionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		PermID:     PermIDColumn,
		GuildID:    GuildIDColumn,
		Permission: PermissionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
