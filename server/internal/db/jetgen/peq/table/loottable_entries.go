//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LoottableEntries = newLoottableEntriesTable("peq", "loottable_entries", "")

type loottableEntriesTable struct {
	mysql.Table

	// Columns
	LoottableID mysql.ColumnInteger
	LootdropID  mysql.ColumnInteger
	Multiplier  mysql.ColumnInteger
	Droplimit   mysql.ColumnInteger
	Mindrop     mysql.ColumnInteger
	Probability mysql.ColumnFloat

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type LoottableEntriesTable struct {
	loottableEntriesTable

	NEW loottableEntriesTable
}

// AS creates new LoottableEntriesTable with assigned alias
func (a LoottableEntriesTable) AS(alias string) *LoottableEntriesTable {
	return newLoottableEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LoottableEntriesTable with assigned schema name
func (a LoottableEntriesTable) FromSchema(schemaName string) *LoottableEntriesTable {
	return newLoottableEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LoottableEntriesTable with assigned table prefix
func (a LoottableEntriesTable) WithPrefix(prefix string) *LoottableEntriesTable {
	return newLoottableEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LoottableEntriesTable with assigned table suffix
func (a LoottableEntriesTable) WithSuffix(suffix string) *LoottableEntriesTable {
	return newLoottableEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLoottableEntriesTable(schemaName, tableName, alias string) *LoottableEntriesTable {
	return &LoottableEntriesTable{
		loottableEntriesTable: newLoottableEntriesTableImpl(schemaName, tableName, alias),
		NEW:                   newLoottableEntriesTableImpl("", "new", ""),
	}
}

func newLoottableEntriesTableImpl(schemaName, tableName, alias string) loottableEntriesTable {
	var (
		LoottableIDColumn = mysql.IntegerColumn("loottable_id")
		LootdropIDColumn  = mysql.IntegerColumn("lootdrop_id")
		MultiplierColumn  = mysql.IntegerColumn("multiplier")
		DroplimitColumn   = mysql.IntegerColumn("droplimit")
		MindropColumn     = mysql.IntegerColumn("mindrop")
		ProbabilityColumn = mysql.FloatColumn("probability")
		allColumns        = mysql.ColumnList{LoottableIDColumn, LootdropIDColumn, MultiplierColumn, DroplimitColumn, MindropColumn, ProbabilityColumn}
		mutableColumns    = mysql.ColumnList{MultiplierColumn, DroplimitColumn, MindropColumn, ProbabilityColumn}
		defaultColumns    = mysql.ColumnList{LoottableIDColumn, LootdropIDColumn, MultiplierColumn, DroplimitColumn, MindropColumn, ProbabilityColumn}
	)

	return loottableEntriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		LoottableID: LoottableIDColumn,
		LootdropID:  LootdropIDColumn,
		Multiplier:  MultiplierColumn,
		Droplimit:   DroplimitColumn,
		Mindrop:     MindropColumn,
		Probability: ProbabilityColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
