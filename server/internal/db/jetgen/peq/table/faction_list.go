//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FactionList = newFactionListTable("peq", "faction_list", "")

type factionListTable struct {
	mysql.Table

	// Columns
	ID   mysql.ColumnInteger
	Name mysql.ColumnString
	Base mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FactionListTable struct {
	factionListTable

	NEW factionListTable
}

// AS creates new FactionListTable with assigned alias
func (a FactionListTable) AS(alias string) *FactionListTable {
	return newFactionListTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FactionListTable with assigned schema name
func (a FactionListTable) FromSchema(schemaName string) *FactionListTable {
	return newFactionListTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FactionListTable with assigned table prefix
func (a FactionListTable) WithPrefix(prefix string) *FactionListTable {
	return newFactionListTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FactionListTable with assigned table suffix
func (a FactionListTable) WithSuffix(suffix string) *FactionListTable {
	return newFactionListTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFactionListTable(schemaName, tableName, alias string) *FactionListTable {
	return &FactionListTable{
		factionListTable: newFactionListTableImpl(schemaName, tableName, alias),
		NEW:              newFactionListTableImpl("", "new", ""),
	}
}

func newFactionListTableImpl(schemaName, tableName, alias string) factionListTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		NameColumn     = mysql.StringColumn("name")
		BaseColumn     = mysql.IntegerColumn("base")
		allColumns     = mysql.ColumnList{IDColumn, NameColumn, BaseColumn}
		mutableColumns = mysql.ColumnList{NameColumn, BaseColumn}
		defaultColumns = mysql.ColumnList{NameColumn, BaseColumn}
	)

	return factionListTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:   IDColumn,
		Name: NameColumn,
		Base: BaseColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
