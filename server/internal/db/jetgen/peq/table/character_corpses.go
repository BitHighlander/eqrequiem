//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterCorpses = newCharacterCorpsesTable("peq", "character_corpses", "")

type characterCorpsesTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	Charid          mysql.ColumnInteger
	Charname        mysql.ColumnString
	ZoneID          mysql.ColumnInteger
	InstanceID      mysql.ColumnInteger
	X               mysql.ColumnFloat
	Y               mysql.ColumnFloat
	Z               mysql.ColumnFloat
	Heading         mysql.ColumnFloat
	TimeOfDeath     mysql.ColumnTimestamp
	GuildConsentID  mysql.ColumnInteger
	IsRezzed        mysql.ColumnInteger
	IsBuried        mysql.ColumnInteger
	WasAtGraveyard  mysql.ColumnInteger
	IsLocked        mysql.ColumnInteger
	Exp             mysql.ColumnInteger
	Size            mysql.ColumnInteger
	Level           mysql.ColumnInteger
	Race            mysql.ColumnInteger
	Gender          mysql.ColumnInteger
	Class           mysql.ColumnInteger
	Deity           mysql.ColumnInteger
	Texture         mysql.ColumnInteger
	HelmTexture     mysql.ColumnInteger
	Copper          mysql.ColumnInteger
	Silver          mysql.ColumnInteger
	Gold            mysql.ColumnInteger
	Platinum        mysql.ColumnInteger
	HairColor       mysql.ColumnInteger
	BeardColor      mysql.ColumnInteger
	EyeColor1       mysql.ColumnInteger
	EyeColor2       mysql.ColumnInteger
	HairStyle       mysql.ColumnInteger
	Face            mysql.ColumnInteger
	Beard           mysql.ColumnInteger
	DrakkinHeritage mysql.ColumnInteger
	DrakkinTattoo   mysql.ColumnInteger
	DrakkinDetails  mysql.ColumnInteger
	Wc1             mysql.ColumnInteger
	Wc2             mysql.ColumnInteger
	Wc3             mysql.ColumnInteger
	Wc4             mysql.ColumnInteger
	Wc5             mysql.ColumnInteger
	Wc6             mysql.ColumnInteger
	Wc7             mysql.ColumnInteger
	Wc8             mysql.ColumnInteger
	Wc9             mysql.ColumnInteger
	RezTime         mysql.ColumnInteger
	GmExp           mysql.ColumnInteger
	KilledBy        mysql.ColumnInteger
	Rezzable        mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterCorpsesTable struct {
	characterCorpsesTable

	NEW characterCorpsesTable
}

// AS creates new CharacterCorpsesTable with assigned alias
func (a CharacterCorpsesTable) AS(alias string) *CharacterCorpsesTable {
	return newCharacterCorpsesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterCorpsesTable with assigned schema name
func (a CharacterCorpsesTable) FromSchema(schemaName string) *CharacterCorpsesTable {
	return newCharacterCorpsesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterCorpsesTable with assigned table prefix
func (a CharacterCorpsesTable) WithPrefix(prefix string) *CharacterCorpsesTable {
	return newCharacterCorpsesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterCorpsesTable with assigned table suffix
func (a CharacterCorpsesTable) WithSuffix(suffix string) *CharacterCorpsesTable {
	return newCharacterCorpsesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterCorpsesTable(schemaName, tableName, alias string) *CharacterCorpsesTable {
	return &CharacterCorpsesTable{
		characterCorpsesTable: newCharacterCorpsesTableImpl(schemaName, tableName, alias),
		NEW:                   newCharacterCorpsesTableImpl("", "new", ""),
	}
}

func newCharacterCorpsesTableImpl(schemaName, tableName, alias string) characterCorpsesTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		CharidColumn          = mysql.IntegerColumn("charid")
		CharnameColumn        = mysql.StringColumn("charname")
		ZoneIDColumn          = mysql.IntegerColumn("zone_id")
		InstanceIDColumn      = mysql.IntegerColumn("instance_id")
		XColumn               = mysql.FloatColumn("x")
		YColumn               = mysql.FloatColumn("y")
		ZColumn               = mysql.FloatColumn("z")
		HeadingColumn         = mysql.FloatColumn("heading")
		TimeOfDeathColumn     = mysql.TimestampColumn("time_of_death")
		GuildConsentIDColumn  = mysql.IntegerColumn("guild_consent_id")
		IsRezzedColumn        = mysql.IntegerColumn("is_rezzed")
		IsBuriedColumn        = mysql.IntegerColumn("is_buried")
		WasAtGraveyardColumn  = mysql.IntegerColumn("was_at_graveyard")
		IsLockedColumn        = mysql.IntegerColumn("is_locked")
		ExpColumn             = mysql.IntegerColumn("exp")
		SizeColumn            = mysql.IntegerColumn("size")
		LevelColumn           = mysql.IntegerColumn("level")
		RaceColumn            = mysql.IntegerColumn("race")
		GenderColumn          = mysql.IntegerColumn("gender")
		ClassColumn           = mysql.IntegerColumn("class")
		DeityColumn           = mysql.IntegerColumn("deity")
		TextureColumn         = mysql.IntegerColumn("texture")
		HelmTextureColumn     = mysql.IntegerColumn("helm_texture")
		CopperColumn          = mysql.IntegerColumn("copper")
		SilverColumn          = mysql.IntegerColumn("silver")
		GoldColumn            = mysql.IntegerColumn("gold")
		PlatinumColumn        = mysql.IntegerColumn("platinum")
		HairColorColumn       = mysql.IntegerColumn("hair_color")
		BeardColorColumn      = mysql.IntegerColumn("beard_color")
		EyeColor1Column       = mysql.IntegerColumn("eye_color_1")
		EyeColor2Column       = mysql.IntegerColumn("eye_color_2")
		HairStyleColumn       = mysql.IntegerColumn("hair_style")
		FaceColumn            = mysql.IntegerColumn("face")
		BeardColumn           = mysql.IntegerColumn("beard")
		DrakkinHeritageColumn = mysql.IntegerColumn("drakkin_heritage")
		DrakkinTattooColumn   = mysql.IntegerColumn("drakkin_tattoo")
		DrakkinDetailsColumn  = mysql.IntegerColumn("drakkin_details")
		Wc1Column             = mysql.IntegerColumn("wc_1")
		Wc2Column             = mysql.IntegerColumn("wc_2")
		Wc3Column             = mysql.IntegerColumn("wc_3")
		Wc4Column             = mysql.IntegerColumn("wc_4")
		Wc5Column             = mysql.IntegerColumn("wc_5")
		Wc6Column             = mysql.IntegerColumn("wc_6")
		Wc7Column             = mysql.IntegerColumn("wc_7")
		Wc8Column             = mysql.IntegerColumn("wc_8")
		Wc9Column             = mysql.IntegerColumn("wc_9")
		RezTimeColumn         = mysql.IntegerColumn("rez_time")
		GmExpColumn           = mysql.IntegerColumn("gm_exp")
		KilledByColumn        = mysql.IntegerColumn("killed_by")
		RezzableColumn        = mysql.IntegerColumn("rezzable")
		allColumns            = mysql.ColumnList{IDColumn, CharidColumn, CharnameColumn, ZoneIDColumn, InstanceIDColumn, XColumn, YColumn, ZColumn, HeadingColumn, TimeOfDeathColumn, GuildConsentIDColumn, IsRezzedColumn, IsBuriedColumn, WasAtGraveyardColumn, IsLockedColumn, ExpColumn, SizeColumn, LevelColumn, RaceColumn, GenderColumn, ClassColumn, DeityColumn, TextureColumn, HelmTextureColumn, CopperColumn, SilverColumn, GoldColumn, PlatinumColumn, HairColorColumn, BeardColorColumn, EyeColor1Column, EyeColor2Column, HairStyleColumn, FaceColumn, BeardColumn, DrakkinHeritageColumn, DrakkinTattooColumn, DrakkinDetailsColumn, Wc1Column, Wc2Column, Wc3Column, Wc4Column, Wc5Column, Wc6Column, Wc7Column, Wc8Column, Wc9Column, RezTimeColumn, GmExpColumn, KilledByColumn, RezzableColumn}
		mutableColumns        = mysql.ColumnList{CharidColumn, CharnameColumn, ZoneIDColumn, InstanceIDColumn, XColumn, YColumn, ZColumn, HeadingColumn, TimeOfDeathColumn, GuildConsentIDColumn, IsRezzedColumn, IsBuriedColumn, WasAtGraveyardColumn, IsLockedColumn, ExpColumn, SizeColumn, LevelColumn, RaceColumn, GenderColumn, ClassColumn, DeityColumn, TextureColumn, HelmTextureColumn, CopperColumn, SilverColumn, GoldColumn, PlatinumColumn, HairColorColumn, BeardColorColumn, EyeColor1Column, EyeColor2Column, HairStyleColumn, FaceColumn, BeardColumn, DrakkinHeritageColumn, DrakkinTattooColumn, DrakkinDetailsColumn, Wc1Column, Wc2Column, Wc3Column, Wc4Column, Wc5Column, Wc6Column, Wc7Column, Wc8Column, Wc9Column, RezTimeColumn, GmExpColumn, KilledByColumn, RezzableColumn}
		defaultColumns        = mysql.ColumnList{CharidColumn, CharnameColumn, ZoneIDColumn, InstanceIDColumn, XColumn, YColumn, ZColumn, HeadingColumn, TimeOfDeathColumn, GuildConsentIDColumn, IsRezzedColumn, IsBuriedColumn, WasAtGraveyardColumn, IsLockedColumn, ExpColumn, SizeColumn, LevelColumn, RaceColumn, GenderColumn, ClassColumn, DeityColumn, TextureColumn, HelmTextureColumn, CopperColumn, SilverColumn, GoldColumn, PlatinumColumn, HairColorColumn, BeardColorColumn, EyeColor1Column, EyeColor2Column, HairStyleColumn, FaceColumn, BeardColumn, DrakkinHeritageColumn, DrakkinTattooColumn, DrakkinDetailsColumn, Wc1Column, Wc2Column, Wc3Column, Wc4Column, Wc5Column, Wc6Column, Wc7Column, Wc8Column, Wc9Column, RezTimeColumn, GmExpColumn, KilledByColumn, RezzableColumn}
	)

	return characterCorpsesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		Charid:          CharidColumn,
		Charname:        CharnameColumn,
		ZoneID:          ZoneIDColumn,
		InstanceID:      InstanceIDColumn,
		X:               XColumn,
		Y:               YColumn,
		Z:               ZColumn,
		Heading:         HeadingColumn,
		TimeOfDeath:     TimeOfDeathColumn,
		GuildConsentID:  GuildConsentIDColumn,
		IsRezzed:        IsRezzedColumn,
		IsBuried:        IsBuriedColumn,
		WasAtGraveyard:  WasAtGraveyardColumn,
		IsLocked:        IsLockedColumn,
		Exp:             ExpColumn,
		Size:            SizeColumn,
		Level:           LevelColumn,
		Race:            RaceColumn,
		Gender:          GenderColumn,
		Class:           ClassColumn,
		Deity:           DeityColumn,
		Texture:         TextureColumn,
		HelmTexture:     HelmTextureColumn,
		Copper:          CopperColumn,
		Silver:          SilverColumn,
		Gold:            GoldColumn,
		Platinum:        PlatinumColumn,
		HairColor:       HairColorColumn,
		BeardColor:      BeardColorColumn,
		EyeColor1:       EyeColor1Column,
		EyeColor2:       EyeColor2Column,
		HairStyle:       HairStyleColumn,
		Face:            FaceColumn,
		Beard:           BeardColumn,
		DrakkinHeritage: DrakkinHeritageColumn,
		DrakkinTattoo:   DrakkinTattooColumn,
		DrakkinDetails:  DrakkinDetailsColumn,
		Wc1:             Wc1Column,
		Wc2:             Wc2Column,
		Wc3:             Wc3Column,
		Wc4:             Wc4Column,
		Wc5:             Wc5Column,
		Wc6:             Wc6Column,
		Wc7:             Wc7Column,
		Wc8:             Wc8Column,
		Wc9:             Wc9Column,
		RezTime:         RezTimeColumn,
		GmExp:           GmExpColumn,
		KilledBy:        KilledByColumn,
		Rezzable:        RezzableColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
