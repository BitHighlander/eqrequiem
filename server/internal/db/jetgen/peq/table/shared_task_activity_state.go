//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SharedTaskActivityState = newSharedTaskActivityStateTable("peq", "shared_task_activity_state", "")

type sharedTaskActivityStateTable struct {
	mysql.Table

	// Columns
	SharedTaskID  mysql.ColumnInteger
	ActivityID    mysql.ColumnInteger
	DoneCount     mysql.ColumnInteger
	UpdatedTime   mysql.ColumnTimestamp
	CompletedTime mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SharedTaskActivityStateTable struct {
	sharedTaskActivityStateTable

	NEW sharedTaskActivityStateTable
}

// AS creates new SharedTaskActivityStateTable with assigned alias
func (a SharedTaskActivityStateTable) AS(alias string) *SharedTaskActivityStateTable {
	return newSharedTaskActivityStateTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SharedTaskActivityStateTable with assigned schema name
func (a SharedTaskActivityStateTable) FromSchema(schemaName string) *SharedTaskActivityStateTable {
	return newSharedTaskActivityStateTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SharedTaskActivityStateTable with assigned table prefix
func (a SharedTaskActivityStateTable) WithPrefix(prefix string) *SharedTaskActivityStateTable {
	return newSharedTaskActivityStateTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SharedTaskActivityStateTable with assigned table suffix
func (a SharedTaskActivityStateTable) WithSuffix(suffix string) *SharedTaskActivityStateTable {
	return newSharedTaskActivityStateTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSharedTaskActivityStateTable(schemaName, tableName, alias string) *SharedTaskActivityStateTable {
	return &SharedTaskActivityStateTable{
		sharedTaskActivityStateTable: newSharedTaskActivityStateTableImpl(schemaName, tableName, alias),
		NEW:                          newSharedTaskActivityStateTableImpl("", "new", ""),
	}
}

func newSharedTaskActivityStateTableImpl(schemaName, tableName, alias string) sharedTaskActivityStateTable {
	var (
		SharedTaskIDColumn  = mysql.IntegerColumn("shared_task_id")
		ActivityIDColumn    = mysql.IntegerColumn("activity_id")
		DoneCountColumn     = mysql.IntegerColumn("done_count")
		UpdatedTimeColumn   = mysql.TimestampColumn("updated_time")
		CompletedTimeColumn = mysql.TimestampColumn("completed_time")
		allColumns          = mysql.ColumnList{SharedTaskIDColumn, ActivityIDColumn, DoneCountColumn, UpdatedTimeColumn, CompletedTimeColumn}
		mutableColumns      = mysql.ColumnList{DoneCountColumn, UpdatedTimeColumn, CompletedTimeColumn}
		defaultColumns      = mysql.ColumnList{}
	)

	return sharedTaskActivityStateTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SharedTaskID:  SharedTaskIDColumn,
		ActivityID:    ActivityIDColumn,
		DoneCount:     DoneCountColumn,
		UpdatedTime:   UpdatedTimeColumn,
		CompletedTime: CompletedTimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
