//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GroupID = newGroupIDTable("peq", "group_id", "")

type groupIDTable struct {
	mysql.Table

	// Columns
	GroupID     mysql.ColumnInteger
	Name        mysql.ColumnString
	CharacterID mysql.ColumnInteger
	BotID       mysql.ColumnInteger
	MercID      mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GroupIDTable struct {
	groupIDTable

	NEW groupIDTable
}

// AS creates new GroupIDTable with assigned alias
func (a GroupIDTable) AS(alias string) *GroupIDTable {
	return newGroupIDTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GroupIDTable with assigned schema name
func (a GroupIDTable) FromSchema(schemaName string) *GroupIDTable {
	return newGroupIDTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GroupIDTable with assigned table prefix
func (a GroupIDTable) WithPrefix(prefix string) *GroupIDTable {
	return newGroupIDTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GroupIDTable with assigned table suffix
func (a GroupIDTable) WithSuffix(suffix string) *GroupIDTable {
	return newGroupIDTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGroupIDTable(schemaName, tableName, alias string) *GroupIDTable {
	return &GroupIDTable{
		groupIDTable: newGroupIDTableImpl(schemaName, tableName, alias),
		NEW:          newGroupIDTableImpl("", "new", ""),
	}
}

func newGroupIDTableImpl(schemaName, tableName, alias string) groupIDTable {
	var (
		GroupIDColumn     = mysql.IntegerColumn("group_id")
		NameColumn        = mysql.StringColumn("name")
		CharacterIDColumn = mysql.IntegerColumn("character_id")
		BotIDColumn       = mysql.IntegerColumn("bot_id")
		MercIDColumn      = mysql.IntegerColumn("merc_id")
		allColumns        = mysql.ColumnList{GroupIDColumn, NameColumn, CharacterIDColumn, BotIDColumn, MercIDColumn}
		mutableColumns    = mysql.ColumnList{NameColumn}
		defaultColumns    = mysql.ColumnList{GroupIDColumn, NameColumn, CharacterIDColumn, BotIDColumn, MercIDColumn}
	)

	return groupIDTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		GroupID:     GroupIDColumn,
		Name:        NameColumn,
		CharacterID: CharacterIDColumn,
		BotID:       BotIDColumn,
		MercID:      MercIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
