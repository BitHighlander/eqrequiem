//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DbStr = newDbStrTable("peq", "db_str", "")

type dbStrTable struct {
	mysql.Table

	// Columns
	ID    mysql.ColumnInteger
	Type  mysql.ColumnInteger
	Value mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type DbStrTable struct {
	dbStrTable

	NEW dbStrTable
}

// AS creates new DbStrTable with assigned alias
func (a DbStrTable) AS(alias string) *DbStrTable {
	return newDbStrTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DbStrTable with assigned schema name
func (a DbStrTable) FromSchema(schemaName string) *DbStrTable {
	return newDbStrTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DbStrTable with assigned table prefix
func (a DbStrTable) WithPrefix(prefix string) *DbStrTable {
	return newDbStrTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DbStrTable with assigned table suffix
func (a DbStrTable) WithSuffix(suffix string) *DbStrTable {
	return newDbStrTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDbStrTable(schemaName, tableName, alias string) *DbStrTable {
	return &DbStrTable{
		dbStrTable: newDbStrTableImpl(schemaName, tableName, alias),
		NEW:        newDbStrTableImpl("", "new", ""),
	}
}

func newDbStrTableImpl(schemaName, tableName, alias string) dbStrTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		TypeColumn     = mysql.IntegerColumn("type")
		ValueColumn    = mysql.StringColumn("value")
		allColumns     = mysql.ColumnList{IDColumn, TypeColumn, ValueColumn}
		mutableColumns = mysql.ColumnList{ValueColumn}
		defaultColumns = mysql.ColumnList{}
	)

	return dbStrTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:    IDColumn,
		Type:  TypeColumn,
		Value: ValueColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
