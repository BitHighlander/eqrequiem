//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var NpcSpellsEffectsEntries = newNpcSpellsEffectsEntriesTable("peq", "npc_spells_effects_entries", "")

type npcSpellsEffectsEntriesTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnInteger
	NpcSpellsEffectsID mysql.ColumnInteger
	SpellEffectID      mysql.ColumnInteger
	Minlevel           mysql.ColumnInteger
	Maxlevel           mysql.ColumnInteger
	SeBase             mysql.ColumnInteger
	SeLimit            mysql.ColumnInteger
	SeMax              mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type NpcSpellsEffectsEntriesTable struct {
	npcSpellsEffectsEntriesTable

	NEW npcSpellsEffectsEntriesTable
}

// AS creates new NpcSpellsEffectsEntriesTable with assigned alias
func (a NpcSpellsEffectsEntriesTable) AS(alias string) *NpcSpellsEffectsEntriesTable {
	return newNpcSpellsEffectsEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new NpcSpellsEffectsEntriesTable with assigned schema name
func (a NpcSpellsEffectsEntriesTable) FromSchema(schemaName string) *NpcSpellsEffectsEntriesTable {
	return newNpcSpellsEffectsEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new NpcSpellsEffectsEntriesTable with assigned table prefix
func (a NpcSpellsEffectsEntriesTable) WithPrefix(prefix string) *NpcSpellsEffectsEntriesTable {
	return newNpcSpellsEffectsEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new NpcSpellsEffectsEntriesTable with assigned table suffix
func (a NpcSpellsEffectsEntriesTable) WithSuffix(suffix string) *NpcSpellsEffectsEntriesTable {
	return newNpcSpellsEffectsEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newNpcSpellsEffectsEntriesTable(schemaName, tableName, alias string) *NpcSpellsEffectsEntriesTable {
	return &NpcSpellsEffectsEntriesTable{
		npcSpellsEffectsEntriesTable: newNpcSpellsEffectsEntriesTableImpl(schemaName, tableName, alias),
		NEW:                          newNpcSpellsEffectsEntriesTableImpl("", "new", ""),
	}
}

func newNpcSpellsEffectsEntriesTableImpl(schemaName, tableName, alias string) npcSpellsEffectsEntriesTable {
	var (
		IDColumn                 = mysql.IntegerColumn("id")
		NpcSpellsEffectsIDColumn = mysql.IntegerColumn("npc_spells_effects_id")
		SpellEffectIDColumn      = mysql.IntegerColumn("spell_effect_id")
		MinlevelColumn           = mysql.IntegerColumn("minlevel")
		MaxlevelColumn           = mysql.IntegerColumn("maxlevel")
		SeBaseColumn             = mysql.IntegerColumn("se_base")
		SeLimitColumn            = mysql.IntegerColumn("se_limit")
		SeMaxColumn              = mysql.IntegerColumn("se_max")
		allColumns               = mysql.ColumnList{IDColumn, NpcSpellsEffectsIDColumn, SpellEffectIDColumn, MinlevelColumn, MaxlevelColumn, SeBaseColumn, SeLimitColumn, SeMaxColumn}
		mutableColumns           = mysql.ColumnList{NpcSpellsEffectsIDColumn, SpellEffectIDColumn, MinlevelColumn, MaxlevelColumn, SeBaseColumn, SeLimitColumn, SeMaxColumn}
		defaultColumns           = mysql.ColumnList{NpcSpellsEffectsIDColumn, SpellEffectIDColumn, MinlevelColumn, MaxlevelColumn, SeBaseColumn, SeLimitColumn, SeMaxColumn}
	)

	return npcSpellsEffectsEntriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		NpcSpellsEffectsID: NpcSpellsEffectsIDColumn,
		SpellEffectID:      SpellEffectIDColumn,
		Minlevel:           MinlevelColumn,
		Maxlevel:           MaxlevelColumn,
		SeBase:             SeBaseColumn,
		SeLimit:            SeLimitColumn,
		SeMax:              SeMaxColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
