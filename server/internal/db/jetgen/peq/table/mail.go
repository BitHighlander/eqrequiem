//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Mail = newMailTable("peq", "mail", "")

type mailTable struct {
	mysql.Table

	// Columns
	Msgid     mysql.ColumnInteger
	Charid    mysql.ColumnInteger
	Timestamp mysql.ColumnInteger
	From      mysql.ColumnString
	Subject   mysql.ColumnString
	Body      mysql.ColumnString
	To        mysql.ColumnString
	Status    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type MailTable struct {
	mailTable

	NEW mailTable
}

// AS creates new MailTable with assigned alias
func (a MailTable) AS(alias string) *MailTable {
	return newMailTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MailTable with assigned schema name
func (a MailTable) FromSchema(schemaName string) *MailTable {
	return newMailTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MailTable with assigned table prefix
func (a MailTable) WithPrefix(prefix string) *MailTable {
	return newMailTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MailTable with assigned table suffix
func (a MailTable) WithSuffix(suffix string) *MailTable {
	return newMailTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMailTable(schemaName, tableName, alias string) *MailTable {
	return &MailTable{
		mailTable: newMailTableImpl(schemaName, tableName, alias),
		NEW:       newMailTableImpl("", "new", ""),
	}
}

func newMailTableImpl(schemaName, tableName, alias string) mailTable {
	var (
		MsgidColumn     = mysql.IntegerColumn("msgid")
		CharidColumn    = mysql.IntegerColumn("charid")
		TimestampColumn = mysql.IntegerColumn("timestamp")
		FromColumn      = mysql.StringColumn("from")
		SubjectColumn   = mysql.StringColumn("subject")
		BodyColumn      = mysql.StringColumn("body")
		ToColumn        = mysql.StringColumn("to")
		StatusColumn    = mysql.IntegerColumn("status")
		allColumns      = mysql.ColumnList{MsgidColumn, CharidColumn, TimestampColumn, FromColumn, SubjectColumn, BodyColumn, ToColumn, StatusColumn}
		mutableColumns  = mysql.ColumnList{CharidColumn, TimestampColumn, FromColumn, SubjectColumn, BodyColumn, ToColumn, StatusColumn}
		defaultColumns  = mysql.ColumnList{CharidColumn, TimestampColumn, FromColumn, SubjectColumn, StatusColumn}
	)

	return mailTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Msgid:     MsgidColumn,
		Charid:    CharidColumn,
		Timestamp: TimestampColumn,
		From:      FromColumn,
		Subject:   SubjectColumn,
		Body:      BodyColumn,
		To:        ToColumn,
		Status:    StatusColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
