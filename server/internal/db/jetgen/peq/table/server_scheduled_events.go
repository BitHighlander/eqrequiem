//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ServerScheduledEvents = newServerScheduledEventsTable("peq", "server_scheduled_events", "")

type serverScheduledEventsTable struct {
	mysql.Table

	// Columns
	ID             mysql.ColumnInteger
	Description    mysql.ColumnString
	EventType      mysql.ColumnString
	EventData      mysql.ColumnString
	MinuteStart    mysql.ColumnInteger
	HourStart      mysql.ColumnInteger
	DayStart       mysql.ColumnInteger
	MonthStart     mysql.ColumnInteger
	YearStart      mysql.ColumnInteger
	MinuteEnd      mysql.ColumnInteger
	HourEnd        mysql.ColumnInteger
	DayEnd         mysql.ColumnInteger
	MonthEnd       mysql.ColumnInteger
	YearEnd        mysql.ColumnInteger
	CronExpression mysql.ColumnString
	CreatedAt      mysql.ColumnTimestamp
	DeletedAt      mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type ServerScheduledEventsTable struct {
	serverScheduledEventsTable

	NEW serverScheduledEventsTable
}

// AS creates new ServerScheduledEventsTable with assigned alias
func (a ServerScheduledEventsTable) AS(alias string) *ServerScheduledEventsTable {
	return newServerScheduledEventsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ServerScheduledEventsTable with assigned schema name
func (a ServerScheduledEventsTable) FromSchema(schemaName string) *ServerScheduledEventsTable {
	return newServerScheduledEventsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ServerScheduledEventsTable with assigned table prefix
func (a ServerScheduledEventsTable) WithPrefix(prefix string) *ServerScheduledEventsTable {
	return newServerScheduledEventsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ServerScheduledEventsTable with assigned table suffix
func (a ServerScheduledEventsTable) WithSuffix(suffix string) *ServerScheduledEventsTable {
	return newServerScheduledEventsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newServerScheduledEventsTable(schemaName, tableName, alias string) *ServerScheduledEventsTable {
	return &ServerScheduledEventsTable{
		serverScheduledEventsTable: newServerScheduledEventsTableImpl(schemaName, tableName, alias),
		NEW:                        newServerScheduledEventsTableImpl("", "new", ""),
	}
}

func newServerScheduledEventsTableImpl(schemaName, tableName, alias string) serverScheduledEventsTable {
	var (
		IDColumn             = mysql.IntegerColumn("id")
		DescriptionColumn    = mysql.StringColumn("description")
		EventTypeColumn      = mysql.StringColumn("event_type")
		EventDataColumn      = mysql.StringColumn("event_data")
		MinuteStartColumn    = mysql.IntegerColumn("minute_start")
		HourStartColumn      = mysql.IntegerColumn("hour_start")
		DayStartColumn       = mysql.IntegerColumn("day_start")
		MonthStartColumn     = mysql.IntegerColumn("month_start")
		YearStartColumn      = mysql.IntegerColumn("year_start")
		MinuteEndColumn      = mysql.IntegerColumn("minute_end")
		HourEndColumn        = mysql.IntegerColumn("hour_end")
		DayEndColumn         = mysql.IntegerColumn("day_end")
		MonthEndColumn       = mysql.IntegerColumn("month_end")
		YearEndColumn        = mysql.IntegerColumn("year_end")
		CronExpressionColumn = mysql.StringColumn("cron_expression")
		CreatedAtColumn      = mysql.TimestampColumn("created_at")
		DeletedAtColumn      = mysql.TimestampColumn("deleted_at")
		allColumns           = mysql.ColumnList{IDColumn, DescriptionColumn, EventTypeColumn, EventDataColumn, MinuteStartColumn, HourStartColumn, DayStartColumn, MonthStartColumn, YearStartColumn, MinuteEndColumn, HourEndColumn, DayEndColumn, MonthEndColumn, YearEndColumn, CronExpressionColumn, CreatedAtColumn, DeletedAtColumn}
		mutableColumns       = mysql.ColumnList{DescriptionColumn, EventTypeColumn, EventDataColumn, MinuteStartColumn, HourStartColumn, DayStartColumn, MonthStartColumn, YearStartColumn, MinuteEndColumn, HourEndColumn, DayEndColumn, MonthEndColumn, YearEndColumn, CronExpressionColumn, CreatedAtColumn, DeletedAtColumn}
		defaultColumns       = mysql.ColumnList{MinuteStartColumn, HourStartColumn, DayStartColumn, MonthStartColumn, YearStartColumn, MinuteEndColumn, HourEndColumn, DayEndColumn, MonthEndColumn, YearEndColumn}
	)

	return serverScheduledEventsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		Description:    DescriptionColumn,
		EventType:      EventTypeColumn,
		EventData:      EventDataColumn,
		MinuteStart:    MinuteStartColumn,
		HourStart:      HourStartColumn,
		DayStart:       DayStartColumn,
		MonthStart:     MonthStartColumn,
		YearStart:      YearStartColumn,
		MinuteEnd:      MinuteEndColumn,
		HourEnd:        HourEndColumn,
		DayEnd:         DayEndColumn,
		MonthEnd:       MonthEndColumn,
		YearEnd:        YearEndColumn,
		CronExpression: CronExpressionColumn,
		CreatedAt:      CreatedAtColumn,
		DeletedAt:      DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
