//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Timers = newTimersTable("peq", "timers", "")

type timersTable struct {
	mysql.Table

	// Columns
	CharID   mysql.ColumnInteger
	Type     mysql.ColumnInteger
	Start    mysql.ColumnInteger
	Duration mysql.ColumnInteger
	Enable   mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type TimersTable struct {
	timersTable

	NEW timersTable
}

// AS creates new TimersTable with assigned alias
func (a TimersTable) AS(alias string) *TimersTable {
	return newTimersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TimersTable with assigned schema name
func (a TimersTable) FromSchema(schemaName string) *TimersTable {
	return newTimersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TimersTable with assigned table prefix
func (a TimersTable) WithPrefix(prefix string) *TimersTable {
	return newTimersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TimersTable with assigned table suffix
func (a TimersTable) WithSuffix(suffix string) *TimersTable {
	return newTimersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTimersTable(schemaName, tableName, alias string) *TimersTable {
	return &TimersTable{
		timersTable: newTimersTableImpl(schemaName, tableName, alias),
		NEW:         newTimersTableImpl("", "new", ""),
	}
}

func newTimersTableImpl(schemaName, tableName, alias string) timersTable {
	var (
		CharIDColumn   = mysql.IntegerColumn("char_id")
		TypeColumn     = mysql.IntegerColumn("type")
		StartColumn    = mysql.IntegerColumn("start")
		DurationColumn = mysql.IntegerColumn("duration")
		EnableColumn   = mysql.IntegerColumn("enable")
		allColumns     = mysql.ColumnList{CharIDColumn, TypeColumn, StartColumn, DurationColumn, EnableColumn}
		mutableColumns = mysql.ColumnList{StartColumn, DurationColumn, EnableColumn}
		defaultColumns = mysql.ColumnList{CharIDColumn, TypeColumn, StartColumn, DurationColumn, EnableColumn}
	)

	return timersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharID:   CharIDColumn,
		Type:     TypeColumn,
		Start:    StartColumn,
		Duration: DurationColumn,
		Enable:   EnableColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
