//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CompletedSharedTaskMembers = newCompletedSharedTaskMembersTable("peq", "completed_shared_task_members", "")

type completedSharedTaskMembersTable struct {
	mysql.Table

	// Columns
	SharedTaskID mysql.ColumnInteger
	CharacterID  mysql.ColumnInteger
	IsLeader     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CompletedSharedTaskMembersTable struct {
	completedSharedTaskMembersTable

	NEW completedSharedTaskMembersTable
}

// AS creates new CompletedSharedTaskMembersTable with assigned alias
func (a CompletedSharedTaskMembersTable) AS(alias string) *CompletedSharedTaskMembersTable {
	return newCompletedSharedTaskMembersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CompletedSharedTaskMembersTable with assigned schema name
func (a CompletedSharedTaskMembersTable) FromSchema(schemaName string) *CompletedSharedTaskMembersTable {
	return newCompletedSharedTaskMembersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CompletedSharedTaskMembersTable with assigned table prefix
func (a CompletedSharedTaskMembersTable) WithPrefix(prefix string) *CompletedSharedTaskMembersTable {
	return newCompletedSharedTaskMembersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CompletedSharedTaskMembersTable with assigned table suffix
func (a CompletedSharedTaskMembersTable) WithSuffix(suffix string) *CompletedSharedTaskMembersTable {
	return newCompletedSharedTaskMembersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCompletedSharedTaskMembersTable(schemaName, tableName, alias string) *CompletedSharedTaskMembersTable {
	return &CompletedSharedTaskMembersTable{
		completedSharedTaskMembersTable: newCompletedSharedTaskMembersTableImpl(schemaName, tableName, alias),
		NEW:                             newCompletedSharedTaskMembersTableImpl("", "new", ""),
	}
}

func newCompletedSharedTaskMembersTableImpl(schemaName, tableName, alias string) completedSharedTaskMembersTable {
	var (
		SharedTaskIDColumn = mysql.IntegerColumn("shared_task_id")
		CharacterIDColumn  = mysql.IntegerColumn("character_id")
		IsLeaderColumn     = mysql.IntegerColumn("is_leader")
		allColumns         = mysql.ColumnList{SharedTaskIDColumn, CharacterIDColumn, IsLeaderColumn}
		mutableColumns     = mysql.ColumnList{IsLeaderColumn}
		defaultColumns     = mysql.ColumnList{}
	)

	return completedSharedTaskMembersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SharedTaskID: SharedTaskIDColumn,
		CharacterID:  CharacterIDColumn,
		IsLeader:     IsLeaderColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
