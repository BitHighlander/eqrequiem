//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var QsPlayerTradeRecordEntries = newQsPlayerTradeRecordEntriesTable("peq", "qs_player_trade_record_entries", "")

type qsPlayerTradeRecordEntriesTable struct {
	mysql.Table

	// Columns
	EventID  mysql.ColumnInteger
	FromID   mysql.ColumnInteger
	FromSlot mysql.ColumnInteger
	ToID     mysql.ColumnInteger
	ToSlot   mysql.ColumnInteger
	ItemID   mysql.ColumnInteger
	Charges  mysql.ColumnInteger
	Aug1     mysql.ColumnInteger
	Aug2     mysql.ColumnInteger
	Aug3     mysql.ColumnInteger
	Aug4     mysql.ColumnInteger
	Aug5     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type QsPlayerTradeRecordEntriesTable struct {
	qsPlayerTradeRecordEntriesTable

	NEW qsPlayerTradeRecordEntriesTable
}

// AS creates new QsPlayerTradeRecordEntriesTable with assigned alias
func (a QsPlayerTradeRecordEntriesTable) AS(alias string) *QsPlayerTradeRecordEntriesTable {
	return newQsPlayerTradeRecordEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new QsPlayerTradeRecordEntriesTable with assigned schema name
func (a QsPlayerTradeRecordEntriesTable) FromSchema(schemaName string) *QsPlayerTradeRecordEntriesTable {
	return newQsPlayerTradeRecordEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new QsPlayerTradeRecordEntriesTable with assigned table prefix
func (a QsPlayerTradeRecordEntriesTable) WithPrefix(prefix string) *QsPlayerTradeRecordEntriesTable {
	return newQsPlayerTradeRecordEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new QsPlayerTradeRecordEntriesTable with assigned table suffix
func (a QsPlayerTradeRecordEntriesTable) WithSuffix(suffix string) *QsPlayerTradeRecordEntriesTable {
	return newQsPlayerTradeRecordEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newQsPlayerTradeRecordEntriesTable(schemaName, tableName, alias string) *QsPlayerTradeRecordEntriesTable {
	return &QsPlayerTradeRecordEntriesTable{
		qsPlayerTradeRecordEntriesTable: newQsPlayerTradeRecordEntriesTableImpl(schemaName, tableName, alias),
		NEW:                             newQsPlayerTradeRecordEntriesTableImpl("", "new", ""),
	}
}

func newQsPlayerTradeRecordEntriesTableImpl(schemaName, tableName, alias string) qsPlayerTradeRecordEntriesTable {
	var (
		EventIDColumn  = mysql.IntegerColumn("event_id")
		FromIDColumn   = mysql.IntegerColumn("from_id")
		FromSlotColumn = mysql.IntegerColumn("from_slot")
		ToIDColumn     = mysql.IntegerColumn("to_id")
		ToSlotColumn   = mysql.IntegerColumn("to_slot")
		ItemIDColumn   = mysql.IntegerColumn("item_id")
		ChargesColumn  = mysql.IntegerColumn("charges")
		Aug1Column     = mysql.IntegerColumn("aug_1")
		Aug2Column     = mysql.IntegerColumn("aug_2")
		Aug3Column     = mysql.IntegerColumn("aug_3")
		Aug4Column     = mysql.IntegerColumn("aug_4")
		Aug5Column     = mysql.IntegerColumn("aug_5")
		allColumns     = mysql.ColumnList{EventIDColumn, FromIDColumn, FromSlotColumn, ToIDColumn, ToSlotColumn, ItemIDColumn, ChargesColumn, Aug1Column, Aug2Column, Aug3Column, Aug4Column, Aug5Column}
		mutableColumns = mysql.ColumnList{EventIDColumn, FromIDColumn, FromSlotColumn, ToIDColumn, ToSlotColumn, ItemIDColumn, ChargesColumn, Aug1Column, Aug2Column, Aug3Column, Aug4Column, Aug5Column}
		defaultColumns = mysql.ColumnList{EventIDColumn, FromIDColumn, FromSlotColumn, ToIDColumn, ToSlotColumn, ItemIDColumn, ChargesColumn, Aug1Column, Aug2Column, Aug3Column, Aug4Column, Aug5Column}
	)

	return qsPlayerTradeRecordEntriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		EventID:  EventIDColumn,
		FromID:   FromIDColumn,
		FromSlot: FromSlotColumn,
		ToID:     ToIDColumn,
		ToSlot:   ToSlotColumn,
		ItemID:   ItemIDColumn,
		Charges:  ChargesColumn,
		Aug1:     Aug1Column,
		Aug2:     Aug2Column,
		Aug3:     Aug3Column,
		Aug4:     Aug4Column,
		Aug5:     Aug5Column,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
