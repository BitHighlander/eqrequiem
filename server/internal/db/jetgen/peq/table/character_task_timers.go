//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterTaskTimers = newCharacterTaskTimersTable("peq", "character_task_timers", "")

type characterTaskTimersTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	CharacterID mysql.ColumnInteger
	TaskID      mysql.ColumnInteger
	TimerType   mysql.ColumnInteger
	TimerGroup  mysql.ColumnInteger
	ExpireTime  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterTaskTimersTable struct {
	characterTaskTimersTable

	NEW characterTaskTimersTable
}

// AS creates new CharacterTaskTimersTable with assigned alias
func (a CharacterTaskTimersTable) AS(alias string) *CharacterTaskTimersTable {
	return newCharacterTaskTimersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterTaskTimersTable with assigned schema name
func (a CharacterTaskTimersTable) FromSchema(schemaName string) *CharacterTaskTimersTable {
	return newCharacterTaskTimersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterTaskTimersTable with assigned table prefix
func (a CharacterTaskTimersTable) WithPrefix(prefix string) *CharacterTaskTimersTable {
	return newCharacterTaskTimersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterTaskTimersTable with assigned table suffix
func (a CharacterTaskTimersTable) WithSuffix(suffix string) *CharacterTaskTimersTable {
	return newCharacterTaskTimersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterTaskTimersTable(schemaName, tableName, alias string) *CharacterTaskTimersTable {
	return &CharacterTaskTimersTable{
		characterTaskTimersTable: newCharacterTaskTimersTableImpl(schemaName, tableName, alias),
		NEW:                      newCharacterTaskTimersTableImpl("", "new", ""),
	}
}

func newCharacterTaskTimersTableImpl(schemaName, tableName, alias string) characterTaskTimersTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		CharacterIDColumn = mysql.IntegerColumn("character_id")
		TaskIDColumn      = mysql.IntegerColumn("task_id")
		TimerTypeColumn   = mysql.IntegerColumn("timer_type")
		TimerGroupColumn  = mysql.IntegerColumn("timer_group")
		ExpireTimeColumn  = mysql.TimestampColumn("expire_time")
		allColumns        = mysql.ColumnList{IDColumn, CharacterIDColumn, TaskIDColumn, TimerTypeColumn, TimerGroupColumn, ExpireTimeColumn}
		mutableColumns    = mysql.ColumnList{CharacterIDColumn, TaskIDColumn, TimerTypeColumn, TimerGroupColumn, ExpireTimeColumn}
		defaultColumns    = mysql.ColumnList{CharacterIDColumn, TaskIDColumn, TimerTypeColumn, TimerGroupColumn, ExpireTimeColumn}
	)

	return characterTaskTimersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CharacterID: CharacterIDColumn,
		TaskID:      TaskIDColumn,
		TimerType:   TimerTypeColumn,
		TimerGroup:  TimerGroupColumn,
		ExpireTime:  ExpireTimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
