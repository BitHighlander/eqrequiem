//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var BuyerTradeItems = newBuyerTradeItemsTable("peq", "buyer_trade_items", "")

type buyerTradeItemsTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	BuyerBuyLinesID mysql.ColumnInteger
	ItemID          mysql.ColumnInteger
	ItemQty         mysql.ColumnInteger
	ItemIcon        mysql.ColumnInteger
	ItemName        mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type BuyerTradeItemsTable struct {
	buyerTradeItemsTable

	NEW buyerTradeItemsTable
}

// AS creates new BuyerTradeItemsTable with assigned alias
func (a BuyerTradeItemsTable) AS(alias string) *BuyerTradeItemsTable {
	return newBuyerTradeItemsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new BuyerTradeItemsTable with assigned schema name
func (a BuyerTradeItemsTable) FromSchema(schemaName string) *BuyerTradeItemsTable {
	return newBuyerTradeItemsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new BuyerTradeItemsTable with assigned table prefix
func (a BuyerTradeItemsTable) WithPrefix(prefix string) *BuyerTradeItemsTable {
	return newBuyerTradeItemsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new BuyerTradeItemsTable with assigned table suffix
func (a BuyerTradeItemsTable) WithSuffix(suffix string) *BuyerTradeItemsTable {
	return newBuyerTradeItemsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newBuyerTradeItemsTable(schemaName, tableName, alias string) *BuyerTradeItemsTable {
	return &BuyerTradeItemsTable{
		buyerTradeItemsTable: newBuyerTradeItemsTableImpl(schemaName, tableName, alias),
		NEW:                  newBuyerTradeItemsTableImpl("", "new", ""),
	}
}

func newBuyerTradeItemsTableImpl(schemaName, tableName, alias string) buyerTradeItemsTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		BuyerBuyLinesIDColumn = mysql.IntegerColumn("buyer_buy_lines_id")
		ItemIDColumn          = mysql.IntegerColumn("item_id")
		ItemQtyColumn         = mysql.IntegerColumn("item_qty")
		ItemIconColumn        = mysql.IntegerColumn("item_icon")
		ItemNameColumn        = mysql.StringColumn("item_name")
		allColumns            = mysql.ColumnList{IDColumn, BuyerBuyLinesIDColumn, ItemIDColumn, ItemQtyColumn, ItemIconColumn, ItemNameColumn}
		mutableColumns        = mysql.ColumnList{BuyerBuyLinesIDColumn, ItemIDColumn, ItemQtyColumn, ItemIconColumn, ItemNameColumn}
		defaultColumns        = mysql.ColumnList{BuyerBuyLinesIDColumn, ItemIDColumn, ItemQtyColumn, ItemIconColumn, ItemNameColumn}
	)

	return buyerTradeItemsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		BuyerBuyLinesID: BuyerBuyLinesIDColumn,
		ItemID:          ItemIDColumn,
		ItemQty:         ItemQtyColumn,
		ItemIcon:        ItemIconColumn,
		ItemName:        ItemNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
