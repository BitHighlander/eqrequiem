//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SpellGlobals = newSpellGlobalsTable("peq", "spell_globals", "")

type spellGlobalsTable struct {
	mysql.Table

	// Columns
	Spellid   mysql.ColumnInteger
	SpellName mysql.ColumnString
	Qglobal   mysql.ColumnString
	Value     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SpellGlobalsTable struct {
	spellGlobalsTable

	NEW spellGlobalsTable
}

// AS creates new SpellGlobalsTable with assigned alias
func (a SpellGlobalsTable) AS(alias string) *SpellGlobalsTable {
	return newSpellGlobalsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SpellGlobalsTable with assigned schema name
func (a SpellGlobalsTable) FromSchema(schemaName string) *SpellGlobalsTable {
	return newSpellGlobalsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SpellGlobalsTable with assigned table prefix
func (a SpellGlobalsTable) WithPrefix(prefix string) *SpellGlobalsTable {
	return newSpellGlobalsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SpellGlobalsTable with assigned table suffix
func (a SpellGlobalsTable) WithSuffix(suffix string) *SpellGlobalsTable {
	return newSpellGlobalsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSpellGlobalsTable(schemaName, tableName, alias string) *SpellGlobalsTable {
	return &SpellGlobalsTable{
		spellGlobalsTable: newSpellGlobalsTableImpl(schemaName, tableName, alias),
		NEW:               newSpellGlobalsTableImpl("", "new", ""),
	}
}

func newSpellGlobalsTableImpl(schemaName, tableName, alias string) spellGlobalsTable {
	var (
		SpellidColumn   = mysql.IntegerColumn("spellid")
		SpellNameColumn = mysql.StringColumn("spell_name")
		QglobalColumn   = mysql.StringColumn("qglobal")
		ValueColumn     = mysql.StringColumn("value")
		allColumns      = mysql.ColumnList{SpellidColumn, SpellNameColumn, QglobalColumn, ValueColumn}
		mutableColumns  = mysql.ColumnList{SpellNameColumn, QglobalColumn, ValueColumn}
		defaultColumns  = mysql.ColumnList{SpellNameColumn, QglobalColumn, ValueColumn}
	)

	return spellGlobalsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Spellid:   SpellidColumn,
		SpellName: SpellNameColumn,
		Qglobal:   QglobalColumn,
		Value:     ValueColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
