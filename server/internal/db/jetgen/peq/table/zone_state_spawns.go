//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ZoneStateSpawns = newZoneStateSpawnsTable("peq", "zone_state_spawns", "")

type zoneStateSpawnsTable struct {
	mysql.Table

	// Columns
	ID                mysql.ColumnInteger
	ZoneID            mysql.ColumnInteger
	InstanceID        mysql.ColumnInteger
	IsCorpse          mysql.ColumnInteger
	IsZone            mysql.ColumnInteger
	DecayInSeconds    mysql.ColumnInteger
	NpcID             mysql.ColumnInteger
	Spawn2ID          mysql.ColumnInteger
	SpawngroupID      mysql.ColumnInteger
	X                 mysql.ColumnFloat
	Y                 mysql.ColumnFloat
	Z                 mysql.ColumnFloat
	Heading           mysql.ColumnFloat
	RespawnTime       mysql.ColumnInteger
	Variance          mysql.ColumnInteger
	Grid              mysql.ColumnInteger
	CurrentWaypoint   mysql.ColumnInteger
	PathWhenZoneIdle  mysql.ColumnInteger
	ConditionID       mysql.ColumnInteger
	ConditionMinValue mysql.ColumnInteger
	Enabled           mysql.ColumnInteger
	Anim              mysql.ColumnInteger
	LootData          mysql.ColumnString
	EntityVariables   mysql.ColumnString
	Buffs             mysql.ColumnString
	Hp                mysql.ColumnInteger
	Mana              mysql.ColumnInteger
	Endurance         mysql.ColumnInteger
	CreatedAt         mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type ZoneStateSpawnsTable struct {
	zoneStateSpawnsTable

	NEW zoneStateSpawnsTable
}

// AS creates new ZoneStateSpawnsTable with assigned alias
func (a ZoneStateSpawnsTable) AS(alias string) *ZoneStateSpawnsTable {
	return newZoneStateSpawnsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ZoneStateSpawnsTable with assigned schema name
func (a ZoneStateSpawnsTable) FromSchema(schemaName string) *ZoneStateSpawnsTable {
	return newZoneStateSpawnsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ZoneStateSpawnsTable with assigned table prefix
func (a ZoneStateSpawnsTable) WithPrefix(prefix string) *ZoneStateSpawnsTable {
	return newZoneStateSpawnsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ZoneStateSpawnsTable with assigned table suffix
func (a ZoneStateSpawnsTable) WithSuffix(suffix string) *ZoneStateSpawnsTable {
	return newZoneStateSpawnsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newZoneStateSpawnsTable(schemaName, tableName, alias string) *ZoneStateSpawnsTable {
	return &ZoneStateSpawnsTable{
		zoneStateSpawnsTable: newZoneStateSpawnsTableImpl(schemaName, tableName, alias),
		NEW:                  newZoneStateSpawnsTableImpl("", "new", ""),
	}
}

func newZoneStateSpawnsTableImpl(schemaName, tableName, alias string) zoneStateSpawnsTable {
	var (
		IDColumn                = mysql.IntegerColumn("id")
		ZoneIDColumn            = mysql.IntegerColumn("zone_id")
		InstanceIDColumn        = mysql.IntegerColumn("instance_id")
		IsCorpseColumn          = mysql.IntegerColumn("is_corpse")
		IsZoneColumn            = mysql.IntegerColumn("is_zone")
		DecayInSecondsColumn    = mysql.IntegerColumn("decay_in_seconds")
		NpcIDColumn             = mysql.IntegerColumn("npc_id")
		Spawn2IDColumn          = mysql.IntegerColumn("spawn2_id")
		SpawngroupIDColumn      = mysql.IntegerColumn("spawngroup_id")
		XColumn                 = mysql.FloatColumn("x")
		YColumn                 = mysql.FloatColumn("y")
		ZColumn                 = mysql.FloatColumn("z")
		HeadingColumn           = mysql.FloatColumn("heading")
		RespawnTimeColumn       = mysql.IntegerColumn("respawn_time")
		VarianceColumn          = mysql.IntegerColumn("variance")
		GridColumn              = mysql.IntegerColumn("grid")
		CurrentWaypointColumn   = mysql.IntegerColumn("current_waypoint")
		PathWhenZoneIdleColumn  = mysql.IntegerColumn("path_when_zone_idle")
		ConditionIDColumn       = mysql.IntegerColumn("condition_id")
		ConditionMinValueColumn = mysql.IntegerColumn("condition_min_value")
		EnabledColumn           = mysql.IntegerColumn("enabled")
		AnimColumn              = mysql.IntegerColumn("anim")
		LootDataColumn          = mysql.StringColumn("loot_data")
		EntityVariablesColumn   = mysql.StringColumn("entity_variables")
		BuffsColumn             = mysql.StringColumn("buffs")
		HpColumn                = mysql.IntegerColumn("hp")
		ManaColumn              = mysql.IntegerColumn("mana")
		EnduranceColumn         = mysql.IntegerColumn("endurance")
		CreatedAtColumn         = mysql.TimestampColumn("created_at")
		allColumns              = mysql.ColumnList{IDColumn, ZoneIDColumn, InstanceIDColumn, IsCorpseColumn, IsZoneColumn, DecayInSecondsColumn, NpcIDColumn, Spawn2IDColumn, SpawngroupIDColumn, XColumn, YColumn, ZColumn, HeadingColumn, RespawnTimeColumn, VarianceColumn, GridColumn, CurrentWaypointColumn, PathWhenZoneIdleColumn, ConditionIDColumn, ConditionMinValueColumn, EnabledColumn, AnimColumn, LootDataColumn, EntityVariablesColumn, BuffsColumn, HpColumn, ManaColumn, EnduranceColumn, CreatedAtColumn}
		mutableColumns          = mysql.ColumnList{ZoneIDColumn, InstanceIDColumn, IsCorpseColumn, IsZoneColumn, DecayInSecondsColumn, NpcIDColumn, Spawn2IDColumn, SpawngroupIDColumn, XColumn, YColumn, ZColumn, HeadingColumn, RespawnTimeColumn, VarianceColumn, GridColumn, CurrentWaypointColumn, PathWhenZoneIdleColumn, ConditionIDColumn, ConditionMinValueColumn, EnabledColumn, AnimColumn, LootDataColumn, EntityVariablesColumn, BuffsColumn, HpColumn, ManaColumn, EnduranceColumn, CreatedAtColumn}
		defaultColumns          = mysql.ColumnList{IsCorpseColumn, IsZoneColumn, DecayInSecondsColumn, GridColumn, CurrentWaypointColumn, PathWhenZoneIdleColumn, ConditionIDColumn, ConditionMinValueColumn, EnabledColumn, AnimColumn, HpColumn, ManaColumn, EnduranceColumn}
	)

	return zoneStateSpawnsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                IDColumn,
		ZoneID:            ZoneIDColumn,
		InstanceID:        InstanceIDColumn,
		IsCorpse:          IsCorpseColumn,
		IsZone:            IsZoneColumn,
		DecayInSeconds:    DecayInSecondsColumn,
		NpcID:             NpcIDColumn,
		Spawn2ID:          Spawn2IDColumn,
		SpawngroupID:      SpawngroupIDColumn,
		X:                 XColumn,
		Y:                 YColumn,
		Z:                 ZColumn,
		Heading:           HeadingColumn,
		RespawnTime:       RespawnTimeColumn,
		Variance:          VarianceColumn,
		Grid:              GridColumn,
		CurrentWaypoint:   CurrentWaypointColumn,
		PathWhenZoneIdle:  PathWhenZoneIdleColumn,
		ConditionID:       ConditionIDColumn,
		ConditionMinValue: ConditionMinValueColumn,
		Enabled:           EnabledColumn,
		Anim:              AnimColumn,
		LootData:          LootDataColumn,
		EntityVariables:   EntityVariablesColumn,
		Buffs:             BuffsColumn,
		Hp:                HpColumn,
		Mana:              ManaColumn,
		Endurance:         EnduranceColumn,
		CreatedAt:         CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
