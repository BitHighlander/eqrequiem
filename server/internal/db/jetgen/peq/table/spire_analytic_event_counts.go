//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SpireAnalyticEventCounts = newSpireAnalyticEventCountsTable("peq", "spire_analytic_event_counts", "")

type spireAnalyticEventCountsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	EventName mysql.ColumnString
	EventKey  mysql.ColumnString
	Count     mysql.ColumnInteger
	UpdatedAt mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SpireAnalyticEventCountsTable struct {
	spireAnalyticEventCountsTable

	NEW spireAnalyticEventCountsTable
}

// AS creates new SpireAnalyticEventCountsTable with assigned alias
func (a SpireAnalyticEventCountsTable) AS(alias string) *SpireAnalyticEventCountsTable {
	return newSpireAnalyticEventCountsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SpireAnalyticEventCountsTable with assigned schema name
func (a SpireAnalyticEventCountsTable) FromSchema(schemaName string) *SpireAnalyticEventCountsTable {
	return newSpireAnalyticEventCountsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SpireAnalyticEventCountsTable with assigned table prefix
func (a SpireAnalyticEventCountsTable) WithPrefix(prefix string) *SpireAnalyticEventCountsTable {
	return newSpireAnalyticEventCountsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SpireAnalyticEventCountsTable with assigned table suffix
func (a SpireAnalyticEventCountsTable) WithSuffix(suffix string) *SpireAnalyticEventCountsTable {
	return newSpireAnalyticEventCountsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSpireAnalyticEventCountsTable(schemaName, tableName, alias string) *SpireAnalyticEventCountsTable {
	return &SpireAnalyticEventCountsTable{
		spireAnalyticEventCountsTable: newSpireAnalyticEventCountsTableImpl(schemaName, tableName, alias),
		NEW:                           newSpireAnalyticEventCountsTableImpl("", "new", ""),
	}
}

func newSpireAnalyticEventCountsTableImpl(schemaName, tableName, alias string) spireAnalyticEventCountsTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		EventNameColumn = mysql.StringColumn("event_name")
		EventKeyColumn  = mysql.StringColumn("event_key")
		CountColumn     = mysql.IntegerColumn("count")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		allColumns      = mysql.ColumnList{IDColumn, EventNameColumn, EventKeyColumn, CountColumn, UpdatedAtColumn}
		mutableColumns  = mysql.ColumnList{EventNameColumn, EventKeyColumn, CountColumn, UpdatedAtColumn}
		defaultColumns  = mysql.ColumnList{}
	)

	return spireAnalyticEventCountsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		EventName: EventNameColumn,
		EventKey:  EventKeyColumn,
		Count:     CountColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
