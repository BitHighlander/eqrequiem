//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterInspectMessages = newCharacterInspectMessagesTable("peq", "character_inspect_messages", "")

type characterInspectMessagesTable struct {
	mysql.Table

	// Columns
	ID             mysql.ColumnInteger
	InspectMessage mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterInspectMessagesTable struct {
	characterInspectMessagesTable

	NEW characterInspectMessagesTable
}

// AS creates new CharacterInspectMessagesTable with assigned alias
func (a CharacterInspectMessagesTable) AS(alias string) *CharacterInspectMessagesTable {
	return newCharacterInspectMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterInspectMessagesTable with assigned schema name
func (a CharacterInspectMessagesTable) FromSchema(schemaName string) *CharacterInspectMessagesTable {
	return newCharacterInspectMessagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterInspectMessagesTable with assigned table prefix
func (a CharacterInspectMessagesTable) WithPrefix(prefix string) *CharacterInspectMessagesTable {
	return newCharacterInspectMessagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterInspectMessagesTable with assigned table suffix
func (a CharacterInspectMessagesTable) WithSuffix(suffix string) *CharacterInspectMessagesTable {
	return newCharacterInspectMessagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterInspectMessagesTable(schemaName, tableName, alias string) *CharacterInspectMessagesTable {
	return &CharacterInspectMessagesTable{
		characterInspectMessagesTable: newCharacterInspectMessagesTableImpl(schemaName, tableName, alias),
		NEW:                           newCharacterInspectMessagesTableImpl("", "new", ""),
	}
}

func newCharacterInspectMessagesTableImpl(schemaName, tableName, alias string) characterInspectMessagesTable {
	var (
		IDColumn             = mysql.IntegerColumn("id")
		InspectMessageColumn = mysql.StringColumn("inspect_message")
		allColumns           = mysql.ColumnList{IDColumn, InspectMessageColumn}
		mutableColumns       = mysql.ColumnList{InspectMessageColumn}
		defaultColumns       = mysql.ColumnList{IDColumn, InspectMessageColumn}
	)

	return characterInspectMessagesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		InspectMessage: InspectMessageColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
