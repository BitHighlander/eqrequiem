//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var NpcSpellsEffects = newNpcSpellsEffectsTable("peq", "npc_spells_effects", "")

type npcSpellsEffectsTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	Name       mysql.ColumnString
	ParentList mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type NpcSpellsEffectsTable struct {
	npcSpellsEffectsTable

	NEW npcSpellsEffectsTable
}

// AS creates new NpcSpellsEffectsTable with assigned alias
func (a NpcSpellsEffectsTable) AS(alias string) *NpcSpellsEffectsTable {
	return newNpcSpellsEffectsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new NpcSpellsEffectsTable with assigned schema name
func (a NpcSpellsEffectsTable) FromSchema(schemaName string) *NpcSpellsEffectsTable {
	return newNpcSpellsEffectsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new NpcSpellsEffectsTable with assigned table prefix
func (a NpcSpellsEffectsTable) WithPrefix(prefix string) *NpcSpellsEffectsTable {
	return newNpcSpellsEffectsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new NpcSpellsEffectsTable with assigned table suffix
func (a NpcSpellsEffectsTable) WithSuffix(suffix string) *NpcSpellsEffectsTable {
	return newNpcSpellsEffectsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newNpcSpellsEffectsTable(schemaName, tableName, alias string) *NpcSpellsEffectsTable {
	return &NpcSpellsEffectsTable{
		npcSpellsEffectsTable: newNpcSpellsEffectsTableImpl(schemaName, tableName, alias),
		NEW:                   newNpcSpellsEffectsTableImpl("", "new", ""),
	}
}

func newNpcSpellsEffectsTableImpl(schemaName, tableName, alias string) npcSpellsEffectsTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		NameColumn       = mysql.StringColumn("name")
		ParentListColumn = mysql.IntegerColumn("parent_list")
		allColumns       = mysql.ColumnList{IDColumn, NameColumn, ParentListColumn}
		mutableColumns   = mysql.ColumnList{NameColumn, ParentListColumn}
		defaultColumns   = mysql.ColumnList{ParentListColumn}
	)

	return npcSpellsEffectsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		Name:       NameColumn,
		ParentList: ParentListColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
