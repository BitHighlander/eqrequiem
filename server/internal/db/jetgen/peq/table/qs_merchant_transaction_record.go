//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var QsMerchantTransactionRecord = newQsMerchantTransactionRecordTable("peq", "qs_merchant_transaction_record", "")

type qsMerchantTransactionRecordTable struct {
	mysql.Table

	// Columns
	TransactionID mysql.ColumnInteger
	Time          mysql.ColumnTimestamp
	ZoneID        mysql.ColumnInteger
	MerchantID    mysql.ColumnInteger
	MerchantPp    mysql.ColumnInteger
	MerchantGp    mysql.ColumnInteger
	MerchantSp    mysql.ColumnInteger
	MerchantCp    mysql.ColumnInteger
	MerchantItems mysql.ColumnInteger
	CharID        mysql.ColumnInteger
	CharPp        mysql.ColumnInteger
	CharGp        mysql.ColumnInteger
	CharSp        mysql.ColumnInteger
	CharCp        mysql.ColumnInteger
	CharItems     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type QsMerchantTransactionRecordTable struct {
	qsMerchantTransactionRecordTable

	NEW qsMerchantTransactionRecordTable
}

// AS creates new QsMerchantTransactionRecordTable with assigned alias
func (a QsMerchantTransactionRecordTable) AS(alias string) *QsMerchantTransactionRecordTable {
	return newQsMerchantTransactionRecordTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new QsMerchantTransactionRecordTable with assigned schema name
func (a QsMerchantTransactionRecordTable) FromSchema(schemaName string) *QsMerchantTransactionRecordTable {
	return newQsMerchantTransactionRecordTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new QsMerchantTransactionRecordTable with assigned table prefix
func (a QsMerchantTransactionRecordTable) WithPrefix(prefix string) *QsMerchantTransactionRecordTable {
	return newQsMerchantTransactionRecordTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new QsMerchantTransactionRecordTable with assigned table suffix
func (a QsMerchantTransactionRecordTable) WithSuffix(suffix string) *QsMerchantTransactionRecordTable {
	return newQsMerchantTransactionRecordTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newQsMerchantTransactionRecordTable(schemaName, tableName, alias string) *QsMerchantTransactionRecordTable {
	return &QsMerchantTransactionRecordTable{
		qsMerchantTransactionRecordTable: newQsMerchantTransactionRecordTableImpl(schemaName, tableName, alias),
		NEW:                              newQsMerchantTransactionRecordTableImpl("", "new", ""),
	}
}

func newQsMerchantTransactionRecordTableImpl(schemaName, tableName, alias string) qsMerchantTransactionRecordTable {
	var (
		TransactionIDColumn = mysql.IntegerColumn("transaction_id")
		TimeColumn          = mysql.TimestampColumn("time")
		ZoneIDColumn        = mysql.IntegerColumn("zone_id")
		MerchantIDColumn    = mysql.IntegerColumn("merchant_id")
		MerchantPpColumn    = mysql.IntegerColumn("merchant_pp")
		MerchantGpColumn    = mysql.IntegerColumn("merchant_gp")
		MerchantSpColumn    = mysql.IntegerColumn("merchant_sp")
		MerchantCpColumn    = mysql.IntegerColumn("merchant_cp")
		MerchantItemsColumn = mysql.IntegerColumn("merchant_items")
		CharIDColumn        = mysql.IntegerColumn("char_id")
		CharPpColumn        = mysql.IntegerColumn("char_pp")
		CharGpColumn        = mysql.IntegerColumn("char_gp")
		CharSpColumn        = mysql.IntegerColumn("char_sp")
		CharCpColumn        = mysql.IntegerColumn("char_cp")
		CharItemsColumn     = mysql.IntegerColumn("char_items")
		allColumns          = mysql.ColumnList{TransactionIDColumn, TimeColumn, ZoneIDColumn, MerchantIDColumn, MerchantPpColumn, MerchantGpColumn, MerchantSpColumn, MerchantCpColumn, MerchantItemsColumn, CharIDColumn, CharPpColumn, CharGpColumn, CharSpColumn, CharCpColumn, CharItemsColumn}
		mutableColumns      = mysql.ColumnList{TimeColumn, ZoneIDColumn, MerchantIDColumn, MerchantPpColumn, MerchantGpColumn, MerchantSpColumn, MerchantCpColumn, MerchantItemsColumn, CharIDColumn, CharPpColumn, CharGpColumn, CharSpColumn, CharCpColumn, CharItemsColumn}
		defaultColumns      = mysql.ColumnList{ZoneIDColumn, MerchantIDColumn, MerchantPpColumn, MerchantGpColumn, MerchantSpColumn, MerchantCpColumn, MerchantItemsColumn, CharIDColumn, CharPpColumn, CharGpColumn, CharSpColumn, CharCpColumn, CharItemsColumn}
	)

	return qsMerchantTransactionRecordTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		TransactionID: TransactionIDColumn,
		Time:          TimeColumn,
		ZoneID:        ZoneIDColumn,
		MerchantID:    MerchantIDColumn,
		MerchantPp:    MerchantPpColumn,
		MerchantGp:    MerchantGpColumn,
		MerchantSp:    MerchantSpColumn,
		MerchantCp:    MerchantCpColumn,
		MerchantItems: MerchantItemsColumn,
		CharID:        CharIDColumn,
		CharPp:        CharPpColumn,
		CharGp:        CharGpColumn,
		CharSp:        CharSpColumn,
		CharCp:        CharCpColumn,
		CharItems:     CharItemsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
