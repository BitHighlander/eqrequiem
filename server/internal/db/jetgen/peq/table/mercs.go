//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Mercs = newMercsTable("peq", "mercs", "")

type mercsTable struct {
	mysql.Table

	// Columns
	MercID           mysql.ColumnInteger
	OwnerCharacterID mysql.ColumnInteger
	Slot             mysql.ColumnInteger
	Name             mysql.ColumnString
	TemplateID       mysql.ColumnInteger
	SuspendedTime    mysql.ColumnInteger
	IsSuspended      mysql.ColumnInteger
	TimerRemaining   mysql.ColumnInteger
	Gender           mysql.ColumnInteger
	MercSize         mysql.ColumnFloat
	StanceID         mysql.ColumnInteger
	Hp               mysql.ColumnInteger
	Mana             mysql.ColumnInteger
	Endurance        mysql.ColumnInteger
	Face             mysql.ColumnInteger
	LuclinHairStyle  mysql.ColumnInteger
	LuclinHairColor  mysql.ColumnInteger
	LuclinEyeColor   mysql.ColumnInteger
	LuclinEyeColor2  mysql.ColumnInteger
	LuclinBeardColor mysql.ColumnInteger
	LuclinBeard      mysql.ColumnInteger
	DrakkinHeritage  mysql.ColumnInteger
	DrakkinTattoo    mysql.ColumnInteger
	DrakkinDetails   mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type MercsTable struct {
	mercsTable

	NEW mercsTable
}

// AS creates new MercsTable with assigned alias
func (a MercsTable) AS(alias string) *MercsTable {
	return newMercsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MercsTable with assigned schema name
func (a MercsTable) FromSchema(schemaName string) *MercsTable {
	return newMercsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MercsTable with assigned table prefix
func (a MercsTable) WithPrefix(prefix string) *MercsTable {
	return newMercsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MercsTable with assigned table suffix
func (a MercsTable) WithSuffix(suffix string) *MercsTable {
	return newMercsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMercsTable(schemaName, tableName, alias string) *MercsTable {
	return &MercsTable{
		mercsTable: newMercsTableImpl(schemaName, tableName, alias),
		NEW:        newMercsTableImpl("", "new", ""),
	}
}

func newMercsTableImpl(schemaName, tableName, alias string) mercsTable {
	var (
		MercIDColumn           = mysql.IntegerColumn("MercID")
		OwnerCharacterIDColumn = mysql.IntegerColumn("OwnerCharacterID")
		SlotColumn             = mysql.IntegerColumn("Slot")
		NameColumn             = mysql.StringColumn("Name")
		TemplateIDColumn       = mysql.IntegerColumn("TemplateID")
		SuspendedTimeColumn    = mysql.IntegerColumn("SuspendedTime")
		IsSuspendedColumn      = mysql.IntegerColumn("IsSuspended")
		TimerRemainingColumn   = mysql.IntegerColumn("TimerRemaining")
		GenderColumn           = mysql.IntegerColumn("Gender")
		MercSizeColumn         = mysql.FloatColumn("MercSize")
		StanceIDColumn         = mysql.IntegerColumn("StanceID")
		HpColumn               = mysql.IntegerColumn("HP")
		ManaColumn             = mysql.IntegerColumn("Mana")
		EnduranceColumn        = mysql.IntegerColumn("Endurance")
		FaceColumn             = mysql.IntegerColumn("Face")
		LuclinHairStyleColumn  = mysql.IntegerColumn("LuclinHairStyle")
		LuclinHairColorColumn  = mysql.IntegerColumn("LuclinHairColor")
		LuclinEyeColorColumn   = mysql.IntegerColumn("LuclinEyeColor")
		LuclinEyeColor2Column  = mysql.IntegerColumn("LuclinEyeColor2")
		LuclinBeardColorColumn = mysql.IntegerColumn("LuclinBeardColor")
		LuclinBeardColumn      = mysql.IntegerColumn("LuclinBeard")
		DrakkinHeritageColumn  = mysql.IntegerColumn("DrakkinHeritage")
		DrakkinTattooColumn    = mysql.IntegerColumn("DrakkinTattoo")
		DrakkinDetailsColumn   = mysql.IntegerColumn("DrakkinDetails")
		allColumns             = mysql.ColumnList{MercIDColumn, OwnerCharacterIDColumn, SlotColumn, NameColumn, TemplateIDColumn, SuspendedTimeColumn, IsSuspendedColumn, TimerRemainingColumn, GenderColumn, MercSizeColumn, StanceIDColumn, HpColumn, ManaColumn, EnduranceColumn, FaceColumn, LuclinHairStyleColumn, LuclinHairColorColumn, LuclinEyeColorColumn, LuclinEyeColor2Column, LuclinBeardColorColumn, LuclinBeardColumn, DrakkinHeritageColumn, DrakkinTattooColumn, DrakkinDetailsColumn}
		mutableColumns         = mysql.ColumnList{OwnerCharacterIDColumn, SlotColumn, NameColumn, TemplateIDColumn, SuspendedTimeColumn, IsSuspendedColumn, TimerRemainingColumn, GenderColumn, MercSizeColumn, StanceIDColumn, HpColumn, ManaColumn, EnduranceColumn, FaceColumn, LuclinHairStyleColumn, LuclinHairColorColumn, LuclinEyeColorColumn, LuclinEyeColor2Column, LuclinBeardColorColumn, LuclinBeardColumn, DrakkinHeritageColumn, DrakkinTattooColumn, DrakkinDetailsColumn}
		defaultColumns         = mysql.ColumnList{SlotColumn, TemplateIDColumn, SuspendedTimeColumn, IsSuspendedColumn, TimerRemainingColumn, GenderColumn, MercSizeColumn, StanceIDColumn, HpColumn, ManaColumn, EnduranceColumn, FaceColumn, LuclinHairStyleColumn, LuclinHairColorColumn, LuclinEyeColorColumn, LuclinEyeColor2Column, LuclinBeardColorColumn, LuclinBeardColumn, DrakkinHeritageColumn, DrakkinTattooColumn, DrakkinDetailsColumn}
	)

	return mercsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MercID:           MercIDColumn,
		OwnerCharacterID: OwnerCharacterIDColumn,
		Slot:             SlotColumn,
		Name:             NameColumn,
		TemplateID:       TemplateIDColumn,
		SuspendedTime:    SuspendedTimeColumn,
		IsSuspended:      IsSuspendedColumn,
		TimerRemaining:   TimerRemainingColumn,
		Gender:           GenderColumn,
		MercSize:         MercSizeColumn,
		StanceID:         StanceIDColumn,
		Hp:               HpColumn,
		Mana:             ManaColumn,
		Endurance:        EnduranceColumn,
		Face:             FaceColumn,
		LuclinHairStyle:  LuclinHairStyleColumn,
		LuclinHairColor:  LuclinHairColorColumn,
		LuclinEyeColor:   LuclinEyeColorColumn,
		LuclinEyeColor2:  LuclinEyeColor2Column,
		LuclinBeardColor: LuclinBeardColorColumn,
		LuclinBeard:      LuclinBeardColumn,
		DrakkinHeritage:  DrakkinHeritageColumn,
		DrakkinTattoo:    DrakkinTattooColumn,
		DrakkinDetails:   DrakkinDetailsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
