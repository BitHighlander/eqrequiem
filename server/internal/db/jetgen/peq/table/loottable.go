//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Loottable = newLoottableTable("peq", "loottable", "")

type loottableTable struct {
	mysql.Table

	// Columns
	ID                   mysql.ColumnInteger
	Name                 mysql.ColumnString
	Mincash              mysql.ColumnInteger
	Maxcash              mysql.ColumnInteger
	Avgcoin              mysql.ColumnInteger
	Done                 mysql.ColumnInteger
	MinExpansion         mysql.ColumnInteger
	MaxExpansion         mysql.ColumnInteger
	ContentFlags         mysql.ColumnString
	ContentFlagsDisabled mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type LoottableTable struct {
	loottableTable

	NEW loottableTable
}

// AS creates new LoottableTable with assigned alias
func (a LoottableTable) AS(alias string) *LoottableTable {
	return newLoottableTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LoottableTable with assigned schema name
func (a LoottableTable) FromSchema(schemaName string) *LoottableTable {
	return newLoottableTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LoottableTable with assigned table prefix
func (a LoottableTable) WithPrefix(prefix string) *LoottableTable {
	return newLoottableTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LoottableTable with assigned table suffix
func (a LoottableTable) WithSuffix(suffix string) *LoottableTable {
	return newLoottableTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLoottableTable(schemaName, tableName, alias string) *LoottableTable {
	return &LoottableTable{
		loottableTable: newLoottableTableImpl(schemaName, tableName, alias),
		NEW:            newLoottableTableImpl("", "new", ""),
	}
}

func newLoottableTableImpl(schemaName, tableName, alias string) loottableTable {
	var (
		IDColumn                   = mysql.IntegerColumn("id")
		NameColumn                 = mysql.StringColumn("name")
		MincashColumn              = mysql.IntegerColumn("mincash")
		MaxcashColumn              = mysql.IntegerColumn("maxcash")
		AvgcoinColumn              = mysql.IntegerColumn("avgcoin")
		DoneColumn                 = mysql.IntegerColumn("done")
		MinExpansionColumn         = mysql.IntegerColumn("min_expansion")
		MaxExpansionColumn         = mysql.IntegerColumn("max_expansion")
		ContentFlagsColumn         = mysql.StringColumn("content_flags")
		ContentFlagsDisabledColumn = mysql.StringColumn("content_flags_disabled")
		allColumns                 = mysql.ColumnList{IDColumn, NameColumn, MincashColumn, MaxcashColumn, AvgcoinColumn, DoneColumn, MinExpansionColumn, MaxExpansionColumn, ContentFlagsColumn, ContentFlagsDisabledColumn}
		mutableColumns             = mysql.ColumnList{NameColumn, MincashColumn, MaxcashColumn, AvgcoinColumn, DoneColumn, MinExpansionColumn, MaxExpansionColumn, ContentFlagsColumn, ContentFlagsDisabledColumn}
		defaultColumns             = mysql.ColumnList{NameColumn, MincashColumn, MaxcashColumn, AvgcoinColumn, DoneColumn, MinExpansionColumn, MaxExpansionColumn}
	)

	return loottableTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                   IDColumn,
		Name:                 NameColumn,
		Mincash:              MincashColumn,
		Maxcash:              MaxcashColumn,
		Avgcoin:              AvgcoinColumn,
		Done:                 DoneColumn,
		MinExpansion:         MinExpansionColumn,
		MaxExpansion:         MaxExpansionColumn,
		ContentFlags:         ContentFlagsColumn,
		ContentFlagsDisabled: ContentFlagsDisabledColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
