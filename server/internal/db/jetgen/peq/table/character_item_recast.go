//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterItemRecast = newCharacterItemRecastTable("peq", "character_item_recast", "")

type characterItemRecastTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	RecastType mysql.ColumnInteger
	Timestamp  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterItemRecastTable struct {
	characterItemRecastTable

	NEW characterItemRecastTable
}

// AS creates new CharacterItemRecastTable with assigned alias
func (a CharacterItemRecastTable) AS(alias string) *CharacterItemRecastTable {
	return newCharacterItemRecastTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterItemRecastTable with assigned schema name
func (a CharacterItemRecastTable) FromSchema(schemaName string) *CharacterItemRecastTable {
	return newCharacterItemRecastTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterItemRecastTable with assigned table prefix
func (a CharacterItemRecastTable) WithPrefix(prefix string) *CharacterItemRecastTable {
	return newCharacterItemRecastTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterItemRecastTable with assigned table suffix
func (a CharacterItemRecastTable) WithSuffix(suffix string) *CharacterItemRecastTable {
	return newCharacterItemRecastTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterItemRecastTable(schemaName, tableName, alias string) *CharacterItemRecastTable {
	return &CharacterItemRecastTable{
		characterItemRecastTable: newCharacterItemRecastTableImpl(schemaName, tableName, alias),
		NEW:                      newCharacterItemRecastTableImpl("", "new", ""),
	}
}

func newCharacterItemRecastTableImpl(schemaName, tableName, alias string) characterItemRecastTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		RecastTypeColumn = mysql.IntegerColumn("recast_type")
		TimestampColumn  = mysql.IntegerColumn("timestamp")
		allColumns       = mysql.ColumnList{IDColumn, RecastTypeColumn, TimestampColumn}
		mutableColumns   = mysql.ColumnList{TimestampColumn}
		defaultColumns   = mysql.ColumnList{IDColumn, RecastTypeColumn, TimestampColumn}
	)

	return characterItemRecastTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		RecastType: RecastTypeColumn,
		Timestamp:  TimestampColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
