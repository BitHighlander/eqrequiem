//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Inventory = newInventoryTable("peq", "inventory", "")

type inventoryTable struct {
	mysql.Table

	// Columns
	CharacterID       mysql.ColumnInteger
	SlotID            mysql.ColumnInteger
	ItemID            mysql.ColumnInteger
	Charges           mysql.ColumnInteger
	Color             mysql.ColumnInteger
	AugmentOne        mysql.ColumnInteger
	AugmentTwo        mysql.ColumnInteger
	AugmentThree      mysql.ColumnInteger
	AugmentFour       mysql.ColumnInteger
	AugmentFive       mysql.ColumnInteger
	AugmentSix        mysql.ColumnInteger
	Instnodrop        mysql.ColumnInteger
	CustomData        mysql.ColumnString
	OrnamentIcon      mysql.ColumnInteger
	OrnamentIdfile    mysql.ColumnInteger
	OrnamentHeroModel mysql.ColumnInteger
	GUID              mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type InventoryTable struct {
	inventoryTable

	NEW inventoryTable
}

// AS creates new InventoryTable with assigned alias
func (a InventoryTable) AS(alias string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InventoryTable with assigned schema name
func (a InventoryTable) FromSchema(schemaName string) *InventoryTable {
	return newInventoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InventoryTable with assigned table prefix
func (a InventoryTable) WithPrefix(prefix string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InventoryTable with assigned table suffix
func (a InventoryTable) WithSuffix(suffix string) *InventoryTable {
	return newInventoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInventoryTable(schemaName, tableName, alias string) *InventoryTable {
	return &InventoryTable{
		inventoryTable: newInventoryTableImpl(schemaName, tableName, alias),
		NEW:            newInventoryTableImpl("", "new", ""),
	}
}

func newInventoryTableImpl(schemaName, tableName, alias string) inventoryTable {
	var (
		CharacterIDColumn       = mysql.IntegerColumn("character_id")
		SlotIDColumn            = mysql.IntegerColumn("slot_id")
		ItemIDColumn            = mysql.IntegerColumn("item_id")
		ChargesColumn           = mysql.IntegerColumn("charges")
		ColorColumn             = mysql.IntegerColumn("color")
		AugmentOneColumn        = mysql.IntegerColumn("augment_one")
		AugmentTwoColumn        = mysql.IntegerColumn("augment_two")
		AugmentThreeColumn      = mysql.IntegerColumn("augment_three")
		AugmentFourColumn       = mysql.IntegerColumn("augment_four")
		AugmentFiveColumn       = mysql.IntegerColumn("augment_five")
		AugmentSixColumn        = mysql.IntegerColumn("augment_six")
		InstnodropColumn        = mysql.IntegerColumn("instnodrop")
		CustomDataColumn        = mysql.StringColumn("custom_data")
		OrnamentIconColumn      = mysql.IntegerColumn("ornament_icon")
		OrnamentIdfileColumn    = mysql.IntegerColumn("ornament_idfile")
		OrnamentHeroModelColumn = mysql.IntegerColumn("ornament_hero_model")
		GUIDColumn              = mysql.IntegerColumn("guid")
		allColumns              = mysql.ColumnList{CharacterIDColumn, SlotIDColumn, ItemIDColumn, ChargesColumn, ColorColumn, AugmentOneColumn, AugmentTwoColumn, AugmentThreeColumn, AugmentFourColumn, AugmentFiveColumn, AugmentSixColumn, InstnodropColumn, CustomDataColumn, OrnamentIconColumn, OrnamentIdfileColumn, OrnamentHeroModelColumn, GUIDColumn}
		mutableColumns          = mysql.ColumnList{ItemIDColumn, ChargesColumn, ColorColumn, AugmentOneColumn, AugmentTwoColumn, AugmentThreeColumn, AugmentFourColumn, AugmentFiveColumn, AugmentSixColumn, InstnodropColumn, CustomDataColumn, OrnamentIconColumn, OrnamentIdfileColumn, OrnamentHeroModelColumn, GUIDColumn}
		defaultColumns          = mysql.ColumnList{CharacterIDColumn, SlotIDColumn, ItemIDColumn, ChargesColumn, ColorColumn, AugmentOneColumn, AugmentTwoColumn, AugmentThreeColumn, AugmentFourColumn, AugmentFiveColumn, AugmentSixColumn, InstnodropColumn, OrnamentIconColumn, OrnamentIdfileColumn, OrnamentHeroModelColumn, GUIDColumn}
	)

	return inventoryTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharacterID:       CharacterIDColumn,
		SlotID:            SlotIDColumn,
		ItemID:            ItemIDColumn,
		Charges:           ChargesColumn,
		Color:             ColorColumn,
		AugmentOne:        AugmentOneColumn,
		AugmentTwo:        AugmentTwoColumn,
		AugmentThree:      AugmentThreeColumn,
		AugmentFour:       AugmentFourColumn,
		AugmentFive:       AugmentFiveColumn,
		AugmentSix:        AugmentSixColumn,
		Instnodrop:        InstnodropColumn,
		CustomData:        CustomDataColumn,
		OrnamentIcon:      OrnamentIconColumn,
		OrnamentIdfile:    OrnamentIdfileColumn,
		OrnamentHeroModel: OrnamentHeroModelColumn,
		GUID:              GUIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
