//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SpireUserServerDatabaseConnections = newSpireUserServerDatabaseConnectionsTable("peq", "spire_user_server_database_connections", "")

type spireUserServerDatabaseConnectionsTable struct {
	mysql.Table

	// Columns
	ID                         mysql.ColumnInteger
	UserID                     mysql.ColumnInteger
	ServerDatabaseConnectionID mysql.ColumnInteger
	Active                     mysql.ColumnInteger
	CreatedBy                  mysql.ColumnInteger
	CreatedAt                  mysql.ColumnTimestamp
	UpdatedAt                  mysql.ColumnTimestamp
	DeletedAt                  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SpireUserServerDatabaseConnectionsTable struct {
	spireUserServerDatabaseConnectionsTable

	NEW spireUserServerDatabaseConnectionsTable
}

// AS creates new SpireUserServerDatabaseConnectionsTable with assigned alias
func (a SpireUserServerDatabaseConnectionsTable) AS(alias string) *SpireUserServerDatabaseConnectionsTable {
	return newSpireUserServerDatabaseConnectionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SpireUserServerDatabaseConnectionsTable with assigned schema name
func (a SpireUserServerDatabaseConnectionsTable) FromSchema(schemaName string) *SpireUserServerDatabaseConnectionsTable {
	return newSpireUserServerDatabaseConnectionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SpireUserServerDatabaseConnectionsTable with assigned table prefix
func (a SpireUserServerDatabaseConnectionsTable) WithPrefix(prefix string) *SpireUserServerDatabaseConnectionsTable {
	return newSpireUserServerDatabaseConnectionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SpireUserServerDatabaseConnectionsTable with assigned table suffix
func (a SpireUserServerDatabaseConnectionsTable) WithSuffix(suffix string) *SpireUserServerDatabaseConnectionsTable {
	return newSpireUserServerDatabaseConnectionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSpireUserServerDatabaseConnectionsTable(schemaName, tableName, alias string) *SpireUserServerDatabaseConnectionsTable {
	return &SpireUserServerDatabaseConnectionsTable{
		spireUserServerDatabaseConnectionsTable: newSpireUserServerDatabaseConnectionsTableImpl(schemaName, tableName, alias),
		NEW:                                     newSpireUserServerDatabaseConnectionsTableImpl("", "new", ""),
	}
}

func newSpireUserServerDatabaseConnectionsTableImpl(schemaName, tableName, alias string) spireUserServerDatabaseConnectionsTable {
	var (
		IDColumn                         = mysql.IntegerColumn("id")
		UserIDColumn                     = mysql.IntegerColumn("user_id")
		ServerDatabaseConnectionIDColumn = mysql.IntegerColumn("server_database_connection_id")
		ActiveColumn                     = mysql.IntegerColumn("active")
		CreatedByColumn                  = mysql.IntegerColumn("created_by")
		CreatedAtColumn                  = mysql.TimestampColumn("created_at")
		UpdatedAtColumn                  = mysql.TimestampColumn("updated_at")
		DeletedAtColumn                  = mysql.TimestampColumn("deleted_at")
		allColumns                       = mysql.ColumnList{IDColumn, UserIDColumn, ServerDatabaseConnectionIDColumn, ActiveColumn, CreatedByColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		mutableColumns                   = mysql.ColumnList{UserIDColumn, ServerDatabaseConnectionIDColumn, ActiveColumn, CreatedByColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		defaultColumns                   = mysql.ColumnList{ActiveColumn, CreatedByColumn}
	)

	return spireUserServerDatabaseConnectionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                         IDColumn,
		UserID:                     UserIDColumn,
		ServerDatabaseConnectionID: ServerDatabaseConnectionIDColumn,
		Active:                     ActiveColumn,
		CreatedBy:                  CreatedByColumn,
		CreatedAt:                  CreatedAtColumn,
		UpdatedAt:                  UpdatedAtColumn,
		DeletedAt:                  DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
