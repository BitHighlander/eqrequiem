//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CompletedTasks = newCompletedTasksTable("peq", "completed_tasks", "")

type completedTasksTable struct {
	mysql.Table

	// Columns
	Charid        mysql.ColumnInteger
	Completedtime mysql.ColumnInteger
	Taskid        mysql.ColumnInteger
	Activityid    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CompletedTasksTable struct {
	completedTasksTable

	NEW completedTasksTable
}

// AS creates new CompletedTasksTable with assigned alias
func (a CompletedTasksTable) AS(alias string) *CompletedTasksTable {
	return newCompletedTasksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CompletedTasksTable with assigned schema name
func (a CompletedTasksTable) FromSchema(schemaName string) *CompletedTasksTable {
	return newCompletedTasksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CompletedTasksTable with assigned table prefix
func (a CompletedTasksTable) WithPrefix(prefix string) *CompletedTasksTable {
	return newCompletedTasksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CompletedTasksTable with assigned table suffix
func (a CompletedTasksTable) WithSuffix(suffix string) *CompletedTasksTable {
	return newCompletedTasksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCompletedTasksTable(schemaName, tableName, alias string) *CompletedTasksTable {
	return &CompletedTasksTable{
		completedTasksTable: newCompletedTasksTableImpl(schemaName, tableName, alias),
		NEW:                 newCompletedTasksTableImpl("", "new", ""),
	}
}

func newCompletedTasksTableImpl(schemaName, tableName, alias string) completedTasksTable {
	var (
		CharidColumn        = mysql.IntegerColumn("charid")
		CompletedtimeColumn = mysql.IntegerColumn("completedtime")
		TaskidColumn        = mysql.IntegerColumn("taskid")
		ActivityidColumn    = mysql.IntegerColumn("activityid")
		allColumns          = mysql.ColumnList{CharidColumn, CompletedtimeColumn, TaskidColumn, ActivityidColumn}
		mutableColumns      = mysql.ColumnList{}
		defaultColumns      = mysql.ColumnList{CharidColumn, CompletedtimeColumn, TaskidColumn, ActivityidColumn}
	)

	return completedTasksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Charid:        CharidColumn,
		Completedtime: CompletedtimeColumn,
		Taskid:        TaskidColumn,
		Activityid:    ActivityidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
