//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FactionValues = newFactionValuesTable("peq", "faction_values", "")

type factionValuesTable struct {
	mysql.Table

	// Columns
	CharID       mysql.ColumnInteger
	FactionID    mysql.ColumnInteger
	CurrentValue mysql.ColumnInteger
	Temp         mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FactionValuesTable struct {
	factionValuesTable

	NEW factionValuesTable
}

// AS creates new FactionValuesTable with assigned alias
func (a FactionValuesTable) AS(alias string) *FactionValuesTable {
	return newFactionValuesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FactionValuesTable with assigned schema name
func (a FactionValuesTable) FromSchema(schemaName string) *FactionValuesTable {
	return newFactionValuesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FactionValuesTable with assigned table prefix
func (a FactionValuesTable) WithPrefix(prefix string) *FactionValuesTable {
	return newFactionValuesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FactionValuesTable with assigned table suffix
func (a FactionValuesTable) WithSuffix(suffix string) *FactionValuesTable {
	return newFactionValuesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFactionValuesTable(schemaName, tableName, alias string) *FactionValuesTable {
	return &FactionValuesTable{
		factionValuesTable: newFactionValuesTableImpl(schemaName, tableName, alias),
		NEW:                newFactionValuesTableImpl("", "new", ""),
	}
}

func newFactionValuesTableImpl(schemaName, tableName, alias string) factionValuesTable {
	var (
		CharIDColumn       = mysql.IntegerColumn("char_id")
		FactionIDColumn    = mysql.IntegerColumn("faction_id")
		CurrentValueColumn = mysql.IntegerColumn("current_value")
		TempColumn         = mysql.IntegerColumn("temp")
		allColumns         = mysql.ColumnList{CharIDColumn, FactionIDColumn, CurrentValueColumn, TempColumn}
		mutableColumns     = mysql.ColumnList{CurrentValueColumn, TempColumn}
		defaultColumns     = mysql.ColumnList{CharIDColumn, FactionIDColumn, CurrentValueColumn, TempColumn}
	)

	return factionValuesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharID:       CharIDColumn,
		FactionID:    FactionIDColumn,
		CurrentValue: CurrentValueColumn,
		Temp:         TempColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
