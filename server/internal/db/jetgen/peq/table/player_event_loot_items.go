//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PlayerEventLootItems = newPlayerEventLootItemsTable("peq", "player_event_loot_items", "")

type playerEventLootItemsTable struct {
	mysql.Table

	// Columns
	ID         mysql.ColumnInteger
	ItemID     mysql.ColumnInteger
	ItemName   mysql.ColumnString
	Charges    mysql.ColumnInteger
	Augment1ID mysql.ColumnInteger
	Augment2ID mysql.ColumnInteger
	Augment3ID mysql.ColumnInteger
	Augment4ID mysql.ColumnInteger
	Augment5ID mysql.ColumnInteger
	Augment6ID mysql.ColumnInteger
	NpcID      mysql.ColumnInteger
	CorpseName mysql.ColumnString
	CreatedAt  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PlayerEventLootItemsTable struct {
	playerEventLootItemsTable

	NEW playerEventLootItemsTable
}

// AS creates new PlayerEventLootItemsTable with assigned alias
func (a PlayerEventLootItemsTable) AS(alias string) *PlayerEventLootItemsTable {
	return newPlayerEventLootItemsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlayerEventLootItemsTable with assigned schema name
func (a PlayerEventLootItemsTable) FromSchema(schemaName string) *PlayerEventLootItemsTable {
	return newPlayerEventLootItemsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlayerEventLootItemsTable with assigned table prefix
func (a PlayerEventLootItemsTable) WithPrefix(prefix string) *PlayerEventLootItemsTable {
	return newPlayerEventLootItemsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlayerEventLootItemsTable with assigned table suffix
func (a PlayerEventLootItemsTable) WithSuffix(suffix string) *PlayerEventLootItemsTable {
	return newPlayerEventLootItemsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlayerEventLootItemsTable(schemaName, tableName, alias string) *PlayerEventLootItemsTable {
	return &PlayerEventLootItemsTable{
		playerEventLootItemsTable: newPlayerEventLootItemsTableImpl(schemaName, tableName, alias),
		NEW:                       newPlayerEventLootItemsTableImpl("", "new", ""),
	}
}

func newPlayerEventLootItemsTableImpl(schemaName, tableName, alias string) playerEventLootItemsTable {
	var (
		IDColumn         = mysql.IntegerColumn("id")
		ItemIDColumn     = mysql.IntegerColumn("item_id")
		ItemNameColumn   = mysql.StringColumn("item_name")
		ChargesColumn    = mysql.IntegerColumn("charges")
		Augment1IDColumn = mysql.IntegerColumn("augment_1_id")
		Augment2IDColumn = mysql.IntegerColumn("augment_2_id")
		Augment3IDColumn = mysql.IntegerColumn("augment_3_id")
		Augment4IDColumn = mysql.IntegerColumn("augment_4_id")
		Augment5IDColumn = mysql.IntegerColumn("augment_5_id")
		Augment6IDColumn = mysql.IntegerColumn("augment_6_id")
		NpcIDColumn      = mysql.IntegerColumn("npc_id")
		CorpseNameColumn = mysql.StringColumn("corpse_name")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		allColumns       = mysql.ColumnList{IDColumn, ItemIDColumn, ItemNameColumn, ChargesColumn, Augment1IDColumn, Augment2IDColumn, Augment3IDColumn, Augment4IDColumn, Augment5IDColumn, Augment6IDColumn, NpcIDColumn, CorpseNameColumn, CreatedAtColumn}
		mutableColumns   = mysql.ColumnList{ItemIDColumn, ItemNameColumn, ChargesColumn, Augment1IDColumn, Augment2IDColumn, Augment3IDColumn, Augment4IDColumn, Augment5IDColumn, Augment6IDColumn, NpcIDColumn, CorpseNameColumn, CreatedAtColumn}
		defaultColumns   = mysql.ColumnList{Augment1IDColumn, Augment2IDColumn, Augment3IDColumn, Augment4IDColumn, Augment5IDColumn, Augment6IDColumn}
	)

	return playerEventLootItemsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		ItemID:     ItemIDColumn,
		ItemName:   ItemNameColumn,
		Charges:    ChargesColumn,
		Augment1ID: Augment1IDColumn,
		Augment2ID: Augment2IDColumn,
		Augment3ID: Augment3IDColumn,
		Augment4ID: Augment4IDColumn,
		Augment5ID: Augment5IDColumn,
		Augment6ID: Augment6IDColumn,
		NpcID:      NpcIDColumn,
		CorpseName: CorpseNameColumn,
		CreatedAt:  CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
