//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ObjectContents = newObjectContentsTable("peq", "object_contents", "")

type objectContentsTable struct {
	mysql.Table

	// Columns
	Zoneid   mysql.ColumnInteger
	Parentid mysql.ColumnInteger
	Bagidx   mysql.ColumnInteger
	Itemid   mysql.ColumnInteger
	Charges  mysql.ColumnInteger
	Droptime mysql.ColumnTimestamp
	Augslot1 mysql.ColumnInteger
	Augslot2 mysql.ColumnInteger
	Augslot3 mysql.ColumnInteger
	Augslot4 mysql.ColumnInteger
	Augslot5 mysql.ColumnInteger
	Augslot6 mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type ObjectContentsTable struct {
	objectContentsTable

	NEW objectContentsTable
}

// AS creates new ObjectContentsTable with assigned alias
func (a ObjectContentsTable) AS(alias string) *ObjectContentsTable {
	return newObjectContentsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ObjectContentsTable with assigned schema name
func (a ObjectContentsTable) FromSchema(schemaName string) *ObjectContentsTable {
	return newObjectContentsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ObjectContentsTable with assigned table prefix
func (a ObjectContentsTable) WithPrefix(prefix string) *ObjectContentsTable {
	return newObjectContentsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ObjectContentsTable with assigned table suffix
func (a ObjectContentsTable) WithSuffix(suffix string) *ObjectContentsTable {
	return newObjectContentsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newObjectContentsTable(schemaName, tableName, alias string) *ObjectContentsTable {
	return &ObjectContentsTable{
		objectContentsTable: newObjectContentsTableImpl(schemaName, tableName, alias),
		NEW:                 newObjectContentsTableImpl("", "new", ""),
	}
}

func newObjectContentsTableImpl(schemaName, tableName, alias string) objectContentsTable {
	var (
		ZoneidColumn   = mysql.IntegerColumn("zoneid")
		ParentidColumn = mysql.IntegerColumn("parentid")
		BagidxColumn   = mysql.IntegerColumn("bagidx")
		ItemidColumn   = mysql.IntegerColumn("itemid")
		ChargesColumn  = mysql.IntegerColumn("charges")
		DroptimeColumn = mysql.TimestampColumn("droptime")
		Augslot1Column = mysql.IntegerColumn("augslot1")
		Augslot2Column = mysql.IntegerColumn("augslot2")
		Augslot3Column = mysql.IntegerColumn("augslot3")
		Augslot4Column = mysql.IntegerColumn("augslot4")
		Augslot5Column = mysql.IntegerColumn("augslot5")
		Augslot6Column = mysql.IntegerColumn("augslot6")
		allColumns     = mysql.ColumnList{ZoneidColumn, ParentidColumn, BagidxColumn, ItemidColumn, ChargesColumn, DroptimeColumn, Augslot1Column, Augslot2Column, Augslot3Column, Augslot4Column, Augslot5Column, Augslot6Column}
		mutableColumns = mysql.ColumnList{ZoneidColumn, ItemidColumn, ChargesColumn, DroptimeColumn, Augslot1Column, Augslot2Column, Augslot3Column, Augslot4Column, Augslot5Column, Augslot6Column}
		defaultColumns = mysql.ColumnList{ZoneidColumn, ParentidColumn, BagidxColumn, ItemidColumn, ChargesColumn, DroptimeColumn, Augslot1Column, Augslot2Column, Augslot3Column, Augslot4Column, Augslot5Column, Augslot6Column}
	)

	return objectContentsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Zoneid:   ZoneidColumn,
		Parentid: ParentidColumn,
		Bagidx:   BagidxColumn,
		Itemid:   ItemidColumn,
		Charges:  ChargesColumn,
		Droptime: DroptimeColumn,
		Augslot1: Augslot1Column,
		Augslot2: Augslot2Column,
		Augslot3: Augslot3Column,
		Augslot4: Augslot4Column,
		Augslot5: Augslot5Column,
		Augslot6: Augslot6Column,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
