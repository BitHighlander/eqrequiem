//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DbVersion = newDbVersionTable("peq", "db_version", "")

type dbVersionTable struct {
	mysql.Table

	// Columns
	Version     mysql.ColumnInteger
	BotsVersion mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type DbVersionTable struct {
	dbVersionTable

	NEW dbVersionTable
}

// AS creates new DbVersionTable with assigned alias
func (a DbVersionTable) AS(alias string) *DbVersionTable {
	return newDbVersionTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DbVersionTable with assigned schema name
func (a DbVersionTable) FromSchema(schemaName string) *DbVersionTable {
	return newDbVersionTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DbVersionTable with assigned table prefix
func (a DbVersionTable) WithPrefix(prefix string) *DbVersionTable {
	return newDbVersionTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DbVersionTable with assigned table suffix
func (a DbVersionTable) WithSuffix(suffix string) *DbVersionTable {
	return newDbVersionTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDbVersionTable(schemaName, tableName, alias string) *DbVersionTable {
	return &DbVersionTable{
		dbVersionTable: newDbVersionTableImpl(schemaName, tableName, alias),
		NEW:            newDbVersionTableImpl("", "new", ""),
	}
}

func newDbVersionTableImpl(schemaName, tableName, alias string) dbVersionTable {
	var (
		VersionColumn     = mysql.IntegerColumn("version")
		BotsVersionColumn = mysql.IntegerColumn("bots_version")
		allColumns        = mysql.ColumnList{VersionColumn, BotsVersionColumn}
		mutableColumns    = mysql.ColumnList{VersionColumn, BotsVersionColumn}
		defaultColumns    = mysql.ColumnList{VersionColumn, BotsVersionColumn}
	)

	return dbVersionTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Version:     VersionColumn,
		BotsVersion: BotsVersionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
