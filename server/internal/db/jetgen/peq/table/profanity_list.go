//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ProfanityList = newProfanityListTable("peq", "profanity_list", "")

type profanityListTable struct {
	mysql.Table

	// Columns
	Word mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type ProfanityListTable struct {
	profanityListTable

	NEW profanityListTable
}

// AS creates new ProfanityListTable with assigned alias
func (a ProfanityListTable) AS(alias string) *ProfanityListTable {
	return newProfanityListTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ProfanityListTable with assigned schema name
func (a ProfanityListTable) FromSchema(schemaName string) *ProfanityListTable {
	return newProfanityListTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ProfanityListTable with assigned table prefix
func (a ProfanityListTable) WithPrefix(prefix string) *ProfanityListTable {
	return newProfanityListTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ProfanityListTable with assigned table suffix
func (a ProfanityListTable) WithSuffix(suffix string) *ProfanityListTable {
	return newProfanityListTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newProfanityListTable(schemaName, tableName, alias string) *ProfanityListTable {
	return &ProfanityListTable{
		profanityListTable: newProfanityListTableImpl(schemaName, tableName, alias),
		NEW:                newProfanityListTableImpl("", "new", ""),
	}
}

func newProfanityListTableImpl(schemaName, tableName, alias string) profanityListTable {
	var (
		WordColumn     = mysql.StringColumn("word")
		allColumns     = mysql.ColumnList{WordColumn}
		mutableColumns = mysql.ColumnList{WordColumn}
		defaultColumns = mysql.ColumnList{}
	)

	return profanityListTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Word: WordColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
