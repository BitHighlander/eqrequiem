//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterAltCurrency = newCharacterAltCurrencyTable("peq", "character_alt_currency", "")

type characterAltCurrencyTable struct {
	mysql.Table

	// Columns
	CharID     mysql.ColumnInteger
	CurrencyID mysql.ColumnInteger
	Amount     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterAltCurrencyTable struct {
	characterAltCurrencyTable

	NEW characterAltCurrencyTable
}

// AS creates new CharacterAltCurrencyTable with assigned alias
func (a CharacterAltCurrencyTable) AS(alias string) *CharacterAltCurrencyTable {
	return newCharacterAltCurrencyTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterAltCurrencyTable with assigned schema name
func (a CharacterAltCurrencyTable) FromSchema(schemaName string) *CharacterAltCurrencyTable {
	return newCharacterAltCurrencyTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterAltCurrencyTable with assigned table prefix
func (a CharacterAltCurrencyTable) WithPrefix(prefix string) *CharacterAltCurrencyTable {
	return newCharacterAltCurrencyTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterAltCurrencyTable with assigned table suffix
func (a CharacterAltCurrencyTable) WithSuffix(suffix string) *CharacterAltCurrencyTable {
	return newCharacterAltCurrencyTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterAltCurrencyTable(schemaName, tableName, alias string) *CharacterAltCurrencyTable {
	return &CharacterAltCurrencyTable{
		characterAltCurrencyTable: newCharacterAltCurrencyTableImpl(schemaName, tableName, alias),
		NEW:                       newCharacterAltCurrencyTableImpl("", "new", ""),
	}
}

func newCharacterAltCurrencyTableImpl(schemaName, tableName, alias string) characterAltCurrencyTable {
	var (
		CharIDColumn     = mysql.IntegerColumn("char_id")
		CurrencyIDColumn = mysql.IntegerColumn("currency_id")
		AmountColumn     = mysql.IntegerColumn("amount")
		allColumns       = mysql.ColumnList{CharIDColumn, CurrencyIDColumn, AmountColumn}
		mutableColumns   = mysql.ColumnList{AmountColumn}
		defaultColumns   = mysql.ColumnList{}
	)

	return characterAltCurrencyTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharID:     CharIDColumn,
		CurrencyID: CurrencyIDColumn,
		Amount:     AmountColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
