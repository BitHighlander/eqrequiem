//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterExpModifiers = newCharacterExpModifiersTable("peq", "character_exp_modifiers", "")

type characterExpModifiersTable struct {
	mysql.Table

	// Columns
	CharacterID     mysql.ColumnInteger
	ZoneID          mysql.ColumnInteger
	InstanceVersion mysql.ColumnInteger
	AaModifier      mysql.ColumnFloat
	ExpModifier     mysql.ColumnFloat

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterExpModifiersTable struct {
	characterExpModifiersTable

	NEW characterExpModifiersTable
}

// AS creates new CharacterExpModifiersTable with assigned alias
func (a CharacterExpModifiersTable) AS(alias string) *CharacterExpModifiersTable {
	return newCharacterExpModifiersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterExpModifiersTable with assigned schema name
func (a CharacterExpModifiersTable) FromSchema(schemaName string) *CharacterExpModifiersTable {
	return newCharacterExpModifiersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterExpModifiersTable with assigned table prefix
func (a CharacterExpModifiersTable) WithPrefix(prefix string) *CharacterExpModifiersTable {
	return newCharacterExpModifiersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterExpModifiersTable with assigned table suffix
func (a CharacterExpModifiersTable) WithSuffix(suffix string) *CharacterExpModifiersTable {
	return newCharacterExpModifiersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterExpModifiersTable(schemaName, tableName, alias string) *CharacterExpModifiersTable {
	return &CharacterExpModifiersTable{
		characterExpModifiersTable: newCharacterExpModifiersTableImpl(schemaName, tableName, alias),
		NEW:                        newCharacterExpModifiersTableImpl("", "new", ""),
	}
}

func newCharacterExpModifiersTableImpl(schemaName, tableName, alias string) characterExpModifiersTable {
	var (
		CharacterIDColumn     = mysql.IntegerColumn("character_id")
		ZoneIDColumn          = mysql.IntegerColumn("zone_id")
		InstanceVersionColumn = mysql.IntegerColumn("instance_version")
		AaModifierColumn      = mysql.FloatColumn("aa_modifier")
		ExpModifierColumn     = mysql.FloatColumn("exp_modifier")
		allColumns            = mysql.ColumnList{CharacterIDColumn, ZoneIDColumn, InstanceVersionColumn, AaModifierColumn, ExpModifierColumn}
		mutableColumns        = mysql.ColumnList{AaModifierColumn, ExpModifierColumn}
		defaultColumns        = mysql.ColumnList{InstanceVersionColumn, AaModifierColumn, ExpModifierColumn}
	)

	return characterExpModifiersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharacterID:     CharacterIDColumn,
		ZoneID:          ZoneIDColumn,
		InstanceVersion: InstanceVersionColumn,
		AaModifier:      AaModifierColumn,
		ExpModifier:     ExpModifierColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
