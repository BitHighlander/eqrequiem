//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PlayerEventTrade = newPlayerEventTradeTable("peq", "player_event_trade", "")

type playerEventTradeTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	Char1ID       mysql.ColumnInteger
	Char2ID       mysql.ColumnInteger
	Char1Copper   mysql.ColumnInteger
	Char1Silver   mysql.ColumnInteger
	Char1Gold     mysql.ColumnInteger
	Char1Platinum mysql.ColumnInteger
	Char2Copper   mysql.ColumnInteger
	Char2Silver   mysql.ColumnInteger
	Char2Gold     mysql.ColumnInteger
	Char2Platinum mysql.ColumnInteger
	CreatedAt     mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PlayerEventTradeTable struct {
	playerEventTradeTable

	NEW playerEventTradeTable
}

// AS creates new PlayerEventTradeTable with assigned alias
func (a PlayerEventTradeTable) AS(alias string) *PlayerEventTradeTable {
	return newPlayerEventTradeTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlayerEventTradeTable with assigned schema name
func (a PlayerEventTradeTable) FromSchema(schemaName string) *PlayerEventTradeTable {
	return newPlayerEventTradeTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlayerEventTradeTable with assigned table prefix
func (a PlayerEventTradeTable) WithPrefix(prefix string) *PlayerEventTradeTable {
	return newPlayerEventTradeTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlayerEventTradeTable with assigned table suffix
func (a PlayerEventTradeTable) WithSuffix(suffix string) *PlayerEventTradeTable {
	return newPlayerEventTradeTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlayerEventTradeTable(schemaName, tableName, alias string) *PlayerEventTradeTable {
	return &PlayerEventTradeTable{
		playerEventTradeTable: newPlayerEventTradeTableImpl(schemaName, tableName, alias),
		NEW:                   newPlayerEventTradeTableImpl("", "new", ""),
	}
}

func newPlayerEventTradeTableImpl(schemaName, tableName, alias string) playerEventTradeTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		Char1IDColumn       = mysql.IntegerColumn("char1_id")
		Char2IDColumn       = mysql.IntegerColumn("char2_id")
		Char1CopperColumn   = mysql.IntegerColumn("char1_copper")
		Char1SilverColumn   = mysql.IntegerColumn("char1_silver")
		Char1GoldColumn     = mysql.IntegerColumn("char1_gold")
		Char1PlatinumColumn = mysql.IntegerColumn("char1_platinum")
		Char2CopperColumn   = mysql.IntegerColumn("char2_copper")
		Char2SilverColumn   = mysql.IntegerColumn("char2_silver")
		Char2GoldColumn     = mysql.IntegerColumn("char2_gold")
		Char2PlatinumColumn = mysql.IntegerColumn("char2_platinum")
		CreatedAtColumn     = mysql.TimestampColumn("created_at")
		allColumns          = mysql.ColumnList{IDColumn, Char1IDColumn, Char2IDColumn, Char1CopperColumn, Char1SilverColumn, Char1GoldColumn, Char1PlatinumColumn, Char2CopperColumn, Char2SilverColumn, Char2GoldColumn, Char2PlatinumColumn, CreatedAtColumn}
		mutableColumns      = mysql.ColumnList{Char1IDColumn, Char2IDColumn, Char1CopperColumn, Char1SilverColumn, Char1GoldColumn, Char1PlatinumColumn, Char2CopperColumn, Char2SilverColumn, Char2GoldColumn, Char2PlatinumColumn, CreatedAtColumn}
		defaultColumns      = mysql.ColumnList{Char1IDColumn, Char2IDColumn, Char1CopperColumn, Char1SilverColumn, Char1GoldColumn, Char1PlatinumColumn, Char2CopperColumn, Char2SilverColumn, Char2GoldColumn, Char2PlatinumColumn}
	)

	return playerEventTradeTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		Char1ID:       Char1IDColumn,
		Char2ID:       Char2IDColumn,
		Char1Copper:   Char1CopperColumn,
		Char1Silver:   Char1SilverColumn,
		Char1Gold:     Char1GoldColumn,
		Char1Platinum: Char1PlatinumColumn,
		Char2Copper:   Char2CopperColumn,
		Char2Silver:   Char2SilverColumn,
		Char2Gold:     Char2GoldColumn,
		Char2Platinum: Char2PlatinumColumn,
		CreatedAt:     CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
