//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var RuleSets = newRuleSetsTable("peq", "rule_sets", "")

type ruleSetsTable struct {
	mysql.Table

	// Columns
	RulesetID mysql.ColumnInteger
	Name      mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type RuleSetsTable struct {
	ruleSetsTable

	NEW ruleSetsTable
}

// AS creates new RuleSetsTable with assigned alias
func (a RuleSetsTable) AS(alias string) *RuleSetsTable {
	return newRuleSetsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new RuleSetsTable with assigned schema name
func (a RuleSetsTable) FromSchema(schemaName string) *RuleSetsTable {
	return newRuleSetsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new RuleSetsTable with assigned table prefix
func (a RuleSetsTable) WithPrefix(prefix string) *RuleSetsTable {
	return newRuleSetsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new RuleSetsTable with assigned table suffix
func (a RuleSetsTable) WithSuffix(suffix string) *RuleSetsTable {
	return newRuleSetsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newRuleSetsTable(schemaName, tableName, alias string) *RuleSetsTable {
	return &RuleSetsTable{
		ruleSetsTable: newRuleSetsTableImpl(schemaName, tableName, alias),
		NEW:           newRuleSetsTableImpl("", "new", ""),
	}
}

func newRuleSetsTableImpl(schemaName, tableName, alias string) ruleSetsTable {
	var (
		RulesetIDColumn = mysql.IntegerColumn("ruleset_id")
		NameColumn      = mysql.StringColumn("name")
		allColumns      = mysql.ColumnList{RulesetIDColumn, NameColumn}
		mutableColumns  = mysql.ColumnList{NameColumn}
		defaultColumns  = mysql.ColumnList{NameColumn}
	)

	return ruleSetsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		RulesetID: RulesetIDColumn,
		Name:      NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
