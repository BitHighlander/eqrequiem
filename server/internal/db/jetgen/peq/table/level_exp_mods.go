//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LevelExpMods = newLevelExpModsTable("peq", "level_exp_mods", "")

type levelExpModsTable struct {
	mysql.Table

	// Columns
	Level    mysql.ColumnInteger
	ExpMod   mysql.ColumnFloat
	AaExpMod mysql.ColumnFloat

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type LevelExpModsTable struct {
	levelExpModsTable

	NEW levelExpModsTable
}

// AS creates new LevelExpModsTable with assigned alias
func (a LevelExpModsTable) AS(alias string) *LevelExpModsTable {
	return newLevelExpModsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LevelExpModsTable with assigned schema name
func (a LevelExpModsTable) FromSchema(schemaName string) *LevelExpModsTable {
	return newLevelExpModsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LevelExpModsTable with assigned table prefix
func (a LevelExpModsTable) WithPrefix(prefix string) *LevelExpModsTable {
	return newLevelExpModsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LevelExpModsTable with assigned table suffix
func (a LevelExpModsTable) WithSuffix(suffix string) *LevelExpModsTable {
	return newLevelExpModsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLevelExpModsTable(schemaName, tableName, alias string) *LevelExpModsTable {
	return &LevelExpModsTable{
		levelExpModsTable: newLevelExpModsTableImpl(schemaName, tableName, alias),
		NEW:               newLevelExpModsTableImpl("", "new", ""),
	}
}

func newLevelExpModsTableImpl(schemaName, tableName, alias string) levelExpModsTable {
	var (
		LevelColumn    = mysql.IntegerColumn("level")
		ExpModColumn   = mysql.FloatColumn("exp_mod")
		AaExpModColumn = mysql.FloatColumn("aa_exp_mod")
		allColumns     = mysql.ColumnList{LevelColumn, ExpModColumn, AaExpModColumn}
		mutableColumns = mysql.ColumnList{ExpModColumn, AaExpModColumn}
		defaultColumns = mysql.ColumnList{LevelColumn}
	)

	return levelExpModsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Level:    LevelColumn,
		ExpMod:   ExpModColumn,
		AaExpMod: AaExpModColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
