//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var InstanceListPlayer = newInstanceListPlayerTable("eqgo", "instance_list_player", "")

type instanceListPlayerTable struct {
	mysql.Table

	// Columns
	ID     mysql.ColumnInteger
	Charid mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type InstanceListPlayerTable struct {
	instanceListPlayerTable

	NEW instanceListPlayerTable
}

// AS creates new InstanceListPlayerTable with assigned alias
func (a InstanceListPlayerTable) AS(alias string) *InstanceListPlayerTable {
	return newInstanceListPlayerTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InstanceListPlayerTable with assigned schema name
func (a InstanceListPlayerTable) FromSchema(schemaName string) *InstanceListPlayerTable {
	return newInstanceListPlayerTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InstanceListPlayerTable with assigned table prefix
func (a InstanceListPlayerTable) WithPrefix(prefix string) *InstanceListPlayerTable {
	return newInstanceListPlayerTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InstanceListPlayerTable with assigned table suffix
func (a InstanceListPlayerTable) WithSuffix(suffix string) *InstanceListPlayerTable {
	return newInstanceListPlayerTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInstanceListPlayerTable(schemaName, tableName, alias string) *InstanceListPlayerTable {
	return &InstanceListPlayerTable{
		instanceListPlayerTable: newInstanceListPlayerTableImpl(schemaName, tableName, alias),
		NEW:                     newInstanceListPlayerTableImpl("", "new", ""),
	}
}

func newInstanceListPlayerTableImpl(schemaName, tableName, alias string) instanceListPlayerTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		CharidColumn   = mysql.IntegerColumn("charid")
		allColumns     = mysql.ColumnList{IDColumn, CharidColumn}
		mutableColumns = mysql.ColumnList{}
		defaultColumns = mysql.ColumnList{IDColumn, CharidColumn}
	)

	return instanceListPlayerTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		Charid: CharidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
