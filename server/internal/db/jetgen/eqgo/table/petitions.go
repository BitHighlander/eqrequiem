//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Petitions = newPetitionsTable("eqgo", "petitions", "")

type petitionsTable struct {
	mysql.Table

	// Columns
	Dib          mysql.ColumnInteger
	Petid        mysql.ColumnInteger
	Charname     mysql.ColumnString
	Accountname  mysql.ColumnString
	Lastgm       mysql.ColumnString
	Petitiontext mysql.ColumnString
	Gmtext       mysql.ColumnString
	Zone         mysql.ColumnString
	Urgency      mysql.ColumnInteger
	Charclass    mysql.ColumnInteger
	Charrace     mysql.ColumnInteger
	Charlevel    mysql.ColumnInteger
	Checkouts    mysql.ColumnInteger
	Unavailables mysql.ColumnInteger
	Ischeckedout mysql.ColumnInteger
	Senttime     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PetitionsTable struct {
	petitionsTable

	NEW petitionsTable
}

// AS creates new PetitionsTable with assigned alias
func (a PetitionsTable) AS(alias string) *PetitionsTable {
	return newPetitionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PetitionsTable with assigned schema name
func (a PetitionsTable) FromSchema(schemaName string) *PetitionsTable {
	return newPetitionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PetitionsTable with assigned table prefix
func (a PetitionsTable) WithPrefix(prefix string) *PetitionsTable {
	return newPetitionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PetitionsTable with assigned table suffix
func (a PetitionsTable) WithSuffix(suffix string) *PetitionsTable {
	return newPetitionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPetitionsTable(schemaName, tableName, alias string) *PetitionsTable {
	return &PetitionsTable{
		petitionsTable: newPetitionsTableImpl(schemaName, tableName, alias),
		NEW:            newPetitionsTableImpl("", "new", ""),
	}
}

func newPetitionsTableImpl(schemaName, tableName, alias string) petitionsTable {
	var (
		DibColumn          = mysql.IntegerColumn("dib")
		PetidColumn        = mysql.IntegerColumn("petid")
		CharnameColumn     = mysql.StringColumn("charname")
		AccountnameColumn  = mysql.StringColumn("accountname")
		LastgmColumn       = mysql.StringColumn("lastgm")
		PetitiontextColumn = mysql.StringColumn("petitiontext")
		GmtextColumn       = mysql.StringColumn("gmtext")
		ZoneColumn         = mysql.StringColumn("zone")
		UrgencyColumn      = mysql.IntegerColumn("urgency")
		CharclassColumn    = mysql.IntegerColumn("charclass")
		CharraceColumn     = mysql.IntegerColumn("charrace")
		CharlevelColumn    = mysql.IntegerColumn("charlevel")
		CheckoutsColumn    = mysql.IntegerColumn("checkouts")
		UnavailablesColumn = mysql.IntegerColumn("unavailables")
		IscheckedoutColumn = mysql.IntegerColumn("ischeckedout")
		SenttimeColumn     = mysql.IntegerColumn("senttime")
		allColumns         = mysql.ColumnList{DibColumn, PetidColumn, CharnameColumn, AccountnameColumn, LastgmColumn, PetitiontextColumn, GmtextColumn, ZoneColumn, UrgencyColumn, CharclassColumn, CharraceColumn, CharlevelColumn, CheckoutsColumn, UnavailablesColumn, IscheckedoutColumn, SenttimeColumn}
		mutableColumns     = mysql.ColumnList{PetidColumn, CharnameColumn, AccountnameColumn, LastgmColumn, PetitiontextColumn, GmtextColumn, ZoneColumn, UrgencyColumn, CharclassColumn, CharraceColumn, CharlevelColumn, CheckoutsColumn, UnavailablesColumn, IscheckedoutColumn, SenttimeColumn}
		defaultColumns     = mysql.ColumnList{PetidColumn, CharnameColumn, AccountnameColumn, LastgmColumn, ZoneColumn, UrgencyColumn, CharclassColumn, CharraceColumn, CharlevelColumn, CheckoutsColumn, UnavailablesColumn, IscheckedoutColumn, SenttimeColumn}
	)

	return petitionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Dib:          DibColumn,
		Petid:        PetidColumn,
		Charname:     CharnameColumn,
		Accountname:  AccountnameColumn,
		Lastgm:       LastgmColumn,
		Petitiontext: PetitiontextColumn,
		Gmtext:       GmtextColumn,
		Zone:         ZoneColumn,
		Urgency:      UrgencyColumn,
		Charclass:    CharclassColumn,
		Charrace:     CharraceColumn,
		Charlevel:    CharlevelColumn,
		Checkouts:    CheckoutsColumn,
		Unavailables: UnavailablesColumn,
		Ischeckedout: IscheckedoutColumn,
		Senttime:     SenttimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
