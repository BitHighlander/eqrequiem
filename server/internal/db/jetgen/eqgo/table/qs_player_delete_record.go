//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var QsPlayerDeleteRecord = newQsPlayerDeleteRecordTable("eqgo", "qs_player_delete_record", "")

type qsPlayerDeleteRecordTable struct {
	mysql.Table

	// Columns
	DeleteID  mysql.ColumnInteger
	Time      mysql.ColumnTimestamp
	CharID    mysql.ColumnInteger
	StackSize mysql.ColumnInteger
	CharItems mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type QsPlayerDeleteRecordTable struct {
	qsPlayerDeleteRecordTable

	NEW qsPlayerDeleteRecordTable
}

// AS creates new QsPlayerDeleteRecordTable with assigned alias
func (a QsPlayerDeleteRecordTable) AS(alias string) *QsPlayerDeleteRecordTable {
	return newQsPlayerDeleteRecordTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new QsPlayerDeleteRecordTable with assigned schema name
func (a QsPlayerDeleteRecordTable) FromSchema(schemaName string) *QsPlayerDeleteRecordTable {
	return newQsPlayerDeleteRecordTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new QsPlayerDeleteRecordTable with assigned table prefix
func (a QsPlayerDeleteRecordTable) WithPrefix(prefix string) *QsPlayerDeleteRecordTable {
	return newQsPlayerDeleteRecordTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new QsPlayerDeleteRecordTable with assigned table suffix
func (a QsPlayerDeleteRecordTable) WithSuffix(suffix string) *QsPlayerDeleteRecordTable {
	return newQsPlayerDeleteRecordTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newQsPlayerDeleteRecordTable(schemaName, tableName, alias string) *QsPlayerDeleteRecordTable {
	return &QsPlayerDeleteRecordTable{
		qsPlayerDeleteRecordTable: newQsPlayerDeleteRecordTableImpl(schemaName, tableName, alias),
		NEW:                       newQsPlayerDeleteRecordTableImpl("", "new", ""),
	}
}

func newQsPlayerDeleteRecordTableImpl(schemaName, tableName, alias string) qsPlayerDeleteRecordTable {
	var (
		DeleteIDColumn  = mysql.IntegerColumn("delete_id")
		TimeColumn      = mysql.TimestampColumn("time")
		CharIDColumn    = mysql.IntegerColumn("char_id")
		StackSizeColumn = mysql.IntegerColumn("stack_size")
		CharItemsColumn = mysql.IntegerColumn("char_items")
		allColumns      = mysql.ColumnList{DeleteIDColumn, TimeColumn, CharIDColumn, StackSizeColumn, CharItemsColumn}
		mutableColumns  = mysql.ColumnList{TimeColumn, CharIDColumn, StackSizeColumn, CharItemsColumn}
		defaultColumns  = mysql.ColumnList{CharIDColumn, StackSizeColumn, CharItemsColumn}
	)

	return qsPlayerDeleteRecordTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DeleteID:  DeleteIDColumn,
		Time:      TimeColumn,
		CharID:    CharIDColumn,
		StackSize: StackSizeColumn,
		CharItems: CharItemsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
