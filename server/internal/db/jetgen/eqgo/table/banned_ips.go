//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var BannedIps = newBannedIpsTable("eqgo", "banned_ips", "")

type bannedIpsTable struct {
	mysql.Table

	// Columns
	IPAddress mysql.ColumnString
	Notes     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type BannedIpsTable struct {
	bannedIpsTable

	NEW bannedIpsTable
}

// AS creates new BannedIpsTable with assigned alias
func (a BannedIpsTable) AS(alias string) *BannedIpsTable {
	return newBannedIpsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new BannedIpsTable with assigned schema name
func (a BannedIpsTable) FromSchema(schemaName string) *BannedIpsTable {
	return newBannedIpsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new BannedIpsTable with assigned table prefix
func (a BannedIpsTable) WithPrefix(prefix string) *BannedIpsTable {
	return newBannedIpsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new BannedIpsTable with assigned table suffix
func (a BannedIpsTable) WithSuffix(suffix string) *BannedIpsTable {
	return newBannedIpsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newBannedIpsTable(schemaName, tableName, alias string) *BannedIpsTable {
	return &BannedIpsTable{
		bannedIpsTable: newBannedIpsTableImpl(schemaName, tableName, alias),
		NEW:            newBannedIpsTableImpl("", "new", ""),
	}
}

func newBannedIpsTableImpl(schemaName, tableName, alias string) bannedIpsTable {
	var (
		IPAddressColumn = mysql.StringColumn("ip_address")
		NotesColumn     = mysql.StringColumn("notes")
		allColumns      = mysql.ColumnList{IPAddressColumn, NotesColumn}
		mutableColumns  = mysql.ColumnList{NotesColumn}
		defaultColumns  = mysql.ColumnList{}
	)

	return bannedIpsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		IPAddress: IPAddressColumn,
		Notes:     NotesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
