//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var NpcFactionEntries = newNpcFactionEntriesTable("eqgo", "npc_faction_entries", "")

type npcFactionEntriesTable struct {
	mysql.Table

	// Columns
	NpcFactionID mysql.ColumnInteger
	FactionID    mysql.ColumnInteger
	Value        mysql.ColumnInteger
	NpcValue     mysql.ColumnInteger
	Temp         mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type NpcFactionEntriesTable struct {
	npcFactionEntriesTable

	NEW npcFactionEntriesTable
}

// AS creates new NpcFactionEntriesTable with assigned alias
func (a NpcFactionEntriesTable) AS(alias string) *NpcFactionEntriesTable {
	return newNpcFactionEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new NpcFactionEntriesTable with assigned schema name
func (a NpcFactionEntriesTable) FromSchema(schemaName string) *NpcFactionEntriesTable {
	return newNpcFactionEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new NpcFactionEntriesTable with assigned table prefix
func (a NpcFactionEntriesTable) WithPrefix(prefix string) *NpcFactionEntriesTable {
	return newNpcFactionEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new NpcFactionEntriesTable with assigned table suffix
func (a NpcFactionEntriesTable) WithSuffix(suffix string) *NpcFactionEntriesTable {
	return newNpcFactionEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newNpcFactionEntriesTable(schemaName, tableName, alias string) *NpcFactionEntriesTable {
	return &NpcFactionEntriesTable{
		npcFactionEntriesTable: newNpcFactionEntriesTableImpl(schemaName, tableName, alias),
		NEW:                    newNpcFactionEntriesTableImpl("", "new", ""),
	}
}

func newNpcFactionEntriesTableImpl(schemaName, tableName, alias string) npcFactionEntriesTable {
	var (
		NpcFactionIDColumn = mysql.IntegerColumn("npc_faction_id")
		FactionIDColumn    = mysql.IntegerColumn("faction_id")
		ValueColumn        = mysql.IntegerColumn("value")
		NpcValueColumn     = mysql.IntegerColumn("npc_value")
		TempColumn         = mysql.IntegerColumn("temp")
		allColumns         = mysql.ColumnList{NpcFactionIDColumn, FactionIDColumn, ValueColumn, NpcValueColumn, TempColumn}
		mutableColumns     = mysql.ColumnList{ValueColumn, NpcValueColumn, TempColumn}
		defaultColumns     = mysql.ColumnList{NpcFactionIDColumn, FactionIDColumn, ValueColumn, NpcValueColumn, TempColumn}
	)

	return npcFactionEntriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		NpcFactionID: NpcFactionIDColumn,
		FactionID:    FactionIDColumn,
		Value:        ValueColumn,
		NpcValue:     NpcValueColumn,
		Temp:         TempColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
