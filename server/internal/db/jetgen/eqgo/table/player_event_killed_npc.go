//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PlayerEventKilledNpc = newPlayerEventKilledNpcTable("eqgo", "player_event_killed_npc", "")

type playerEventKilledNpcTable struct {
	mysql.Table

	// Columns
	ID                        mysql.ColumnInteger
	NpcID                     mysql.ColumnInteger
	NpcName                   mysql.ColumnString
	CombatTimeSeconds         mysql.ColumnInteger
	TotalDamagePerSecondTaken mysql.ColumnInteger
	TotalHealPerSecondTaken   mysql.ColumnInteger
	CreatedAt                 mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PlayerEventKilledNpcTable struct {
	playerEventKilledNpcTable

	NEW playerEventKilledNpcTable
}

// AS creates new PlayerEventKilledNpcTable with assigned alias
func (a PlayerEventKilledNpcTable) AS(alias string) *PlayerEventKilledNpcTable {
	return newPlayerEventKilledNpcTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlayerEventKilledNpcTable with assigned schema name
func (a PlayerEventKilledNpcTable) FromSchema(schemaName string) *PlayerEventKilledNpcTable {
	return newPlayerEventKilledNpcTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlayerEventKilledNpcTable with assigned table prefix
func (a PlayerEventKilledNpcTable) WithPrefix(prefix string) *PlayerEventKilledNpcTable {
	return newPlayerEventKilledNpcTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlayerEventKilledNpcTable with assigned table suffix
func (a PlayerEventKilledNpcTable) WithSuffix(suffix string) *PlayerEventKilledNpcTable {
	return newPlayerEventKilledNpcTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlayerEventKilledNpcTable(schemaName, tableName, alias string) *PlayerEventKilledNpcTable {
	return &PlayerEventKilledNpcTable{
		playerEventKilledNpcTable: newPlayerEventKilledNpcTableImpl(schemaName, tableName, alias),
		NEW:                       newPlayerEventKilledNpcTableImpl("", "new", ""),
	}
}

func newPlayerEventKilledNpcTableImpl(schemaName, tableName, alias string) playerEventKilledNpcTable {
	var (
		IDColumn                        = mysql.IntegerColumn("id")
		NpcIDColumn                     = mysql.IntegerColumn("npc_id")
		NpcNameColumn                   = mysql.StringColumn("npc_name")
		CombatTimeSecondsColumn         = mysql.IntegerColumn("combat_time_seconds")
		TotalDamagePerSecondTakenColumn = mysql.IntegerColumn("total_damage_per_second_taken")
		TotalHealPerSecondTakenColumn   = mysql.IntegerColumn("total_heal_per_second_taken")
		CreatedAtColumn                 = mysql.TimestampColumn("created_at")
		allColumns                      = mysql.ColumnList{IDColumn, NpcIDColumn, NpcNameColumn, CombatTimeSecondsColumn, TotalDamagePerSecondTakenColumn, TotalHealPerSecondTakenColumn, CreatedAtColumn}
		mutableColumns                  = mysql.ColumnList{NpcIDColumn, NpcNameColumn, CombatTimeSecondsColumn, TotalDamagePerSecondTakenColumn, TotalHealPerSecondTakenColumn, CreatedAtColumn}
		defaultColumns                  = mysql.ColumnList{NpcIDColumn, CombatTimeSecondsColumn, TotalDamagePerSecondTakenColumn, TotalHealPerSecondTakenColumn}
	)

	return playerEventKilledNpcTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                        IDColumn,
		NpcID:                     NpcIDColumn,
		NpcName:                   NpcNameColumn,
		CombatTimeSeconds:         CombatTimeSecondsColumn,
		TotalDamagePerSecondTaken: TotalDamagePerSecondTakenColumn,
		TotalHealPerSecondTaken:   TotalHealPerSecondTakenColumn,
		CreatedAt:                 CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
