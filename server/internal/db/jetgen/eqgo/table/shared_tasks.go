//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SharedTasks = newSharedTasksTable("eqgo", "shared_tasks", "")

type sharedTasksTable struct {
	mysql.Table

	// Columns
	ID             mysql.ColumnInteger
	TaskID         mysql.ColumnInteger
	AcceptedTime   mysql.ColumnTimestamp
	ExpireTime     mysql.ColumnTimestamp
	CompletionTime mysql.ColumnTimestamp
	IsLocked       mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SharedTasksTable struct {
	sharedTasksTable

	NEW sharedTasksTable
}

// AS creates new SharedTasksTable with assigned alias
func (a SharedTasksTable) AS(alias string) *SharedTasksTable {
	return newSharedTasksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SharedTasksTable with assigned schema name
func (a SharedTasksTable) FromSchema(schemaName string) *SharedTasksTable {
	return newSharedTasksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SharedTasksTable with assigned table prefix
func (a SharedTasksTable) WithPrefix(prefix string) *SharedTasksTable {
	return newSharedTasksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SharedTasksTable with assigned table suffix
func (a SharedTasksTable) WithSuffix(suffix string) *SharedTasksTable {
	return newSharedTasksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSharedTasksTable(schemaName, tableName, alias string) *SharedTasksTable {
	return &SharedTasksTable{
		sharedTasksTable: newSharedTasksTableImpl(schemaName, tableName, alias),
		NEW:              newSharedTasksTableImpl("", "new", ""),
	}
}

func newSharedTasksTableImpl(schemaName, tableName, alias string) sharedTasksTable {
	var (
		IDColumn             = mysql.IntegerColumn("id")
		TaskIDColumn         = mysql.IntegerColumn("task_id")
		AcceptedTimeColumn   = mysql.TimestampColumn("accepted_time")
		ExpireTimeColumn     = mysql.TimestampColumn("expire_time")
		CompletionTimeColumn = mysql.TimestampColumn("completion_time")
		IsLockedColumn       = mysql.BoolColumn("is_locked")
		allColumns           = mysql.ColumnList{IDColumn, TaskIDColumn, AcceptedTimeColumn, ExpireTimeColumn, CompletionTimeColumn, IsLockedColumn}
		mutableColumns       = mysql.ColumnList{TaskIDColumn, AcceptedTimeColumn, ExpireTimeColumn, CompletionTimeColumn, IsLockedColumn}
		defaultColumns       = mysql.ColumnList{}
	)

	return sharedTasksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		TaskID:         TaskIDColumn,
		AcceptedTime:   AcceptedTimeColumn,
		ExpireTime:     ExpireTimeColumn,
		CompletionTime: CompletionTimeColumn,
		IsLocked:       IsLockedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
