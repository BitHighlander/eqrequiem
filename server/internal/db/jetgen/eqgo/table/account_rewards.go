//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var AccountRewards = newAccountRewardsTable("eqgo", "account_rewards", "")

type accountRewardsTable struct {
	mysql.Table

	// Columns
	AccountID mysql.ColumnInteger
	RewardID  mysql.ColumnInteger
	Amount    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type AccountRewardsTable struct {
	accountRewardsTable

	NEW accountRewardsTable
}

// AS creates new AccountRewardsTable with assigned alias
func (a AccountRewardsTable) AS(alias string) *AccountRewardsTable {
	return newAccountRewardsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AccountRewardsTable with assigned schema name
func (a AccountRewardsTable) FromSchema(schemaName string) *AccountRewardsTable {
	return newAccountRewardsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AccountRewardsTable with assigned table prefix
func (a AccountRewardsTable) WithPrefix(prefix string) *AccountRewardsTable {
	return newAccountRewardsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AccountRewardsTable with assigned table suffix
func (a AccountRewardsTable) WithSuffix(suffix string) *AccountRewardsTable {
	return newAccountRewardsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAccountRewardsTable(schemaName, tableName, alias string) *AccountRewardsTable {
	return &AccountRewardsTable{
		accountRewardsTable: newAccountRewardsTableImpl(schemaName, tableName, alias),
		NEW:                 newAccountRewardsTableImpl("", "new", ""),
	}
}

func newAccountRewardsTableImpl(schemaName, tableName, alias string) accountRewardsTable {
	var (
		AccountIDColumn = mysql.IntegerColumn("account_id")
		RewardIDColumn  = mysql.IntegerColumn("reward_id")
		AmountColumn    = mysql.IntegerColumn("amount")
		allColumns      = mysql.ColumnList{AccountIDColumn, RewardIDColumn, AmountColumn}
		mutableColumns  = mysql.ColumnList{AccountIDColumn, RewardIDColumn, AmountColumn}
		defaultColumns  = mysql.ColumnList{}
	)

	return accountRewardsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AccountID: AccountIDColumn,
		RewardID:  RewardIDColumn,
		Amount:    AmountColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
