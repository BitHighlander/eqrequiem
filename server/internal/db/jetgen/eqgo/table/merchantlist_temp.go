//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MerchantlistTemp = newMerchantlistTempTable("eqgo", "merchantlist_temp", "")

type merchantlistTempTable struct {
	mysql.Table

	// Columns
	Npcid      mysql.ColumnInteger
	Slot       mysql.ColumnInteger
	ZoneID     mysql.ColumnInteger
	InstanceID mysql.ColumnInteger
	Itemid     mysql.ColumnInteger
	Charges    mysql.ColumnInteger
	CustomData mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type MerchantlistTempTable struct {
	merchantlistTempTable

	NEW merchantlistTempTable
}

// AS creates new MerchantlistTempTable with assigned alias
func (a MerchantlistTempTable) AS(alias string) *MerchantlistTempTable {
	return newMerchantlistTempTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MerchantlistTempTable with assigned schema name
func (a MerchantlistTempTable) FromSchema(schemaName string) *MerchantlistTempTable {
	return newMerchantlistTempTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MerchantlistTempTable with assigned table prefix
func (a MerchantlistTempTable) WithPrefix(prefix string) *MerchantlistTempTable {
	return newMerchantlistTempTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MerchantlistTempTable with assigned table suffix
func (a MerchantlistTempTable) WithSuffix(suffix string) *MerchantlistTempTable {
	return newMerchantlistTempTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMerchantlistTempTable(schemaName, tableName, alias string) *MerchantlistTempTable {
	return &MerchantlistTempTable{
		merchantlistTempTable: newMerchantlistTempTableImpl(schemaName, tableName, alias),
		NEW:                   newMerchantlistTempTableImpl("", "new", ""),
	}
}

func newMerchantlistTempTableImpl(schemaName, tableName, alias string) merchantlistTempTable {
	var (
		NpcidColumn      = mysql.IntegerColumn("npcid")
		SlotColumn       = mysql.IntegerColumn("slot")
		ZoneIDColumn     = mysql.IntegerColumn("zone_id")
		InstanceIDColumn = mysql.IntegerColumn("instance_id")
		ItemidColumn     = mysql.IntegerColumn("itemid")
		ChargesColumn    = mysql.IntegerColumn("charges")
		CustomDataColumn = mysql.StringColumn("custom_data")
		allColumns       = mysql.ColumnList{NpcidColumn, SlotColumn, ZoneIDColumn, InstanceIDColumn, ItemidColumn, ChargesColumn, CustomDataColumn}
		mutableColumns   = mysql.ColumnList{ItemidColumn, ChargesColumn, CustomDataColumn}
		defaultColumns   = mysql.ColumnList{NpcidColumn, SlotColumn, ZoneIDColumn, InstanceIDColumn, ItemidColumn, ChargesColumn}
	)

	return merchantlistTempTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Npcid:      NpcidColumn,
		Slot:       SlotColumn,
		ZoneID:     ZoneIDColumn,
		InstanceID: InstanceIDColumn,
		Itemid:     ItemidColumn,
		Charges:    ChargesColumn,
		CustomData: CustomDataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
