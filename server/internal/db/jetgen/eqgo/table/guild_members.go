//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GuildMembers = newGuildMembersTable("eqgo", "guild_members", "")

type guildMembersTable struct {
	mysql.Table

	// Columns
	CharID        mysql.ColumnInteger
	GuildID       mysql.ColumnInteger
	Rank          mysql.ColumnInteger
	TributeEnable mysql.ColumnInteger
	TotalTribute  mysql.ColumnInteger
	LastTribute   mysql.ColumnInteger
	Banker        mysql.ColumnInteger
	PublicNote    mysql.ColumnString
	Alt           mysql.ColumnInteger
	Online        mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GuildMembersTable struct {
	guildMembersTable

	NEW guildMembersTable
}

// AS creates new GuildMembersTable with assigned alias
func (a GuildMembersTable) AS(alias string) *GuildMembersTable {
	return newGuildMembersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GuildMembersTable with assigned schema name
func (a GuildMembersTable) FromSchema(schemaName string) *GuildMembersTable {
	return newGuildMembersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GuildMembersTable with assigned table prefix
func (a GuildMembersTable) WithPrefix(prefix string) *GuildMembersTable {
	return newGuildMembersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GuildMembersTable with assigned table suffix
func (a GuildMembersTable) WithSuffix(suffix string) *GuildMembersTable {
	return newGuildMembersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGuildMembersTable(schemaName, tableName, alias string) *GuildMembersTable {
	return &GuildMembersTable{
		guildMembersTable: newGuildMembersTableImpl(schemaName, tableName, alias),
		NEW:               newGuildMembersTableImpl("", "new", ""),
	}
}

func newGuildMembersTableImpl(schemaName, tableName, alias string) guildMembersTable {
	var (
		CharIDColumn        = mysql.IntegerColumn("char_id")
		GuildIDColumn       = mysql.IntegerColumn("guild_id")
		RankColumn          = mysql.IntegerColumn("rank")
		TributeEnableColumn = mysql.IntegerColumn("tribute_enable")
		TotalTributeColumn  = mysql.IntegerColumn("total_tribute")
		LastTributeColumn   = mysql.IntegerColumn("last_tribute")
		BankerColumn        = mysql.IntegerColumn("banker")
		PublicNoteColumn    = mysql.StringColumn("public_note")
		AltColumn           = mysql.IntegerColumn("alt")
		OnlineColumn        = mysql.IntegerColumn("online")
		allColumns          = mysql.ColumnList{CharIDColumn, GuildIDColumn, RankColumn, TributeEnableColumn, TotalTributeColumn, LastTributeColumn, BankerColumn, PublicNoteColumn, AltColumn, OnlineColumn}
		mutableColumns      = mysql.ColumnList{GuildIDColumn, RankColumn, TributeEnableColumn, TotalTributeColumn, LastTributeColumn, BankerColumn, PublicNoteColumn, AltColumn, OnlineColumn}
		defaultColumns      = mysql.ColumnList{CharIDColumn, GuildIDColumn, RankColumn, TributeEnableColumn, TotalTributeColumn, LastTributeColumn, BankerColumn, AltColumn, OnlineColumn}
	)

	return guildMembersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharID:        CharIDColumn,
		GuildID:       GuildIDColumn,
		Rank:          RankColumn,
		TributeEnable: TributeEnableColumn,
		TotalTribute:  TotalTributeColumn,
		LastTribute:   LastTributeColumn,
		Banker:        BankerColumn,
		PublicNote:    PublicNoteColumn,
		Alt:           AltColumn,
		Online:        OnlineColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
