//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var InventorySnapshots = newInventorySnapshotsTable("eqgo", "inventory_snapshots", "")

type inventorySnapshotsTable struct {
	mysql.Table

	// Columns
	TimeIndex         mysql.ColumnInteger
	Charid            mysql.ColumnInteger
	Slotid            mysql.ColumnInteger
	Itemid            mysql.ColumnInteger
	Charges           mysql.ColumnInteger
	Color             mysql.ColumnInteger
	Augslot1          mysql.ColumnInteger
	Augslot2          mysql.ColumnInteger
	Augslot3          mysql.ColumnInteger
	Augslot4          mysql.ColumnInteger
	Augslot5          mysql.ColumnInteger
	Augslot6          mysql.ColumnInteger
	Instnodrop        mysql.ColumnInteger
	CustomData        mysql.ColumnString
	Ornamenticon      mysql.ColumnInteger
	Ornamentidfile    mysql.ColumnInteger
	OrnamentHeroModel mysql.ColumnInteger
	GUID              mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type InventorySnapshotsTable struct {
	inventorySnapshotsTable

	NEW inventorySnapshotsTable
}

// AS creates new InventorySnapshotsTable with assigned alias
func (a InventorySnapshotsTable) AS(alias string) *InventorySnapshotsTable {
	return newInventorySnapshotsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InventorySnapshotsTable with assigned schema name
func (a InventorySnapshotsTable) FromSchema(schemaName string) *InventorySnapshotsTable {
	return newInventorySnapshotsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InventorySnapshotsTable with assigned table prefix
func (a InventorySnapshotsTable) WithPrefix(prefix string) *InventorySnapshotsTable {
	return newInventorySnapshotsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InventorySnapshotsTable with assigned table suffix
func (a InventorySnapshotsTable) WithSuffix(suffix string) *InventorySnapshotsTable {
	return newInventorySnapshotsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInventorySnapshotsTable(schemaName, tableName, alias string) *InventorySnapshotsTable {
	return &InventorySnapshotsTable{
		inventorySnapshotsTable: newInventorySnapshotsTableImpl(schemaName, tableName, alias),
		NEW:                     newInventorySnapshotsTableImpl("", "new", ""),
	}
}

func newInventorySnapshotsTableImpl(schemaName, tableName, alias string) inventorySnapshotsTable {
	var (
		TimeIndexColumn         = mysql.IntegerColumn("time_index")
		CharidColumn            = mysql.IntegerColumn("charid")
		SlotidColumn            = mysql.IntegerColumn("slotid")
		ItemidColumn            = mysql.IntegerColumn("itemid")
		ChargesColumn           = mysql.IntegerColumn("charges")
		ColorColumn             = mysql.IntegerColumn("color")
		Augslot1Column          = mysql.IntegerColumn("augslot1")
		Augslot2Column          = mysql.IntegerColumn("augslot2")
		Augslot3Column          = mysql.IntegerColumn("augslot3")
		Augslot4Column          = mysql.IntegerColumn("augslot4")
		Augslot5Column          = mysql.IntegerColumn("augslot5")
		Augslot6Column          = mysql.IntegerColumn("augslot6")
		InstnodropColumn        = mysql.IntegerColumn("instnodrop")
		CustomDataColumn        = mysql.StringColumn("custom_data")
		OrnamenticonColumn      = mysql.IntegerColumn("ornamenticon")
		OrnamentidfileColumn    = mysql.IntegerColumn("ornamentidfile")
		OrnamentHeroModelColumn = mysql.IntegerColumn("ornament_hero_model")
		GUIDColumn              = mysql.IntegerColumn("guid")
		allColumns              = mysql.ColumnList{TimeIndexColumn, CharidColumn, SlotidColumn, ItemidColumn, ChargesColumn, ColorColumn, Augslot1Column, Augslot2Column, Augslot3Column, Augslot4Column, Augslot5Column, Augslot6Column, InstnodropColumn, CustomDataColumn, OrnamenticonColumn, OrnamentidfileColumn, OrnamentHeroModelColumn, GUIDColumn}
		mutableColumns          = mysql.ColumnList{ItemidColumn, ChargesColumn, ColorColumn, Augslot1Column, Augslot2Column, Augslot3Column, Augslot4Column, Augslot5Column, Augslot6Column, InstnodropColumn, CustomDataColumn, OrnamenticonColumn, OrnamentidfileColumn, OrnamentHeroModelColumn, GUIDColumn}
		defaultColumns          = mysql.ColumnList{TimeIndexColumn, CharidColumn, SlotidColumn, ItemidColumn, ChargesColumn, ColorColumn, Augslot1Column, Augslot2Column, Augslot3Column, Augslot4Column, Augslot5Column, Augslot6Column, InstnodropColumn, OrnamenticonColumn, OrnamentidfileColumn, OrnamentHeroModelColumn, GUIDColumn}
	)

	return inventorySnapshotsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		TimeIndex:         TimeIndexColumn,
		Charid:            CharidColumn,
		Slotid:            SlotidColumn,
		Itemid:            ItemidColumn,
		Charges:           ChargesColumn,
		Color:             ColorColumn,
		Augslot1:          Augslot1Column,
		Augslot2:          Augslot2Column,
		Augslot3:          Augslot3Column,
		Augslot4:          Augslot4Column,
		Augslot5:          Augslot5Column,
		Augslot6:          Augslot6Column,
		Instnodrop:        InstnodropColumn,
		CustomData:        CustomDataColumn,
		Ornamenticon:      OrnamenticonColumn,
		Ornamentidfile:    OrnamentidfileColumn,
		OrnamentHeroModel: OrnamentHeroModelColumn,
		GUID:              GUIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
