//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterPeqzoneFlags = newCharacterPeqzoneFlagsTable("eqgo", "character_peqzone_flags", "")

type characterPeqzoneFlagsTable struct {
	mysql.Table

	// Columns
	ID     mysql.ColumnInteger
	ZoneID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterPeqzoneFlagsTable struct {
	characterPeqzoneFlagsTable

	NEW characterPeqzoneFlagsTable
}

// AS creates new CharacterPeqzoneFlagsTable with assigned alias
func (a CharacterPeqzoneFlagsTable) AS(alias string) *CharacterPeqzoneFlagsTable {
	return newCharacterPeqzoneFlagsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterPeqzoneFlagsTable with assigned schema name
func (a CharacterPeqzoneFlagsTable) FromSchema(schemaName string) *CharacterPeqzoneFlagsTable {
	return newCharacterPeqzoneFlagsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterPeqzoneFlagsTable with assigned table prefix
func (a CharacterPeqzoneFlagsTable) WithPrefix(prefix string) *CharacterPeqzoneFlagsTable {
	return newCharacterPeqzoneFlagsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterPeqzoneFlagsTable with assigned table suffix
func (a CharacterPeqzoneFlagsTable) WithSuffix(suffix string) *CharacterPeqzoneFlagsTable {
	return newCharacterPeqzoneFlagsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterPeqzoneFlagsTable(schemaName, tableName, alias string) *CharacterPeqzoneFlagsTable {
	return &CharacterPeqzoneFlagsTable{
		characterPeqzoneFlagsTable: newCharacterPeqzoneFlagsTableImpl(schemaName, tableName, alias),
		NEW:                        newCharacterPeqzoneFlagsTableImpl("", "new", ""),
	}
}

func newCharacterPeqzoneFlagsTableImpl(schemaName, tableName, alias string) characterPeqzoneFlagsTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		ZoneIDColumn   = mysql.IntegerColumn("zone_id")
		allColumns     = mysql.ColumnList{IDColumn, ZoneIDColumn}
		mutableColumns = mysql.ColumnList{}
		defaultColumns = mysql.ColumnList{IDColumn, ZoneIDColumn}
	)

	return characterPeqzoneFlagsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		ZoneID: ZoneIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
