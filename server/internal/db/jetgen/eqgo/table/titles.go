//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Titles = newTitlesTable("eqgo", "titles", "")

type titlesTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	SkillID       mysql.ColumnInteger
	MinSkillValue mysql.ColumnInteger
	MaxSkillValue mysql.ColumnInteger
	MinAaPoints   mysql.ColumnInteger
	MaxAaPoints   mysql.ColumnInteger
	Class         mysql.ColumnInteger
	Gender        mysql.ColumnBool // -1 = either, 0 = male, 1 = female
	CharID        mysql.ColumnInteger
	Status        mysql.ColumnInteger
	ItemID        mysql.ColumnInteger
	Prefix        mysql.ColumnString
	Suffix        mysql.ColumnString
	TitleSet      mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type TitlesTable struct {
	titlesTable

	NEW titlesTable
}

// AS creates new TitlesTable with assigned alias
func (a TitlesTable) AS(alias string) *TitlesTable {
	return newTitlesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TitlesTable with assigned schema name
func (a TitlesTable) FromSchema(schemaName string) *TitlesTable {
	return newTitlesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TitlesTable with assigned table prefix
func (a TitlesTable) WithPrefix(prefix string) *TitlesTable {
	return newTitlesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TitlesTable with assigned table suffix
func (a TitlesTable) WithSuffix(suffix string) *TitlesTable {
	return newTitlesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTitlesTable(schemaName, tableName, alias string) *TitlesTable {
	return &TitlesTable{
		titlesTable: newTitlesTableImpl(schemaName, tableName, alias),
		NEW:         newTitlesTableImpl("", "new", ""),
	}
}

func newTitlesTableImpl(schemaName, tableName, alias string) titlesTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		SkillIDColumn       = mysql.IntegerColumn("skill_id")
		MinSkillValueColumn = mysql.IntegerColumn("min_skill_value")
		MaxSkillValueColumn = mysql.IntegerColumn("max_skill_value")
		MinAaPointsColumn   = mysql.IntegerColumn("min_aa_points")
		MaxAaPointsColumn   = mysql.IntegerColumn("max_aa_points")
		ClassColumn         = mysql.IntegerColumn("class")
		GenderColumn        = mysql.BoolColumn("gender")
		CharIDColumn        = mysql.IntegerColumn("char_id")
		StatusColumn        = mysql.IntegerColumn("status")
		ItemIDColumn        = mysql.IntegerColumn("item_id")
		PrefixColumn        = mysql.StringColumn("prefix")
		SuffixColumn        = mysql.StringColumn("suffix")
		TitleSetColumn      = mysql.IntegerColumn("title_set")
		allColumns          = mysql.ColumnList{IDColumn, SkillIDColumn, MinSkillValueColumn, MaxSkillValueColumn, MinAaPointsColumn, MaxAaPointsColumn, ClassColumn, GenderColumn, CharIDColumn, StatusColumn, ItemIDColumn, PrefixColumn, SuffixColumn, TitleSetColumn}
		mutableColumns      = mysql.ColumnList{SkillIDColumn, MinSkillValueColumn, MaxSkillValueColumn, MinAaPointsColumn, MaxAaPointsColumn, ClassColumn, GenderColumn, CharIDColumn, StatusColumn, ItemIDColumn, PrefixColumn, SuffixColumn, TitleSetColumn}
		defaultColumns      = mysql.ColumnList{SkillIDColumn, MinSkillValueColumn, MaxSkillValueColumn, MinAaPointsColumn, MaxAaPointsColumn, ClassColumn, GenderColumn, CharIDColumn, StatusColumn, ItemIDColumn, PrefixColumn, SuffixColumn, TitleSetColumn}
	)

	return titlesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		SkillID:       SkillIDColumn,
		MinSkillValue: MinSkillValueColumn,
		MaxSkillValue: MaxSkillValueColumn,
		MinAaPoints:   MinAaPointsColumn,
		MaxAaPoints:   MaxAaPointsColumn,
		Class:         ClassColumn,
		Gender:        GenderColumn,
		CharID:        CharIDColumn,
		Status:        StatusColumn,
		ItemID:        ItemIDColumn,
		Prefix:        PrefixColumn,
		Suffix:        SuffixColumn,
		TitleSet:      TitleSetColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
