//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TraderAudit = newTraderAuditTable("eqgo", "trader_audit", "")

type traderAuditTable struct {
	mysql.Table

	// Columns
	Time      mysql.ColumnTimestamp
	Seller    mysql.ColumnString
	Buyer     mysql.ColumnString
	Itemname  mysql.ColumnString
	Quantity  mysql.ColumnInteger
	Totalcost mysql.ColumnInteger
	Trantype  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type TraderAuditTable struct {
	traderAuditTable

	NEW traderAuditTable
}

// AS creates new TraderAuditTable with assigned alias
func (a TraderAuditTable) AS(alias string) *TraderAuditTable {
	return newTraderAuditTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TraderAuditTable with assigned schema name
func (a TraderAuditTable) FromSchema(schemaName string) *TraderAuditTable {
	return newTraderAuditTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TraderAuditTable with assigned table prefix
func (a TraderAuditTable) WithPrefix(prefix string) *TraderAuditTable {
	return newTraderAuditTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TraderAuditTable with assigned table suffix
func (a TraderAuditTable) WithSuffix(suffix string) *TraderAuditTable {
	return newTraderAuditTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTraderAuditTable(schemaName, tableName, alias string) *TraderAuditTable {
	return &TraderAuditTable{
		traderAuditTable: newTraderAuditTableImpl(schemaName, tableName, alias),
		NEW:              newTraderAuditTableImpl("", "new", ""),
	}
}

func newTraderAuditTableImpl(schemaName, tableName, alias string) traderAuditTable {
	var (
		TimeColumn      = mysql.TimestampColumn("time")
		SellerColumn    = mysql.StringColumn("seller")
		BuyerColumn     = mysql.StringColumn("buyer")
		ItemnameColumn  = mysql.StringColumn("itemname")
		QuantityColumn  = mysql.IntegerColumn("quantity")
		TotalcostColumn = mysql.IntegerColumn("totalcost")
		TrantypeColumn  = mysql.IntegerColumn("trantype")
		allColumns      = mysql.ColumnList{TimeColumn, SellerColumn, BuyerColumn, ItemnameColumn, QuantityColumn, TotalcostColumn, TrantypeColumn}
		mutableColumns  = mysql.ColumnList{TimeColumn, SellerColumn, BuyerColumn, ItemnameColumn, QuantityColumn, TotalcostColumn, TrantypeColumn}
		defaultColumns  = mysql.ColumnList{TimeColumn, SellerColumn, BuyerColumn, ItemnameColumn, QuantityColumn, TotalcostColumn, TrantypeColumn}
	)

	return traderAuditTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Time:      TimeColumn,
		Seller:    SellerColumn,
		Buyer:     BuyerColumn,
		Itemname:  ItemnameColumn,
		Quantity:  QuantityColumn,
		Totalcost: TotalcostColumn,
		Trantype:  TrantypeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
