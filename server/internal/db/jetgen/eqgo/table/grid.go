//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Grid = newGridTable("eqgo", "grid", "")

type gridTable struct {
	mysql.Table

	// Columns
	ID     mysql.ColumnInteger
	Zoneid mysql.ColumnInteger
	Type   mysql.ColumnInteger
	Type2  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GridTable struct {
	gridTable

	NEW gridTable
}

// AS creates new GridTable with assigned alias
func (a GridTable) AS(alias string) *GridTable {
	return newGridTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GridTable with assigned schema name
func (a GridTable) FromSchema(schemaName string) *GridTable {
	return newGridTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GridTable with assigned table prefix
func (a GridTable) WithPrefix(prefix string) *GridTable {
	return newGridTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GridTable with assigned table suffix
func (a GridTable) WithSuffix(suffix string) *GridTable {
	return newGridTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGridTable(schemaName, tableName, alias string) *GridTable {
	return &GridTable{
		gridTable: newGridTableImpl(schemaName, tableName, alias),
		NEW:       newGridTableImpl("", "new", ""),
	}
}

func newGridTableImpl(schemaName, tableName, alias string) gridTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		ZoneidColumn   = mysql.IntegerColumn("zoneid")
		TypeColumn     = mysql.IntegerColumn("type")
		Type2Column    = mysql.IntegerColumn("type2")
		allColumns     = mysql.ColumnList{IDColumn, ZoneidColumn, TypeColumn, Type2Column}
		mutableColumns = mysql.ColumnList{TypeColumn, Type2Column}
		defaultColumns = mysql.ColumnList{IDColumn, ZoneidColumn, TypeColumn, Type2Column}
	)

	return gridTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		Zoneid: ZoneidColumn,
		Type:   TypeColumn,
		Type2:  Type2Column,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
