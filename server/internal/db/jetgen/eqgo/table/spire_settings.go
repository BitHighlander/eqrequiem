//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SpireSettings = newSpireSettingsTable("eqgo", "spire_settings", "")

type spireSettingsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	Setting   mysql.ColumnString
	Value     mysql.ColumnString
	CreatedAt mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SpireSettingsTable struct {
	spireSettingsTable

	NEW spireSettingsTable
}

// AS creates new SpireSettingsTable with assigned alias
func (a SpireSettingsTable) AS(alias string) *SpireSettingsTable {
	return newSpireSettingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SpireSettingsTable with assigned schema name
func (a SpireSettingsTable) FromSchema(schemaName string) *SpireSettingsTable {
	return newSpireSettingsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SpireSettingsTable with assigned table prefix
func (a SpireSettingsTable) WithPrefix(prefix string) *SpireSettingsTable {
	return newSpireSettingsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SpireSettingsTable with assigned table suffix
func (a SpireSettingsTable) WithSuffix(suffix string) *SpireSettingsTable {
	return newSpireSettingsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSpireSettingsTable(schemaName, tableName, alias string) *SpireSettingsTable {
	return &SpireSettingsTable{
		spireSettingsTable: newSpireSettingsTableImpl(schemaName, tableName, alias),
		NEW:                newSpireSettingsTableImpl("", "new", ""),
	}
}

func newSpireSettingsTableImpl(schemaName, tableName, alias string) spireSettingsTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		SettingColumn   = mysql.StringColumn("setting")
		ValueColumn     = mysql.StringColumn("value")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		allColumns      = mysql.ColumnList{IDColumn, SettingColumn, ValueColumn, CreatedAtColumn}
		mutableColumns  = mysql.ColumnList{SettingColumn, ValueColumn, CreatedAtColumn}
		defaultColumns  = mysql.ColumnList{}
	)

	return spireSettingsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Setting:   SettingColumn,
		Value:     ValueColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
