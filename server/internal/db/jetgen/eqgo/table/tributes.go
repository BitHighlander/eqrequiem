//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Tributes = newTributesTable("eqgo", "tributes", "")

type tributesTable struct {
	mysql.Table

	// Columns
	ID      mysql.ColumnInteger
	Unknown mysql.ColumnInteger
	Name    mysql.ColumnString
	Descr   mysql.ColumnString
	Isguild mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type TributesTable struct {
	tributesTable

	NEW tributesTable
}

// AS creates new TributesTable with assigned alias
func (a TributesTable) AS(alias string) *TributesTable {
	return newTributesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TributesTable with assigned schema name
func (a TributesTable) FromSchema(schemaName string) *TributesTable {
	return newTributesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TributesTable with assigned table prefix
func (a TributesTable) WithPrefix(prefix string) *TributesTable {
	return newTributesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TributesTable with assigned table suffix
func (a TributesTable) WithSuffix(suffix string) *TributesTable {
	return newTributesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTributesTable(schemaName, tableName, alias string) *TributesTable {
	return &TributesTable{
		tributesTable: newTributesTableImpl(schemaName, tableName, alias),
		NEW:           newTributesTableImpl("", "new", ""),
	}
}

func newTributesTableImpl(schemaName, tableName, alias string) tributesTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		UnknownColumn  = mysql.IntegerColumn("unknown")
		NameColumn     = mysql.StringColumn("name")
		DescrColumn    = mysql.StringColumn("descr")
		IsguildColumn  = mysql.IntegerColumn("isguild")
		allColumns     = mysql.ColumnList{IDColumn, UnknownColumn, NameColumn, DescrColumn, IsguildColumn}
		mutableColumns = mysql.ColumnList{UnknownColumn, NameColumn, DescrColumn}
		defaultColumns = mysql.ColumnList{IDColumn, UnknownColumn, NameColumn, IsguildColumn}
	)

	return tributesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		Unknown: UnknownColumn,
		Name:    NameColumn,
		Descr:   DescrColumn,
		Isguild: IsguildColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
