//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PlayerEventTradeEntries = newPlayerEventTradeEntriesTable("eqgo", "player_event_trade_entries", "")

type playerEventTradeEntriesTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnInteger
	PlayerEventTradeID mysql.ColumnInteger
	CharID             mysql.ColumnInteger
	Slot               mysql.ColumnInteger
	ItemID             mysql.ColumnInteger
	Charges            mysql.ColumnInteger
	Augment1ID         mysql.ColumnInteger
	Augment2ID         mysql.ColumnInteger
	Augment3ID         mysql.ColumnInteger
	Augment4ID         mysql.ColumnInteger
	Augment5ID         mysql.ColumnInteger
	Augment6ID         mysql.ColumnInteger
	InBag              mysql.ColumnInteger
	CreatedAt          mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PlayerEventTradeEntriesTable struct {
	playerEventTradeEntriesTable

	NEW playerEventTradeEntriesTable
}

// AS creates new PlayerEventTradeEntriesTable with assigned alias
func (a PlayerEventTradeEntriesTable) AS(alias string) *PlayerEventTradeEntriesTable {
	return newPlayerEventTradeEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlayerEventTradeEntriesTable with assigned schema name
func (a PlayerEventTradeEntriesTable) FromSchema(schemaName string) *PlayerEventTradeEntriesTable {
	return newPlayerEventTradeEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlayerEventTradeEntriesTable with assigned table prefix
func (a PlayerEventTradeEntriesTable) WithPrefix(prefix string) *PlayerEventTradeEntriesTable {
	return newPlayerEventTradeEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlayerEventTradeEntriesTable with assigned table suffix
func (a PlayerEventTradeEntriesTable) WithSuffix(suffix string) *PlayerEventTradeEntriesTable {
	return newPlayerEventTradeEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlayerEventTradeEntriesTable(schemaName, tableName, alias string) *PlayerEventTradeEntriesTable {
	return &PlayerEventTradeEntriesTable{
		playerEventTradeEntriesTable: newPlayerEventTradeEntriesTableImpl(schemaName, tableName, alias),
		NEW:                          newPlayerEventTradeEntriesTableImpl("", "new", ""),
	}
}

func newPlayerEventTradeEntriesTableImpl(schemaName, tableName, alias string) playerEventTradeEntriesTable {
	var (
		IDColumn                 = mysql.IntegerColumn("id")
		PlayerEventTradeIDColumn = mysql.IntegerColumn("player_event_trade_id")
		CharIDColumn             = mysql.IntegerColumn("char_id")
		SlotColumn               = mysql.IntegerColumn("slot")
		ItemIDColumn             = mysql.IntegerColumn("item_id")
		ChargesColumn            = mysql.IntegerColumn("charges")
		Augment1IDColumn         = mysql.IntegerColumn("augment_1_id")
		Augment2IDColumn         = mysql.IntegerColumn("augment_2_id")
		Augment3IDColumn         = mysql.IntegerColumn("augment_3_id")
		Augment4IDColumn         = mysql.IntegerColumn("augment_4_id")
		Augment5IDColumn         = mysql.IntegerColumn("augment_5_id")
		Augment6IDColumn         = mysql.IntegerColumn("augment_6_id")
		InBagColumn              = mysql.IntegerColumn("in_bag")
		CreatedAtColumn          = mysql.TimestampColumn("created_at")
		allColumns               = mysql.ColumnList{IDColumn, PlayerEventTradeIDColumn, CharIDColumn, SlotColumn, ItemIDColumn, ChargesColumn, Augment1IDColumn, Augment2IDColumn, Augment3IDColumn, Augment4IDColumn, Augment5IDColumn, Augment6IDColumn, InBagColumn, CreatedAtColumn}
		mutableColumns           = mysql.ColumnList{PlayerEventTradeIDColumn, CharIDColumn, SlotColumn, ItemIDColumn, ChargesColumn, Augment1IDColumn, Augment2IDColumn, Augment3IDColumn, Augment4IDColumn, Augment5IDColumn, Augment6IDColumn, InBagColumn, CreatedAtColumn}
		defaultColumns           = mysql.ColumnList{PlayerEventTradeIDColumn, CharIDColumn, SlotColumn, ItemIDColumn, ChargesColumn, Augment1IDColumn, Augment2IDColumn, Augment3IDColumn, Augment4IDColumn, Augment5IDColumn, Augment6IDColumn, InBagColumn}
	)

	return playerEventTradeEntriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		PlayerEventTradeID: PlayerEventTradeIDColumn,
		CharID:             CharIDColumn,
		Slot:               SlotColumn,
		ItemID:             ItemIDColumn,
		Charges:            ChargesColumn,
		Augment1ID:         Augment1IDColumn,
		Augment2ID:         Augment2IDColumn,
		Augment3ID:         Augment3IDColumn,
		Augment4ID:         Augment4IDColumn,
		Augment5ID:         Augment5IDColumn,
		Augment6ID:         Augment6IDColumn,
		InBag:              InBagColumn,
		CreatedAt:          CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
