//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Launcher = newLauncherTable("eqgo", "launcher", "")

type launcherTable struct {
	mysql.Table

	// Columns
	Name     mysql.ColumnString
	Dynamics mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type LauncherTable struct {
	launcherTable

	NEW launcherTable
}

// AS creates new LauncherTable with assigned alias
func (a LauncherTable) AS(alias string) *LauncherTable {
	return newLauncherTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LauncherTable with assigned schema name
func (a LauncherTable) FromSchema(schemaName string) *LauncherTable {
	return newLauncherTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LauncherTable with assigned table prefix
func (a LauncherTable) WithPrefix(prefix string) *LauncherTable {
	return newLauncherTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LauncherTable with assigned table suffix
func (a LauncherTable) WithSuffix(suffix string) *LauncherTable {
	return newLauncherTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLauncherTable(schemaName, tableName, alias string) *LauncherTable {
	return &LauncherTable{
		launcherTable: newLauncherTableImpl(schemaName, tableName, alias),
		NEW:           newLauncherTableImpl("", "new", ""),
	}
}

func newLauncherTableImpl(schemaName, tableName, alias string) launcherTable {
	var (
		NameColumn     = mysql.StringColumn("name")
		DynamicsColumn = mysql.IntegerColumn("dynamics")
		allColumns     = mysql.ColumnList{NameColumn, DynamicsColumn}
		mutableColumns = mysql.ColumnList{DynamicsColumn}
		defaultColumns = mysql.ColumnList{NameColumn, DynamicsColumn}
	)

	return launcherTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Name:     NameColumn,
		Dynamics: DynamicsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
