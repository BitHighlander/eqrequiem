//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var AdventureTemplateEntryFlavor = newAdventureTemplateEntryFlavorTable("eqgo", "adventure_template_entry_flavor", "")

type adventureTemplateEntryFlavorTable struct {
	mysql.Table

	// Columns
	ID   mysql.ColumnInteger
	Text mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type AdventureTemplateEntryFlavorTable struct {
	adventureTemplateEntryFlavorTable

	NEW adventureTemplateEntryFlavorTable
}

// AS creates new AdventureTemplateEntryFlavorTable with assigned alias
func (a AdventureTemplateEntryFlavorTable) AS(alias string) *AdventureTemplateEntryFlavorTable {
	return newAdventureTemplateEntryFlavorTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AdventureTemplateEntryFlavorTable with assigned schema name
func (a AdventureTemplateEntryFlavorTable) FromSchema(schemaName string) *AdventureTemplateEntryFlavorTable {
	return newAdventureTemplateEntryFlavorTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AdventureTemplateEntryFlavorTable with assigned table prefix
func (a AdventureTemplateEntryFlavorTable) WithPrefix(prefix string) *AdventureTemplateEntryFlavorTable {
	return newAdventureTemplateEntryFlavorTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AdventureTemplateEntryFlavorTable with assigned table suffix
func (a AdventureTemplateEntryFlavorTable) WithSuffix(suffix string) *AdventureTemplateEntryFlavorTable {
	return newAdventureTemplateEntryFlavorTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAdventureTemplateEntryFlavorTable(schemaName, tableName, alias string) *AdventureTemplateEntryFlavorTable {
	return &AdventureTemplateEntryFlavorTable{
		adventureTemplateEntryFlavorTable: newAdventureTemplateEntryFlavorTableImpl(schemaName, tableName, alias),
		NEW:                               newAdventureTemplateEntryFlavorTableImpl("", "new", ""),
	}
}

func newAdventureTemplateEntryFlavorTableImpl(schemaName, tableName, alias string) adventureTemplateEntryFlavorTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		TextColumn     = mysql.StringColumn("text")
		allColumns     = mysql.ColumnList{IDColumn, TextColumn}
		mutableColumns = mysql.ColumnList{TextColumn}
		defaultColumns = mysql.ColumnList{}
	)

	return adventureTemplateEntryFlavorTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:   IDColumn,
		Text: TextColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
