//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TaskActivities = newTaskActivitiesTable("eqgo", "task_activities", "")

type taskActivitiesTable struct {
	mysql.Table

	// Columns
	Taskid              mysql.ColumnInteger
	Activityid          mysql.ColumnInteger
	ReqActivityID       mysql.ColumnInteger
	Step                mysql.ColumnInteger
	Activitytype        mysql.ColumnInteger
	TargetName          mysql.ColumnString
	Goalmethod          mysql.ColumnInteger
	Goalcount           mysql.ColumnInteger
	DescriptionOverride mysql.ColumnString
	NpcMatchList        mysql.ColumnString
	ItemIDList          mysql.ColumnString
	ItemList            mysql.ColumnString
	DzSwitchID          mysql.ColumnInteger
	MinX                mysql.ColumnFloat
	MinY                mysql.ColumnFloat
	MinZ                mysql.ColumnFloat
	MaxX                mysql.ColumnFloat
	MaxY                mysql.ColumnFloat
	MaxZ                mysql.ColumnFloat
	SkillList           mysql.ColumnString
	SpellList           mysql.ColumnString
	Zones               mysql.ColumnString
	ZoneVersion         mysql.ColumnInteger
	Optional            mysql.ColumnBool
	ListGroup           mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type TaskActivitiesTable struct {
	taskActivitiesTable

	NEW taskActivitiesTable
}

// AS creates new TaskActivitiesTable with assigned alias
func (a TaskActivitiesTable) AS(alias string) *TaskActivitiesTable {
	return newTaskActivitiesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TaskActivitiesTable with assigned schema name
func (a TaskActivitiesTable) FromSchema(schemaName string) *TaskActivitiesTable {
	return newTaskActivitiesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TaskActivitiesTable with assigned table prefix
func (a TaskActivitiesTable) WithPrefix(prefix string) *TaskActivitiesTable {
	return newTaskActivitiesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TaskActivitiesTable with assigned table suffix
func (a TaskActivitiesTable) WithSuffix(suffix string) *TaskActivitiesTable {
	return newTaskActivitiesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTaskActivitiesTable(schemaName, tableName, alias string) *TaskActivitiesTable {
	return &TaskActivitiesTable{
		taskActivitiesTable: newTaskActivitiesTableImpl(schemaName, tableName, alias),
		NEW:                 newTaskActivitiesTableImpl("", "new", ""),
	}
}

func newTaskActivitiesTableImpl(schemaName, tableName, alias string) taskActivitiesTable {
	var (
		TaskidColumn              = mysql.IntegerColumn("taskid")
		ActivityidColumn          = mysql.IntegerColumn("activityid")
		ReqActivityIDColumn       = mysql.IntegerColumn("req_activity_id")
		StepColumn                = mysql.IntegerColumn("step")
		ActivitytypeColumn        = mysql.IntegerColumn("activitytype")
		TargetNameColumn          = mysql.StringColumn("target_name")
		GoalmethodColumn          = mysql.IntegerColumn("goalmethod")
		GoalcountColumn           = mysql.IntegerColumn("goalcount")
		DescriptionOverrideColumn = mysql.StringColumn("description_override")
		NpcMatchListColumn        = mysql.StringColumn("npc_match_list")
		ItemIDListColumn          = mysql.StringColumn("item_id_list")
		ItemListColumn            = mysql.StringColumn("item_list")
		DzSwitchIDColumn          = mysql.IntegerColumn("dz_switch_id")
		MinXColumn                = mysql.FloatColumn("min_x")
		MinYColumn                = mysql.FloatColumn("min_y")
		MinZColumn                = mysql.FloatColumn("min_z")
		MaxXColumn                = mysql.FloatColumn("max_x")
		MaxYColumn                = mysql.FloatColumn("max_y")
		MaxZColumn                = mysql.FloatColumn("max_z")
		SkillListColumn           = mysql.StringColumn("skill_list")
		SpellListColumn           = mysql.StringColumn("spell_list")
		ZonesColumn               = mysql.StringColumn("zones")
		ZoneVersionColumn         = mysql.IntegerColumn("zone_version")
		OptionalColumn            = mysql.BoolColumn("optional")
		ListGroupColumn           = mysql.IntegerColumn("list_group")
		allColumns                = mysql.ColumnList{TaskidColumn, ActivityidColumn, ReqActivityIDColumn, StepColumn, ActivitytypeColumn, TargetNameColumn, GoalmethodColumn, GoalcountColumn, DescriptionOverrideColumn, NpcMatchListColumn, ItemIDListColumn, ItemListColumn, DzSwitchIDColumn, MinXColumn, MinYColumn, MinZColumn, MaxXColumn, MaxYColumn, MaxZColumn, SkillListColumn, SpellListColumn, ZonesColumn, ZoneVersionColumn, OptionalColumn, ListGroupColumn}
		mutableColumns            = mysql.ColumnList{ReqActivityIDColumn, StepColumn, ActivitytypeColumn, TargetNameColumn, GoalmethodColumn, GoalcountColumn, DescriptionOverrideColumn, NpcMatchListColumn, ItemIDListColumn, ItemListColumn, DzSwitchIDColumn, MinXColumn, MinYColumn, MinZColumn, MaxXColumn, MaxYColumn, MaxZColumn, SkillListColumn, SpellListColumn, ZonesColumn, ZoneVersionColumn, OptionalColumn, ListGroupColumn}
		defaultColumns            = mysql.ColumnList{TaskidColumn, ActivityidColumn, ReqActivityIDColumn, StepColumn, ActivitytypeColumn, TargetNameColumn, GoalmethodColumn, GoalcountColumn, DescriptionOverrideColumn, ItemListColumn, DzSwitchIDColumn, MinXColumn, MinYColumn, MinZColumn, MaxXColumn, MaxYColumn, MaxZColumn, SkillListColumn, SpellListColumn, ZonesColumn, ZoneVersionColumn, OptionalColumn, ListGroupColumn}
	)

	return taskActivitiesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Taskid:              TaskidColumn,
		Activityid:          ActivityidColumn,
		ReqActivityID:       ReqActivityIDColumn,
		Step:                StepColumn,
		Activitytype:        ActivitytypeColumn,
		TargetName:          TargetNameColumn,
		Goalmethod:          GoalmethodColumn,
		Goalcount:           GoalcountColumn,
		DescriptionOverride: DescriptionOverrideColumn,
		NpcMatchList:        NpcMatchListColumn,
		ItemIDList:          ItemIDListColumn,
		ItemList:            ItemListColumn,
		DzSwitchID:          DzSwitchIDColumn,
		MinX:                MinXColumn,
		MinY:                MinYColumn,
		MinZ:                MinZColumn,
		MaxX:                MaxXColumn,
		MaxY:                MaxYColumn,
		MaxZ:                MaxZColumn,
		SkillList:           SkillListColumn,
		SpellList:           SpellListColumn,
		Zones:               ZonesColumn,
		ZoneVersion:         ZoneVersionColumn,
		Optional:            OptionalColumn,
		ListGroup:           ListGroupColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
