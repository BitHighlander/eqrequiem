//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LdonTrapEntries = newLdonTrapEntriesTable("eqgo", "ldon_trap_entries", "")

type ldonTrapEntriesTable struct {
	mysql.Table

	// Columns
	ID     mysql.ColumnInteger
	TrapID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type LdonTrapEntriesTable struct {
	ldonTrapEntriesTable

	NEW ldonTrapEntriesTable
}

// AS creates new LdonTrapEntriesTable with assigned alias
func (a LdonTrapEntriesTable) AS(alias string) *LdonTrapEntriesTable {
	return newLdonTrapEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LdonTrapEntriesTable with assigned schema name
func (a LdonTrapEntriesTable) FromSchema(schemaName string) *LdonTrapEntriesTable {
	return newLdonTrapEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LdonTrapEntriesTable with assigned table prefix
func (a LdonTrapEntriesTable) WithPrefix(prefix string) *LdonTrapEntriesTable {
	return newLdonTrapEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LdonTrapEntriesTable with assigned table suffix
func (a LdonTrapEntriesTable) WithSuffix(suffix string) *LdonTrapEntriesTable {
	return newLdonTrapEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLdonTrapEntriesTable(schemaName, tableName, alias string) *LdonTrapEntriesTable {
	return &LdonTrapEntriesTable{
		ldonTrapEntriesTable: newLdonTrapEntriesTableImpl(schemaName, tableName, alias),
		NEW:                  newLdonTrapEntriesTableImpl("", "new", ""),
	}
}

func newLdonTrapEntriesTableImpl(schemaName, tableName, alias string) ldonTrapEntriesTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		TrapIDColumn   = mysql.IntegerColumn("trap_id")
		allColumns     = mysql.ColumnList{IDColumn, TrapIDColumn}
		mutableColumns = mysql.ColumnList{}
		defaultColumns = mysql.ColumnList{TrapIDColumn}
	)

	return ldonTrapEntriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:     IDColumn,
		TrapID: TrapIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
