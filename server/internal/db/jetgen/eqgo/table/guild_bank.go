//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GuildBank = newGuildBankTable("eqgo", "guild_bank", "")

type guildBankTable struct {
	mysql.Table

	// Columns
	ID             mysql.ColumnInteger
	GuildID        mysql.ColumnInteger
	Area           mysql.ColumnInteger
	Slot           mysql.ColumnInteger
	ItemID         mysql.ColumnInteger
	AugmentOneID   mysql.ColumnInteger
	AugmentTwoID   mysql.ColumnInteger
	AugmentThreeID mysql.ColumnInteger
	AugmentFourID  mysql.ColumnInteger
	AugmentFiveID  mysql.ColumnInteger
	AugmentSixID   mysql.ColumnInteger
	Quantity       mysql.ColumnInteger
	Donator        mysql.ColumnString
	Permissions    mysql.ColumnInteger
	WhoFor         mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GuildBankTable struct {
	guildBankTable

	NEW guildBankTable
}

// AS creates new GuildBankTable with assigned alias
func (a GuildBankTable) AS(alias string) *GuildBankTable {
	return newGuildBankTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GuildBankTable with assigned schema name
func (a GuildBankTable) FromSchema(schemaName string) *GuildBankTable {
	return newGuildBankTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GuildBankTable with assigned table prefix
func (a GuildBankTable) WithPrefix(prefix string) *GuildBankTable {
	return newGuildBankTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GuildBankTable with assigned table suffix
func (a GuildBankTable) WithSuffix(suffix string) *GuildBankTable {
	return newGuildBankTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGuildBankTable(schemaName, tableName, alias string) *GuildBankTable {
	return &GuildBankTable{
		guildBankTable: newGuildBankTableImpl(schemaName, tableName, alias),
		NEW:            newGuildBankTableImpl("", "new", ""),
	}
}

func newGuildBankTableImpl(schemaName, tableName, alias string) guildBankTable {
	var (
		IDColumn             = mysql.IntegerColumn("id")
		GuildIDColumn        = mysql.IntegerColumn("guild_id")
		AreaColumn           = mysql.IntegerColumn("area")
		SlotColumn           = mysql.IntegerColumn("slot")
		ItemIDColumn         = mysql.IntegerColumn("item_id")
		AugmentOneIDColumn   = mysql.IntegerColumn("augment_one_id")
		AugmentTwoIDColumn   = mysql.IntegerColumn("augment_two_id")
		AugmentThreeIDColumn = mysql.IntegerColumn("augment_three_id")
		AugmentFourIDColumn  = mysql.IntegerColumn("augment_four_id")
		AugmentFiveIDColumn  = mysql.IntegerColumn("augment_five_id")
		AugmentSixIDColumn   = mysql.IntegerColumn("augment_six_id")
		QuantityColumn       = mysql.IntegerColumn("quantity")
		DonatorColumn        = mysql.StringColumn("donator")
		PermissionsColumn    = mysql.IntegerColumn("permissions")
		WhoForColumn         = mysql.StringColumn("who_for")
		allColumns           = mysql.ColumnList{IDColumn, GuildIDColumn, AreaColumn, SlotColumn, ItemIDColumn, AugmentOneIDColumn, AugmentTwoIDColumn, AugmentThreeIDColumn, AugmentFourIDColumn, AugmentFiveIDColumn, AugmentSixIDColumn, QuantityColumn, DonatorColumn, PermissionsColumn, WhoForColumn}
		mutableColumns       = mysql.ColumnList{GuildIDColumn, AreaColumn, SlotColumn, ItemIDColumn, AugmentOneIDColumn, AugmentTwoIDColumn, AugmentThreeIDColumn, AugmentFourIDColumn, AugmentFiveIDColumn, AugmentSixIDColumn, QuantityColumn, DonatorColumn, PermissionsColumn, WhoForColumn}
		defaultColumns       = mysql.ColumnList{GuildIDColumn, AreaColumn, SlotColumn, ItemIDColumn, AugmentOneIDColumn, AugmentTwoIDColumn, AugmentThreeIDColumn, AugmentFourIDColumn, AugmentFiveIDColumn, AugmentSixIDColumn, QuantityColumn, PermissionsColumn}
	)

	return guildBankTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		GuildID:        GuildIDColumn,
		Area:           AreaColumn,
		Slot:           SlotColumn,
		ItemID:         ItemIDColumn,
		AugmentOneID:   AugmentOneIDColumn,
		AugmentTwoID:   AugmentTwoIDColumn,
		AugmentThreeID: AugmentThreeIDColumn,
		AugmentFourID:  AugmentFourIDColumn,
		AugmentFiveID:  AugmentFiveIDColumn,
		AugmentSixID:   AugmentSixIDColumn,
		Quantity:       QuantityColumn,
		Donator:        DonatorColumn,
		Permissions:    PermissionsColumn,
		WhoFor:         WhoForColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
