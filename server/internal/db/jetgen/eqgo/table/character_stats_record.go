//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterStatsRecord = newCharacterStatsRecordTable("eqgo", "character_stats_record", "")

type characterStatsRecordTable struct {
	mysql.Table

	// Columns
	CharacterID            mysql.ColumnInteger
	Name                   mysql.ColumnString
	Status                 mysql.ColumnInteger
	Level                  mysql.ColumnInteger
	Class                  mysql.ColumnInteger
	Race                   mysql.ColumnInteger
	AaPoints               mysql.ColumnInteger
	Hp                     mysql.ColumnInteger
	Mana                   mysql.ColumnInteger
	Endurance              mysql.ColumnInteger
	Ac                     mysql.ColumnInteger
	Strength               mysql.ColumnInteger
	Stamina                mysql.ColumnInteger
	Dexterity              mysql.ColumnInteger
	Agility                mysql.ColumnInteger
	Intelligence           mysql.ColumnInteger
	Wisdom                 mysql.ColumnInteger
	Charisma               mysql.ColumnInteger
	MagicResist            mysql.ColumnInteger
	FireResist             mysql.ColumnInteger
	ColdResist             mysql.ColumnInteger
	PoisonResist           mysql.ColumnInteger
	DiseaseResist          mysql.ColumnInteger
	CorruptionResist       mysql.ColumnInteger
	HeroicStrength         mysql.ColumnInteger
	HeroicStamina          mysql.ColumnInteger
	HeroicDexterity        mysql.ColumnInteger
	HeroicAgility          mysql.ColumnInteger
	HeroicIntelligence     mysql.ColumnInteger
	HeroicWisdom           mysql.ColumnInteger
	HeroicCharisma         mysql.ColumnInteger
	HeroicMagicResist      mysql.ColumnInteger
	HeroicFireResist       mysql.ColumnInteger
	HeroicColdResist       mysql.ColumnInteger
	HeroicPoisonResist     mysql.ColumnInteger
	HeroicDiseaseResist    mysql.ColumnInteger
	HeroicCorruptionResist mysql.ColumnInteger
	Haste                  mysql.ColumnInteger
	Accuracy               mysql.ColumnInteger
	Attack                 mysql.ColumnInteger
	Avoidance              mysql.ColumnInteger
	Clairvoyance           mysql.ColumnInteger
	CombatEffects          mysql.ColumnInteger
	DamageShieldMitigation mysql.ColumnInteger
	DamageShield           mysql.ColumnInteger
	DotShielding           mysql.ColumnInteger
	HpRegen                mysql.ColumnInteger
	ManaRegen              mysql.ColumnInteger
	EnduranceRegen         mysql.ColumnInteger
	Shielding              mysql.ColumnInteger
	SpellDamage            mysql.ColumnInteger
	SpellShielding         mysql.ColumnInteger
	Strikethrough          mysql.ColumnInteger
	StunResist             mysql.ColumnInteger
	Backstab               mysql.ColumnInteger
	Wind                   mysql.ColumnInteger
	Brass                  mysql.ColumnInteger
	String                 mysql.ColumnInteger
	Percussion             mysql.ColumnInteger
	Singing                mysql.ColumnInteger
	Baking                 mysql.ColumnInteger
	Alchemy                mysql.ColumnInteger
	Tailoring              mysql.ColumnInteger
	Blacksmithing          mysql.ColumnInteger
	Fletching              mysql.ColumnInteger
	Brewing                mysql.ColumnInteger
	Jewelry                mysql.ColumnInteger
	Pottery                mysql.ColumnInteger
	Research               mysql.ColumnInteger
	Alcohol                mysql.ColumnInteger
	Fishing                mysql.ColumnInteger
	Tinkering              mysql.ColumnInteger
	CreatedAt              mysql.ColumnTimestamp
	UpdatedAt              mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterStatsRecordTable struct {
	characterStatsRecordTable

	NEW characterStatsRecordTable
}

// AS creates new CharacterStatsRecordTable with assigned alias
func (a CharacterStatsRecordTable) AS(alias string) *CharacterStatsRecordTable {
	return newCharacterStatsRecordTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterStatsRecordTable with assigned schema name
func (a CharacterStatsRecordTable) FromSchema(schemaName string) *CharacterStatsRecordTable {
	return newCharacterStatsRecordTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterStatsRecordTable with assigned table prefix
func (a CharacterStatsRecordTable) WithPrefix(prefix string) *CharacterStatsRecordTable {
	return newCharacterStatsRecordTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterStatsRecordTable with assigned table suffix
func (a CharacterStatsRecordTable) WithSuffix(suffix string) *CharacterStatsRecordTable {
	return newCharacterStatsRecordTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterStatsRecordTable(schemaName, tableName, alias string) *CharacterStatsRecordTable {
	return &CharacterStatsRecordTable{
		characterStatsRecordTable: newCharacterStatsRecordTableImpl(schemaName, tableName, alias),
		NEW:                       newCharacterStatsRecordTableImpl("", "new", ""),
	}
}

func newCharacterStatsRecordTableImpl(schemaName, tableName, alias string) characterStatsRecordTable {
	var (
		CharacterIDColumn            = mysql.IntegerColumn("character_id")
		NameColumn                   = mysql.StringColumn("name")
		StatusColumn                 = mysql.IntegerColumn("status")
		LevelColumn                  = mysql.IntegerColumn("level")
		ClassColumn                  = mysql.IntegerColumn("class")
		RaceColumn                   = mysql.IntegerColumn("race")
		AaPointsColumn               = mysql.IntegerColumn("aa_points")
		HpColumn                     = mysql.IntegerColumn("hp")
		ManaColumn                   = mysql.IntegerColumn("mana")
		EnduranceColumn              = mysql.IntegerColumn("endurance")
		AcColumn                     = mysql.IntegerColumn("ac")
		StrengthColumn               = mysql.IntegerColumn("strength")
		StaminaColumn                = mysql.IntegerColumn("stamina")
		DexterityColumn              = mysql.IntegerColumn("dexterity")
		AgilityColumn                = mysql.IntegerColumn("agility")
		IntelligenceColumn           = mysql.IntegerColumn("intelligence")
		WisdomColumn                 = mysql.IntegerColumn("wisdom")
		CharismaColumn               = mysql.IntegerColumn("charisma")
		MagicResistColumn            = mysql.IntegerColumn("magic_resist")
		FireResistColumn             = mysql.IntegerColumn("fire_resist")
		ColdResistColumn             = mysql.IntegerColumn("cold_resist")
		PoisonResistColumn           = mysql.IntegerColumn("poison_resist")
		DiseaseResistColumn          = mysql.IntegerColumn("disease_resist")
		CorruptionResistColumn       = mysql.IntegerColumn("corruption_resist")
		HeroicStrengthColumn         = mysql.IntegerColumn("heroic_strength")
		HeroicStaminaColumn          = mysql.IntegerColumn("heroic_stamina")
		HeroicDexterityColumn        = mysql.IntegerColumn("heroic_dexterity")
		HeroicAgilityColumn          = mysql.IntegerColumn("heroic_agility")
		HeroicIntelligenceColumn     = mysql.IntegerColumn("heroic_intelligence")
		HeroicWisdomColumn           = mysql.IntegerColumn("heroic_wisdom")
		HeroicCharismaColumn         = mysql.IntegerColumn("heroic_charisma")
		HeroicMagicResistColumn      = mysql.IntegerColumn("heroic_magic_resist")
		HeroicFireResistColumn       = mysql.IntegerColumn("heroic_fire_resist")
		HeroicColdResistColumn       = mysql.IntegerColumn("heroic_cold_resist")
		HeroicPoisonResistColumn     = mysql.IntegerColumn("heroic_poison_resist")
		HeroicDiseaseResistColumn    = mysql.IntegerColumn("heroic_disease_resist")
		HeroicCorruptionResistColumn = mysql.IntegerColumn("heroic_corruption_resist")
		HasteColumn                  = mysql.IntegerColumn("haste")
		AccuracyColumn               = mysql.IntegerColumn("accuracy")
		AttackColumn                 = mysql.IntegerColumn("attack")
		AvoidanceColumn              = mysql.IntegerColumn("avoidance")
		ClairvoyanceColumn           = mysql.IntegerColumn("clairvoyance")
		CombatEffectsColumn          = mysql.IntegerColumn("combat_effects")
		DamageShieldMitigationColumn = mysql.IntegerColumn("damage_shield_mitigation")
		DamageShieldColumn           = mysql.IntegerColumn("damage_shield")
		DotShieldingColumn           = mysql.IntegerColumn("dot_shielding")
		HpRegenColumn                = mysql.IntegerColumn("hp_regen")
		ManaRegenColumn              = mysql.IntegerColumn("mana_regen")
		EnduranceRegenColumn         = mysql.IntegerColumn("endurance_regen")
		ShieldingColumn              = mysql.IntegerColumn("shielding")
		SpellDamageColumn            = mysql.IntegerColumn("spell_damage")
		SpellShieldingColumn         = mysql.IntegerColumn("spell_shielding")
		StrikethroughColumn          = mysql.IntegerColumn("strikethrough")
		StunResistColumn             = mysql.IntegerColumn("stun_resist")
		BackstabColumn               = mysql.IntegerColumn("backstab")
		WindColumn                   = mysql.IntegerColumn("wind")
		BrassColumn                  = mysql.IntegerColumn("brass")
		StringColumn                 = mysql.IntegerColumn("string")
		PercussionColumn             = mysql.IntegerColumn("percussion")
		SingingColumn                = mysql.IntegerColumn("singing")
		BakingColumn                 = mysql.IntegerColumn("baking")
		AlchemyColumn                = mysql.IntegerColumn("alchemy")
		TailoringColumn              = mysql.IntegerColumn("tailoring")
		BlacksmithingColumn          = mysql.IntegerColumn("blacksmithing")
		FletchingColumn              = mysql.IntegerColumn("fletching")
		BrewingColumn                = mysql.IntegerColumn("brewing")
		JewelryColumn                = mysql.IntegerColumn("jewelry")
		PotteryColumn                = mysql.IntegerColumn("pottery")
		ResearchColumn               = mysql.IntegerColumn("research")
		AlcoholColumn                = mysql.IntegerColumn("alcohol")
		FishingColumn                = mysql.IntegerColumn("fishing")
		TinkeringColumn              = mysql.IntegerColumn("tinkering")
		CreatedAtColumn              = mysql.TimestampColumn("created_at")
		UpdatedAtColumn              = mysql.TimestampColumn("updated_at")
		allColumns                   = mysql.ColumnList{CharacterIDColumn, NameColumn, StatusColumn, LevelColumn, ClassColumn, RaceColumn, AaPointsColumn, HpColumn, ManaColumn, EnduranceColumn, AcColumn, StrengthColumn, StaminaColumn, DexterityColumn, AgilityColumn, IntelligenceColumn, WisdomColumn, CharismaColumn, MagicResistColumn, FireResistColumn, ColdResistColumn, PoisonResistColumn, DiseaseResistColumn, CorruptionResistColumn, HeroicStrengthColumn, HeroicStaminaColumn, HeroicDexterityColumn, HeroicAgilityColumn, HeroicIntelligenceColumn, HeroicWisdomColumn, HeroicCharismaColumn, HeroicMagicResistColumn, HeroicFireResistColumn, HeroicColdResistColumn, HeroicPoisonResistColumn, HeroicDiseaseResistColumn, HeroicCorruptionResistColumn, HasteColumn, AccuracyColumn, AttackColumn, AvoidanceColumn, ClairvoyanceColumn, CombatEffectsColumn, DamageShieldMitigationColumn, DamageShieldColumn, DotShieldingColumn, HpRegenColumn, ManaRegenColumn, EnduranceRegenColumn, ShieldingColumn, SpellDamageColumn, SpellShieldingColumn, StrikethroughColumn, StunResistColumn, BackstabColumn, WindColumn, BrassColumn, StringColumn, PercussionColumn, SingingColumn, BakingColumn, AlchemyColumn, TailoringColumn, BlacksmithingColumn, FletchingColumn, BrewingColumn, JewelryColumn, PotteryColumn, ResearchColumn, AlcoholColumn, FishingColumn, TinkeringColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns               = mysql.ColumnList{NameColumn, StatusColumn, LevelColumn, ClassColumn, RaceColumn, AaPointsColumn, HpColumn, ManaColumn, EnduranceColumn, AcColumn, StrengthColumn, StaminaColumn, DexterityColumn, AgilityColumn, IntelligenceColumn, WisdomColumn, CharismaColumn, MagicResistColumn, FireResistColumn, ColdResistColumn, PoisonResistColumn, DiseaseResistColumn, CorruptionResistColumn, HeroicStrengthColumn, HeroicStaminaColumn, HeroicDexterityColumn, HeroicAgilityColumn, HeroicIntelligenceColumn, HeroicWisdomColumn, HeroicCharismaColumn, HeroicMagicResistColumn, HeroicFireResistColumn, HeroicColdResistColumn, HeroicPoisonResistColumn, HeroicDiseaseResistColumn, HeroicCorruptionResistColumn, HasteColumn, AccuracyColumn, AttackColumn, AvoidanceColumn, ClairvoyanceColumn, CombatEffectsColumn, DamageShieldMitigationColumn, DamageShieldColumn, DotShieldingColumn, HpRegenColumn, ManaRegenColumn, EnduranceRegenColumn, ShieldingColumn, SpellDamageColumn, SpellShieldingColumn, StrikethroughColumn, StunResistColumn, BackstabColumn, WindColumn, BrassColumn, StringColumn, PercussionColumn, SingingColumn, BakingColumn, AlchemyColumn, TailoringColumn, BlacksmithingColumn, FletchingColumn, BrewingColumn, JewelryColumn, PotteryColumn, ResearchColumn, AlcoholColumn, FishingColumn, TinkeringColumn, CreatedAtColumn, UpdatedAtColumn}
		defaultColumns               = mysql.ColumnList{StatusColumn, LevelColumn, ClassColumn, RaceColumn, AaPointsColumn, HpColumn, ManaColumn, EnduranceColumn, AcColumn, StrengthColumn, StaminaColumn, DexterityColumn, AgilityColumn, IntelligenceColumn, WisdomColumn, CharismaColumn, MagicResistColumn, FireResistColumn, ColdResistColumn, PoisonResistColumn, DiseaseResistColumn, CorruptionResistColumn, HeroicStrengthColumn, HeroicStaminaColumn, HeroicDexterityColumn, HeroicAgilityColumn, HeroicIntelligenceColumn, HeroicWisdomColumn, HeroicCharismaColumn, HeroicMagicResistColumn, HeroicFireResistColumn, HeroicColdResistColumn, HeroicPoisonResistColumn, HeroicDiseaseResistColumn, HeroicCorruptionResistColumn, HasteColumn, AccuracyColumn, AttackColumn, AvoidanceColumn, ClairvoyanceColumn, CombatEffectsColumn, DamageShieldMitigationColumn, DamageShieldColumn, DotShieldingColumn, HpRegenColumn, ManaRegenColumn, EnduranceRegenColumn, ShieldingColumn, SpellDamageColumn, SpellShieldingColumn, StrikethroughColumn, StunResistColumn, BackstabColumn, WindColumn, BrassColumn, StringColumn, PercussionColumn, SingingColumn, BakingColumn, AlchemyColumn, TailoringColumn, BlacksmithingColumn, FletchingColumn, BrewingColumn, JewelryColumn, PotteryColumn, ResearchColumn, AlcoholColumn, FishingColumn, TinkeringColumn}
	)

	return characterStatsRecordTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharacterID:            CharacterIDColumn,
		Name:                   NameColumn,
		Status:                 StatusColumn,
		Level:                  LevelColumn,
		Class:                  ClassColumn,
		Race:                   RaceColumn,
		AaPoints:               AaPointsColumn,
		Hp:                     HpColumn,
		Mana:                   ManaColumn,
		Endurance:              EnduranceColumn,
		Ac:                     AcColumn,
		Strength:               StrengthColumn,
		Stamina:                StaminaColumn,
		Dexterity:              DexterityColumn,
		Agility:                AgilityColumn,
		Intelligence:           IntelligenceColumn,
		Wisdom:                 WisdomColumn,
		Charisma:               CharismaColumn,
		MagicResist:            MagicResistColumn,
		FireResist:             FireResistColumn,
		ColdResist:             ColdResistColumn,
		PoisonResist:           PoisonResistColumn,
		DiseaseResist:          DiseaseResistColumn,
		CorruptionResist:       CorruptionResistColumn,
		HeroicStrength:         HeroicStrengthColumn,
		HeroicStamina:          HeroicStaminaColumn,
		HeroicDexterity:        HeroicDexterityColumn,
		HeroicAgility:          HeroicAgilityColumn,
		HeroicIntelligence:     HeroicIntelligenceColumn,
		HeroicWisdom:           HeroicWisdomColumn,
		HeroicCharisma:         HeroicCharismaColumn,
		HeroicMagicResist:      HeroicMagicResistColumn,
		HeroicFireResist:       HeroicFireResistColumn,
		HeroicColdResist:       HeroicColdResistColumn,
		HeroicPoisonResist:     HeroicPoisonResistColumn,
		HeroicDiseaseResist:    HeroicDiseaseResistColumn,
		HeroicCorruptionResist: HeroicCorruptionResistColumn,
		Haste:                  HasteColumn,
		Accuracy:               AccuracyColumn,
		Attack:                 AttackColumn,
		Avoidance:              AvoidanceColumn,
		Clairvoyance:           ClairvoyanceColumn,
		CombatEffects:          CombatEffectsColumn,
		DamageShieldMitigation: DamageShieldMitigationColumn,
		DamageShield:           DamageShieldColumn,
		DotShielding:           DotShieldingColumn,
		HpRegen:                HpRegenColumn,
		ManaRegen:              ManaRegenColumn,
		EnduranceRegen:         EnduranceRegenColumn,
		Shielding:              ShieldingColumn,
		SpellDamage:            SpellDamageColumn,
		SpellShielding:         SpellShieldingColumn,
		Strikethrough:          StrikethroughColumn,
		StunResist:             StunResistColumn,
		Backstab:               BackstabColumn,
		Wind:                   WindColumn,
		Brass:                  BrassColumn,
		String:                 StringColumn,
		Percussion:             PercussionColumn,
		Singing:                SingingColumn,
		Baking:                 BakingColumn,
		Alchemy:                AlchemyColumn,
		Tailoring:              TailoringColumn,
		Blacksmithing:          BlacksmithingColumn,
		Fletching:              FletchingColumn,
		Brewing:                BrewingColumn,
		Jewelry:                JewelryColumn,
		Pottery:                PotteryColumn,
		Research:               ResearchColumn,
		Alcohol:                AlcoholColumn,
		Fishing:                FishingColumn,
		Tinkering:              TinkeringColumn,
		CreatedAt:              CreatedAtColumn,
		UpdatedAt:              UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
