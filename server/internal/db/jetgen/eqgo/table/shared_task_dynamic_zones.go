//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SharedTaskDynamicZones = newSharedTaskDynamicZonesTable("eqgo", "shared_task_dynamic_zones", "")

type sharedTaskDynamicZonesTable struct {
	mysql.Table

	// Columns
	SharedTaskID  mysql.ColumnInteger
	DynamicZoneID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type SharedTaskDynamicZonesTable struct {
	sharedTaskDynamicZonesTable

	NEW sharedTaskDynamicZonesTable
}

// AS creates new SharedTaskDynamicZonesTable with assigned alias
func (a SharedTaskDynamicZonesTable) AS(alias string) *SharedTaskDynamicZonesTable {
	return newSharedTaskDynamicZonesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SharedTaskDynamicZonesTable with assigned schema name
func (a SharedTaskDynamicZonesTable) FromSchema(schemaName string) *SharedTaskDynamicZonesTable {
	return newSharedTaskDynamicZonesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SharedTaskDynamicZonesTable with assigned table prefix
func (a SharedTaskDynamicZonesTable) WithPrefix(prefix string) *SharedTaskDynamicZonesTable {
	return newSharedTaskDynamicZonesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SharedTaskDynamicZonesTable with assigned table suffix
func (a SharedTaskDynamicZonesTable) WithSuffix(suffix string) *SharedTaskDynamicZonesTable {
	return newSharedTaskDynamicZonesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSharedTaskDynamicZonesTable(schemaName, tableName, alias string) *SharedTaskDynamicZonesTable {
	return &SharedTaskDynamicZonesTable{
		sharedTaskDynamicZonesTable: newSharedTaskDynamicZonesTableImpl(schemaName, tableName, alias),
		NEW:                         newSharedTaskDynamicZonesTableImpl("", "new", ""),
	}
}

func newSharedTaskDynamicZonesTableImpl(schemaName, tableName, alias string) sharedTaskDynamicZonesTable {
	var (
		SharedTaskIDColumn  = mysql.IntegerColumn("shared_task_id")
		DynamicZoneIDColumn = mysql.IntegerColumn("dynamic_zone_id")
		allColumns          = mysql.ColumnList{SharedTaskIDColumn, DynamicZoneIDColumn}
		mutableColumns      = mysql.ColumnList{}
		defaultColumns      = mysql.ColumnList{}
	)

	return sharedTaskDynamicZonesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SharedTaskID:  SharedTaskIDColumn,
		DynamicZoneID: DynamicZoneIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
