//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DiscordWebhooks = newDiscordWebhooksTable("eqgo", "discord_webhooks", "")

type discordWebhooksTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	WebhookName mysql.ColumnString
	WebhookURL  mysql.ColumnString
	CreatedAt   mysql.ColumnTimestamp
	DeletedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type DiscordWebhooksTable struct {
	discordWebhooksTable

	NEW discordWebhooksTable
}

// AS creates new DiscordWebhooksTable with assigned alias
func (a DiscordWebhooksTable) AS(alias string) *DiscordWebhooksTable {
	return newDiscordWebhooksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DiscordWebhooksTable with assigned schema name
func (a DiscordWebhooksTable) FromSchema(schemaName string) *DiscordWebhooksTable {
	return newDiscordWebhooksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DiscordWebhooksTable with assigned table prefix
func (a DiscordWebhooksTable) WithPrefix(prefix string) *DiscordWebhooksTable {
	return newDiscordWebhooksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DiscordWebhooksTable with assigned table suffix
func (a DiscordWebhooksTable) WithSuffix(suffix string) *DiscordWebhooksTable {
	return newDiscordWebhooksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDiscordWebhooksTable(schemaName, tableName, alias string) *DiscordWebhooksTable {
	return &DiscordWebhooksTable{
		discordWebhooksTable: newDiscordWebhooksTableImpl(schemaName, tableName, alias),
		NEW:                  newDiscordWebhooksTableImpl("", "new", ""),
	}
}

func newDiscordWebhooksTableImpl(schemaName, tableName, alias string) discordWebhooksTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		WebhookNameColumn = mysql.StringColumn("webhook_name")
		WebhookURLColumn  = mysql.StringColumn("webhook_url")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		DeletedAtColumn   = mysql.TimestampColumn("deleted_at")
		allColumns        = mysql.ColumnList{IDColumn, WebhookNameColumn, WebhookURLColumn, CreatedAtColumn, DeletedAtColumn}
		mutableColumns    = mysql.ColumnList{WebhookNameColumn, WebhookURLColumn, CreatedAtColumn, DeletedAtColumn}
		defaultColumns    = mysql.ColumnList{}
	)

	return discordWebhooksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		WebhookName: WebhookNameColumn,
		WebhookURL:  WebhookURLColumn,
		CreatedAt:   CreatedAtColumn,
		DeletedAt:   DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
