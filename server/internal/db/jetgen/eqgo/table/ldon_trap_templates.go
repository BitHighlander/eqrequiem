//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LdonTrapTemplates = newLdonTrapTemplatesTable("eqgo", "ldon_trap_templates", "")

type ldonTrapTemplatesTable struct {
	mysql.Table

	// Columns
	ID      mysql.ColumnInteger
	Type    mysql.ColumnInteger
	SpellID mysql.ColumnInteger
	Skill   mysql.ColumnInteger
	Locked  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type LdonTrapTemplatesTable struct {
	ldonTrapTemplatesTable

	NEW ldonTrapTemplatesTable
}

// AS creates new LdonTrapTemplatesTable with assigned alias
func (a LdonTrapTemplatesTable) AS(alias string) *LdonTrapTemplatesTable {
	return newLdonTrapTemplatesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LdonTrapTemplatesTable with assigned schema name
func (a LdonTrapTemplatesTable) FromSchema(schemaName string) *LdonTrapTemplatesTable {
	return newLdonTrapTemplatesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LdonTrapTemplatesTable with assigned table prefix
func (a LdonTrapTemplatesTable) WithPrefix(prefix string) *LdonTrapTemplatesTable {
	return newLdonTrapTemplatesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LdonTrapTemplatesTable with assigned table suffix
func (a LdonTrapTemplatesTable) WithSuffix(suffix string) *LdonTrapTemplatesTable {
	return newLdonTrapTemplatesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLdonTrapTemplatesTable(schemaName, tableName, alias string) *LdonTrapTemplatesTable {
	return &LdonTrapTemplatesTable{
		ldonTrapTemplatesTable: newLdonTrapTemplatesTableImpl(schemaName, tableName, alias),
		NEW:                    newLdonTrapTemplatesTableImpl("", "new", ""),
	}
}

func newLdonTrapTemplatesTableImpl(schemaName, tableName, alias string) ldonTrapTemplatesTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		TypeColumn     = mysql.IntegerColumn("type")
		SpellIDColumn  = mysql.IntegerColumn("spell_id")
		SkillColumn    = mysql.IntegerColumn("skill")
		LockedColumn   = mysql.IntegerColumn("locked")
		allColumns     = mysql.ColumnList{IDColumn, TypeColumn, SpellIDColumn, SkillColumn, LockedColumn}
		mutableColumns = mysql.ColumnList{TypeColumn, SpellIDColumn, SkillColumn, LockedColumn}
		defaultColumns = mysql.ColumnList{TypeColumn, SpellIDColumn, SkillColumn, LockedColumn}
	)

	return ldonTrapTemplatesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		Type:    TypeColumn,
		SpellID: SpellIDColumn,
		Skill:   SkillColumn,
		Locked:  LockedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
