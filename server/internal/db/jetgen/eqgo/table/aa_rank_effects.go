//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var AaRankEffects = newAaRankEffectsTable("eqgo", "aa_rank_effects", "")

type aaRankEffectsTable struct {
	mysql.Table

	// Columns
	RankID   mysql.ColumnInteger
	Slot     mysql.ColumnInteger
	EffectID mysql.ColumnInteger
	Base1    mysql.ColumnInteger
	Base2    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type AaRankEffectsTable struct {
	aaRankEffectsTable

	NEW aaRankEffectsTable
}

// AS creates new AaRankEffectsTable with assigned alias
func (a AaRankEffectsTable) AS(alias string) *AaRankEffectsTable {
	return newAaRankEffectsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AaRankEffectsTable with assigned schema name
func (a AaRankEffectsTable) FromSchema(schemaName string) *AaRankEffectsTable {
	return newAaRankEffectsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AaRankEffectsTable with assigned table prefix
func (a AaRankEffectsTable) WithPrefix(prefix string) *AaRankEffectsTable {
	return newAaRankEffectsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AaRankEffectsTable with assigned table suffix
func (a AaRankEffectsTable) WithSuffix(suffix string) *AaRankEffectsTable {
	return newAaRankEffectsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAaRankEffectsTable(schemaName, tableName, alias string) *AaRankEffectsTable {
	return &AaRankEffectsTable{
		aaRankEffectsTable: newAaRankEffectsTableImpl(schemaName, tableName, alias),
		NEW:                newAaRankEffectsTableImpl("", "new", ""),
	}
}

func newAaRankEffectsTableImpl(schemaName, tableName, alias string) aaRankEffectsTable {
	var (
		RankIDColumn   = mysql.IntegerColumn("rank_id")
		SlotColumn     = mysql.IntegerColumn("slot")
		EffectIDColumn = mysql.IntegerColumn("effect_id")
		Base1Column    = mysql.IntegerColumn("base1")
		Base2Column    = mysql.IntegerColumn("base2")
		allColumns     = mysql.ColumnList{RankIDColumn, SlotColumn, EffectIDColumn, Base1Column, Base2Column}
		mutableColumns = mysql.ColumnList{EffectIDColumn, Base1Column, Base2Column}
		defaultColumns = mysql.ColumnList{SlotColumn, EffectIDColumn, Base1Column, Base2Column}
	)

	return aaRankEffectsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		RankID:   RankIDColumn,
		Slot:     SlotColumn,
		EffectID: EffectIDColumn,
		Base1:    Base1Column,
		Base2:    Base2Column,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
