//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PlayerEventMerchantPurchase = newPlayerEventMerchantPurchaseTable("eqgo", "player_event_merchant_purchase", "")

type playerEventMerchantPurchaseTable struct {
	mysql.Table

	// Columns
	ID                    mysql.ColumnInteger
	NpcID                 mysql.ColumnInteger
	MerchantName          mysql.ColumnString
	MerchantType          mysql.ColumnInteger
	ItemID                mysql.ColumnInteger
	ItemName              mysql.ColumnString
	Charges               mysql.ColumnInteger
	Cost                  mysql.ColumnInteger
	AlternateCurrencyID   mysql.ColumnInteger
	PlayerMoneyBalance    mysql.ColumnInteger
	PlayerCurrencyBalance mysql.ColumnInteger
	CreatedAt             mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PlayerEventMerchantPurchaseTable struct {
	playerEventMerchantPurchaseTable

	NEW playerEventMerchantPurchaseTable
}

// AS creates new PlayerEventMerchantPurchaseTable with assigned alias
func (a PlayerEventMerchantPurchaseTable) AS(alias string) *PlayerEventMerchantPurchaseTable {
	return newPlayerEventMerchantPurchaseTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PlayerEventMerchantPurchaseTable with assigned schema name
func (a PlayerEventMerchantPurchaseTable) FromSchema(schemaName string) *PlayerEventMerchantPurchaseTable {
	return newPlayerEventMerchantPurchaseTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PlayerEventMerchantPurchaseTable with assigned table prefix
func (a PlayerEventMerchantPurchaseTable) WithPrefix(prefix string) *PlayerEventMerchantPurchaseTable {
	return newPlayerEventMerchantPurchaseTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PlayerEventMerchantPurchaseTable with assigned table suffix
func (a PlayerEventMerchantPurchaseTable) WithSuffix(suffix string) *PlayerEventMerchantPurchaseTable {
	return newPlayerEventMerchantPurchaseTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPlayerEventMerchantPurchaseTable(schemaName, tableName, alias string) *PlayerEventMerchantPurchaseTable {
	return &PlayerEventMerchantPurchaseTable{
		playerEventMerchantPurchaseTable: newPlayerEventMerchantPurchaseTableImpl(schemaName, tableName, alias),
		NEW:                              newPlayerEventMerchantPurchaseTableImpl("", "new", ""),
	}
}

func newPlayerEventMerchantPurchaseTableImpl(schemaName, tableName, alias string) playerEventMerchantPurchaseTable {
	var (
		IDColumn                    = mysql.IntegerColumn("id")
		NpcIDColumn                 = mysql.IntegerColumn("npc_id")
		MerchantNameColumn          = mysql.StringColumn("merchant_name")
		MerchantTypeColumn          = mysql.IntegerColumn("merchant_type")
		ItemIDColumn                = mysql.IntegerColumn("item_id")
		ItemNameColumn              = mysql.StringColumn("item_name")
		ChargesColumn               = mysql.IntegerColumn("charges")
		CostColumn                  = mysql.IntegerColumn("cost")
		AlternateCurrencyIDColumn   = mysql.IntegerColumn("alternate_currency_id")
		PlayerMoneyBalanceColumn    = mysql.IntegerColumn("player_money_balance")
		PlayerCurrencyBalanceColumn = mysql.IntegerColumn("player_currency_balance")
		CreatedAtColumn             = mysql.TimestampColumn("created_at")
		allColumns                  = mysql.ColumnList{IDColumn, NpcIDColumn, MerchantNameColumn, MerchantTypeColumn, ItemIDColumn, ItemNameColumn, ChargesColumn, CostColumn, AlternateCurrencyIDColumn, PlayerMoneyBalanceColumn, PlayerCurrencyBalanceColumn, CreatedAtColumn}
		mutableColumns              = mysql.ColumnList{NpcIDColumn, MerchantNameColumn, MerchantTypeColumn, ItemIDColumn, ItemNameColumn, ChargesColumn, CostColumn, AlternateCurrencyIDColumn, PlayerMoneyBalanceColumn, PlayerCurrencyBalanceColumn, CreatedAtColumn}
		defaultColumns              = mysql.ColumnList{NpcIDColumn, MerchantTypeColumn, ItemIDColumn, ChargesColumn, CostColumn, AlternateCurrencyIDColumn, PlayerMoneyBalanceColumn, PlayerCurrencyBalanceColumn}
	)

	return playerEventMerchantPurchaseTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                    IDColumn,
		NpcID:                 NpcIDColumn,
		MerchantName:          MerchantNameColumn,
		MerchantType:          MerchantTypeColumn,
		ItemID:                ItemIDColumn,
		ItemName:              ItemNameColumn,
		Charges:               ChargesColumn,
		Cost:                  CostColumn,
		AlternateCurrencyID:   AlternateCurrencyIDColumn,
		PlayerMoneyBalance:    PlayerMoneyBalanceColumn,
		PlayerCurrencyBalance: PlayerCurrencyBalanceColumn,
		CreatedAt:             CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
