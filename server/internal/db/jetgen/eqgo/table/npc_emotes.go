//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var NpcEmotes = newNpcEmotesTable("eqgo", "npc_emotes", "")

type npcEmotesTable struct {
	mysql.Table

	// Columns
	ID      mysql.ColumnInteger
	Emoteid mysql.ColumnInteger
	Event   mysql.ColumnInteger
	Type    mysql.ColumnInteger
	Text    mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type NpcEmotesTable struct {
	npcEmotesTable

	NEW npcEmotesTable
}

// AS creates new NpcEmotesTable with assigned alias
func (a NpcEmotesTable) AS(alias string) *NpcEmotesTable {
	return newNpcEmotesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new NpcEmotesTable with assigned schema name
func (a NpcEmotesTable) FromSchema(schemaName string) *NpcEmotesTable {
	return newNpcEmotesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new NpcEmotesTable with assigned table prefix
func (a NpcEmotesTable) WithPrefix(prefix string) *NpcEmotesTable {
	return newNpcEmotesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new NpcEmotesTable with assigned table suffix
func (a NpcEmotesTable) WithSuffix(suffix string) *NpcEmotesTable {
	return newNpcEmotesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newNpcEmotesTable(schemaName, tableName, alias string) *NpcEmotesTable {
	return &NpcEmotesTable{
		npcEmotesTable: newNpcEmotesTableImpl(schemaName, tableName, alias),
		NEW:            newNpcEmotesTableImpl("", "new", ""),
	}
}

func newNpcEmotesTableImpl(schemaName, tableName, alias string) npcEmotesTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		EmoteidColumn  = mysql.IntegerColumn("emoteid")
		EventColumn    = mysql.IntegerColumn("event_")
		TypeColumn     = mysql.IntegerColumn("type")
		TextColumn     = mysql.StringColumn("text")
		allColumns     = mysql.ColumnList{IDColumn, EmoteidColumn, EventColumn, TypeColumn, TextColumn}
		mutableColumns = mysql.ColumnList{EmoteidColumn, EventColumn, TypeColumn, TextColumn}
		defaultColumns = mysql.ColumnList{EmoteidColumn, EventColumn, TypeColumn}
	)

	return npcEmotesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		Emoteid: EmoteidColumn,
		Event:   EventColumn,
		Type:    TypeColumn,
		Text:    TextColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
