//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GmIps = newGmIpsTable("eqgo", "gm_ips", "")

type gmIpsTable struct {
	mysql.Table

	// Columns
	Name      mysql.ColumnString
	AccountID mysql.ColumnInteger
	IPAddress mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GmIpsTable struct {
	gmIpsTable

	NEW gmIpsTable
}

// AS creates new GmIpsTable with assigned alias
func (a GmIpsTable) AS(alias string) *GmIpsTable {
	return newGmIpsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GmIpsTable with assigned schema name
func (a GmIpsTable) FromSchema(schemaName string) *GmIpsTable {
	return newGmIpsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GmIpsTable with assigned table prefix
func (a GmIpsTable) WithPrefix(prefix string) *GmIpsTable {
	return newGmIpsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GmIpsTable with assigned table suffix
func (a GmIpsTable) WithSuffix(suffix string) *GmIpsTable {
	return newGmIpsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGmIpsTable(schemaName, tableName, alias string) *GmIpsTable {
	return &GmIpsTable{
		gmIpsTable: newGmIpsTableImpl(schemaName, tableName, alias),
		NEW:        newGmIpsTableImpl("", "new", ""),
	}
}

func newGmIpsTableImpl(schemaName, tableName, alias string) gmIpsTable {
	var (
		NameColumn      = mysql.StringColumn("name")
		AccountIDColumn = mysql.IntegerColumn("account_id")
		IPAddressColumn = mysql.StringColumn("ip_address")
		allColumns      = mysql.ColumnList{NameColumn, AccountIDColumn, IPAddressColumn}
		mutableColumns  = mysql.ColumnList{NameColumn, AccountIDColumn, IPAddressColumn}
		defaultColumns  = mysql.ColumnList{}
	)

	return gmIpsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Name:      NameColumn,
		AccountID: AccountIDColumn,
		IPAddress: IPAddressColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
