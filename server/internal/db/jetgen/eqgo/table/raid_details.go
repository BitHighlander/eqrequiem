//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var RaidDetails = newRaidDetailsTable("eqgo", "raid_details", "")

type raidDetailsTable struct {
	mysql.Table

	// Columns
	Raidid               mysql.ColumnInteger
	Loottype             mysql.ColumnInteger
	Locked               mysql.ColumnBool
	Motd                 mysql.ColumnString
	MarkedNpc1EntityID   mysql.ColumnInteger
	MarkedNpc1ZoneID     mysql.ColumnInteger
	MarkedNpc1InstanceID mysql.ColumnInteger
	MarkedNpc2EntityID   mysql.ColumnInteger
	MarkedNpc2ZoneID     mysql.ColumnInteger
	MarkedNpc2InstanceID mysql.ColumnInteger
	MarkedNpc3EntityID   mysql.ColumnInteger
	MarkedNpc3ZoneID     mysql.ColumnInteger
	MarkedNpc3InstanceID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type RaidDetailsTable struct {
	raidDetailsTable

	NEW raidDetailsTable
}

// AS creates new RaidDetailsTable with assigned alias
func (a RaidDetailsTable) AS(alias string) *RaidDetailsTable {
	return newRaidDetailsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new RaidDetailsTable with assigned schema name
func (a RaidDetailsTable) FromSchema(schemaName string) *RaidDetailsTable {
	return newRaidDetailsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new RaidDetailsTable with assigned table prefix
func (a RaidDetailsTable) WithPrefix(prefix string) *RaidDetailsTable {
	return newRaidDetailsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new RaidDetailsTable with assigned table suffix
func (a RaidDetailsTable) WithSuffix(suffix string) *RaidDetailsTable {
	return newRaidDetailsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newRaidDetailsTable(schemaName, tableName, alias string) *RaidDetailsTable {
	return &RaidDetailsTable{
		raidDetailsTable: newRaidDetailsTableImpl(schemaName, tableName, alias),
		NEW:              newRaidDetailsTableImpl("", "new", ""),
	}
}

func newRaidDetailsTableImpl(schemaName, tableName, alias string) raidDetailsTable {
	var (
		RaididColumn               = mysql.IntegerColumn("raidid")
		LoottypeColumn             = mysql.IntegerColumn("loottype")
		LockedColumn               = mysql.BoolColumn("locked")
		MotdColumn                 = mysql.StringColumn("motd")
		MarkedNpc1EntityIDColumn   = mysql.IntegerColumn("marked_npc_1_entity_id")
		MarkedNpc1ZoneIDColumn     = mysql.IntegerColumn("marked_npc_1_zone_id")
		MarkedNpc1InstanceIDColumn = mysql.IntegerColumn("marked_npc_1_instance_id")
		MarkedNpc2EntityIDColumn   = mysql.IntegerColumn("marked_npc_2_entity_id")
		MarkedNpc2ZoneIDColumn     = mysql.IntegerColumn("marked_npc_2_zone_id")
		MarkedNpc2InstanceIDColumn = mysql.IntegerColumn("marked_npc_2_instance_id")
		MarkedNpc3EntityIDColumn   = mysql.IntegerColumn("marked_npc_3_entity_id")
		MarkedNpc3ZoneIDColumn     = mysql.IntegerColumn("marked_npc_3_zone_id")
		MarkedNpc3InstanceIDColumn = mysql.IntegerColumn("marked_npc_3_instance_id")
		allColumns                 = mysql.ColumnList{RaididColumn, LoottypeColumn, LockedColumn, MotdColumn, MarkedNpc1EntityIDColumn, MarkedNpc1ZoneIDColumn, MarkedNpc1InstanceIDColumn, MarkedNpc2EntityIDColumn, MarkedNpc2ZoneIDColumn, MarkedNpc2InstanceIDColumn, MarkedNpc3EntityIDColumn, MarkedNpc3ZoneIDColumn, MarkedNpc3InstanceIDColumn}
		mutableColumns             = mysql.ColumnList{LoottypeColumn, LockedColumn, MotdColumn, MarkedNpc1EntityIDColumn, MarkedNpc1ZoneIDColumn, MarkedNpc1InstanceIDColumn, MarkedNpc2EntityIDColumn, MarkedNpc2ZoneIDColumn, MarkedNpc2InstanceIDColumn, MarkedNpc3EntityIDColumn, MarkedNpc3ZoneIDColumn, MarkedNpc3InstanceIDColumn}
		defaultColumns             = mysql.ColumnList{RaididColumn, LoottypeColumn, LockedColumn, MarkedNpc1EntityIDColumn, MarkedNpc1ZoneIDColumn, MarkedNpc1InstanceIDColumn, MarkedNpc2EntityIDColumn, MarkedNpc2ZoneIDColumn, MarkedNpc2InstanceIDColumn, MarkedNpc3EntityIDColumn, MarkedNpc3ZoneIDColumn, MarkedNpc3InstanceIDColumn}
	)

	return raidDetailsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Raidid:               RaididColumn,
		Loottype:             LoottypeColumn,
		Locked:               LockedColumn,
		Motd:                 MotdColumn,
		MarkedNpc1EntityID:   MarkedNpc1EntityIDColumn,
		MarkedNpc1ZoneID:     MarkedNpc1ZoneIDColumn,
		MarkedNpc1InstanceID: MarkedNpc1InstanceIDColumn,
		MarkedNpc2EntityID:   MarkedNpc2EntityIDColumn,
		MarkedNpc2ZoneID:     MarkedNpc2ZoneIDColumn,
		MarkedNpc2InstanceID: MarkedNpc2InstanceIDColumn,
		MarkedNpc3EntityID:   MarkedNpc3EntityIDColumn,
		MarkedNpc3ZoneID:     MarkedNpc3ZoneIDColumn,
		MarkedNpc3InstanceID: MarkedNpc3InstanceIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
