//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterBandolier = newCharacterBandolierTable("eqgo", "character_bandolier", "")

type characterBandolierTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	BandolierID   mysql.ColumnInteger
	BandolierSlot mysql.ColumnInteger
	ItemID        mysql.ColumnInteger
	Icon          mysql.ColumnInteger
	BandolierName mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterBandolierTable struct {
	characterBandolierTable

	NEW characterBandolierTable
}

// AS creates new CharacterBandolierTable with assigned alias
func (a CharacterBandolierTable) AS(alias string) *CharacterBandolierTable {
	return newCharacterBandolierTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterBandolierTable with assigned schema name
func (a CharacterBandolierTable) FromSchema(schemaName string) *CharacterBandolierTable {
	return newCharacterBandolierTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterBandolierTable with assigned table prefix
func (a CharacterBandolierTable) WithPrefix(prefix string) *CharacterBandolierTable {
	return newCharacterBandolierTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterBandolierTable with assigned table suffix
func (a CharacterBandolierTable) WithSuffix(suffix string) *CharacterBandolierTable {
	return newCharacterBandolierTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterBandolierTable(schemaName, tableName, alias string) *CharacterBandolierTable {
	return &CharacterBandolierTable{
		characterBandolierTable: newCharacterBandolierTableImpl(schemaName, tableName, alias),
		NEW:                     newCharacterBandolierTableImpl("", "new", ""),
	}
}

func newCharacterBandolierTableImpl(schemaName, tableName, alias string) characterBandolierTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		BandolierIDColumn   = mysql.IntegerColumn("bandolier_id")
		BandolierSlotColumn = mysql.IntegerColumn("bandolier_slot")
		ItemIDColumn        = mysql.IntegerColumn("item_id")
		IconColumn          = mysql.IntegerColumn("icon")
		BandolierNameColumn = mysql.StringColumn("bandolier_name")
		allColumns          = mysql.ColumnList{IDColumn, BandolierIDColumn, BandolierSlotColumn, ItemIDColumn, IconColumn, BandolierNameColumn}
		mutableColumns      = mysql.ColumnList{ItemIDColumn, IconColumn, BandolierNameColumn}
		defaultColumns      = mysql.ColumnList{IDColumn, BandolierIDColumn, BandolierSlotColumn, ItemIDColumn, IconColumn, BandolierNameColumn}
	)

	return characterBandolierTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		BandolierID:   BandolierIDColumn,
		BandolierSlot: BandolierSlotColumn,
		ItemID:        ItemIDColumn,
		Icon:          IconColumn,
		BandolierName: BandolierNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
