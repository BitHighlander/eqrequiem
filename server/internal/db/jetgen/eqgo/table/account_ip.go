//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var AccountIP = newAccountIPTable("eqgo", "account_ip", "")

type accountIPTable struct {
	mysql.Table

	// Columns
	Accid    mysql.ColumnInteger
	IP       mysql.ColumnString
	Count    mysql.ColumnInteger
	Lastused mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type AccountIPTable struct {
	accountIPTable

	NEW accountIPTable
}

// AS creates new AccountIPTable with assigned alias
func (a AccountIPTable) AS(alias string) *AccountIPTable {
	return newAccountIPTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AccountIPTable with assigned schema name
func (a AccountIPTable) FromSchema(schemaName string) *AccountIPTable {
	return newAccountIPTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AccountIPTable with assigned table prefix
func (a AccountIPTable) WithPrefix(prefix string) *AccountIPTable {
	return newAccountIPTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AccountIPTable with assigned table suffix
func (a AccountIPTable) WithSuffix(suffix string) *AccountIPTable {
	return newAccountIPTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAccountIPTable(schemaName, tableName, alias string) *AccountIPTable {
	return &AccountIPTable{
		accountIPTable: newAccountIPTableImpl(schemaName, tableName, alias),
		NEW:            newAccountIPTableImpl("", "new", ""),
	}
}

func newAccountIPTableImpl(schemaName, tableName, alias string) accountIPTable {
	var (
		AccidColumn    = mysql.IntegerColumn("accid")
		IPColumn       = mysql.StringColumn("ip")
		CountColumn    = mysql.IntegerColumn("count")
		LastusedColumn = mysql.TimestampColumn("lastused")
		allColumns     = mysql.ColumnList{AccidColumn, IPColumn, CountColumn, LastusedColumn}
		mutableColumns = mysql.ColumnList{AccidColumn, IPColumn, CountColumn, LastusedColumn}
		defaultColumns = mysql.ColumnList{AccidColumn, IPColumn, CountColumn, LastusedColumn}
	)

	return accountIPTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Accid:    AccidColumn,
		IP:       IPColumn,
		Count:    CountColumn,
		Lastused: LastusedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
