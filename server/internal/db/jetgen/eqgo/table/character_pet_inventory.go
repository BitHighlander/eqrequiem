//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CharacterPetInventory = newCharacterPetInventoryTable("eqgo", "character_pet_inventory", "")

type characterPetInventoryTable struct {
	mysql.Table

	// Columns
	CharID mysql.ColumnInteger
	Pet    mysql.ColumnInteger
	Slot   mysql.ColumnInteger
	ItemID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type CharacterPetInventoryTable struct {
	characterPetInventoryTable

	NEW characterPetInventoryTable
}

// AS creates new CharacterPetInventoryTable with assigned alias
func (a CharacterPetInventoryTable) AS(alias string) *CharacterPetInventoryTable {
	return newCharacterPetInventoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CharacterPetInventoryTable with assigned schema name
func (a CharacterPetInventoryTable) FromSchema(schemaName string) *CharacterPetInventoryTable {
	return newCharacterPetInventoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CharacterPetInventoryTable with assigned table prefix
func (a CharacterPetInventoryTable) WithPrefix(prefix string) *CharacterPetInventoryTable {
	return newCharacterPetInventoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CharacterPetInventoryTable with assigned table suffix
func (a CharacterPetInventoryTable) WithSuffix(suffix string) *CharacterPetInventoryTable {
	return newCharacterPetInventoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCharacterPetInventoryTable(schemaName, tableName, alias string) *CharacterPetInventoryTable {
	return &CharacterPetInventoryTable{
		characterPetInventoryTable: newCharacterPetInventoryTableImpl(schemaName, tableName, alias),
		NEW:                        newCharacterPetInventoryTableImpl("", "new", ""),
	}
}

func newCharacterPetInventoryTableImpl(schemaName, tableName, alias string) characterPetInventoryTable {
	var (
		CharIDColumn   = mysql.IntegerColumn("char_id")
		PetColumn      = mysql.IntegerColumn("pet")
		SlotColumn     = mysql.IntegerColumn("slot")
		ItemIDColumn   = mysql.IntegerColumn("item_id")
		allColumns     = mysql.ColumnList{CharIDColumn, PetColumn, SlotColumn, ItemIDColumn}
		mutableColumns = mysql.ColumnList{ItemIDColumn}
		defaultColumns = mysql.ColumnList{}
	)

	return characterPetInventoryTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CharID: CharIDColumn,
		Pet:    PetColumn,
		Slot:   SlotColumn,
		ItemID: ItemIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
